[
  {
    "query_id": 1,
    "room_id": 1,
    "good_sql": "SELECT `Free Meal Count (K-12)` / `Enrollment (K-12)` FROM dataroom_eval_bird.california_schools.frpm WHERE `County Name` = 'Alameda' ORDER BY (CAST(`Free Meal Count (K-12)` AS REAL) / `Enrollment (K-12)`) DESC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 2,
    "room_id": 2,
    "good_sql": "SELECT `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)` FROM dataroom_eval_bird.california_schools.frpm WHERE `Educational Option Type` = 'Continuation School' AND `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)` IS NOT NULL ORDER BY `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)` ASC LIMIT 3",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 3,
    "room_id": 3,
    "good_sql": "SELECT T2.Zip FROM dataroom_eval_bird.california_schools.frpm AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`District Name` = 'Fresno County Office of Education' AND T1.`Charter School (Y/N)` = 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 4,
    "room_id": 4,
    "good_sql": "SELECT T2.MailStreet FROM dataroom_eval_bird.california_schools.frpm AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T1.`FRPM Count (K-12)` DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 5,
    "room_id": 5,
    "good_sql": "SELECT T2.Phone FROM dataroom_eval_bird.california_schools.frpm AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Charter Funding Type` = 'Directly funded' AND T1.`Charter School (Y/N)` = 1 AND T2.OpenDate > '2000-01-01'",
    "complexity": "Single Join"
  },
  {
    "query_id": 6,
    "room_id": 6,
    "good_sql": "SELECT COUNT(DISTINCT T2.School) FROM dataroom_eval_bird.california_schools.satscores AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.Virtual = 'F' AND T1.AvgScrMath < 400",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 7,
    "room_id": 7,
    "good_sql": "SELECT T2.School FROM dataroom_eval_bird.california_schools.satscores AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.Magnet = 1 AND T1.NumTstTakr > 500",
    "complexity": "Single Join"
  },
  {
    "query_id": 8,
    "room_id": 4,
    "good_sql": "SELECT T2.Phone FROM dataroom_eval_bird.california_schools.satscores AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 9,
    "room_id": 4,
    "good_sql": "SELECT NumTstTakr FROM dataroom_eval_bird.california_schools.satscores WHERE cds = ( SELECT CDSCode FROM dataroom_eval_bird.california_schools.frpm ORDER BY `FRPM Count (K-12)` DESC LIMIT 1 )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 10,
    "room_id": 4,
    "good_sql": "SELECT COUNT(T2.`School Code`) FROM dataroom_eval_bird.california_schools.satscores AS T1 INNER JOIN dataroom_eval_bird.california_schools.frpm AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath > 560 AND T2.`Charter Funding Type` = 'Directly funded'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 11,
    "room_id": 4,
    "good_sql": "SELECT T2.`FRPM Count (Ages 5-17)` FROM dataroom_eval_bird.california_schools.satscores AS T1 INNER JOIN dataroom_eval_bird.california_schools.frpm AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrRead DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 12,
    "room_id": 8,
    "good_sql": "SELECT T2.CDSCode FROM dataroom_eval_bird.california_schools.schools AS T1 INNER JOIN dataroom_eval_bird.california_schools.frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Enrollment (K-12)` + T2.`Enrollment (Ages 5-17)` > 500",
    "complexity": "Single Join"
  },
  {
    "query_id": 13,
    "room_id": 9,
    "good_sql": "SELECT MAX(CAST(T1.`Free Meal Count (Ages 5-17)` AS REAL) / T1.`Enrollment (Ages 5-17)`) FROM dataroom_eval_bird.california_schools.frpm AS T1 INNER JOIN dataroom_eval_bird.california_schools.satscores AS T2 ON T1.CDSCode = T2.cds WHERE CAST(T2.NumGE1500 AS REAL) / T2.NumTstTakr > 0.3",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 14,
    "room_id": 10,
    "good_sql": "SELECT T1.Phone FROM dataroom_eval_bird.california_schools.schools AS T1 INNER JOIN dataroom_eval_bird.california_schools.satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY CAST(T2.NumGE1500 AS REAL) / T2.NumTstTakr DESC LIMIT 3",
    "complexity": "Single Join"
  },
  {
    "query_id": 15,
    "room_id": 4,
    "good_sql": "SELECT T1.NCESSchool FROM dataroom_eval_bird.california_schools.schools AS T1 INNER JOIN dataroom_eval_bird.california_schools.frpm AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T2.`Enrollment (Ages 5-17)` DESC LIMIT 5",
    "complexity": "Single Join"
  },
  {
    "query_id": 16,
    "room_id": 4,
    "good_sql": "SELECT T1.District FROM dataroom_eval_bird.california_schools.schools AS T1 INNER JOIN dataroom_eval_bird.california_schools.satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.StatusType = 'Active' ORDER BY T2.AvgScrRead DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 17,
    "room_id": 4,
    "good_sql": "SELECT COUNT(T1.CDSCode) FROM dataroom_eval_bird.california_schools.schools AS T1 INNER JOIN dataroom_eval_bird.california_schools.satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.StatusType = 'Merged' AND T2.NumTstTakr < 100 AND T1.County = 'Alameda'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 18,
    "room_id": 4,
    "good_sql": "SELECT T1.CharterNum FROM dataroom_eval_bird.california_schools.schools AS T1 INNER JOIN dataroom_eval_bird.california_schools.satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrWrite = 499",
    "complexity": "Single Join"
  },
  {
    "query_id": 19,
    "room_id": 4,
    "good_sql": "SELECT COUNT(T1.CDSCode) FROM dataroom_eval_bird.california_schools.frpm AS T1 INNER JOIN dataroom_eval_bird.california_schools.satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.`Charter Funding Type` = 'Directly funded' AND T1.`County Name` = 'Contra Costa' AND T2.NumTstTakr <= 250",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 20,
    "room_id": 4,
    "good_sql": "SELECT T1.Phone FROM dataroom_eval_bird.california_schools.schools AS T1 INNER JOIN dataroom_eval_bird.california_schools.satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrMath DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 21,
    "room_id": 4,
    "good_sql": "SELECT COUNT(T1.`School Name`) FROM dataroom_eval_bird.california_schools.frpm AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Amador' AND T1.`Low Grade` = 9 AND T1.`High Grade` = 12",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 22,
    "room_id": 4,
    "good_sql": "SELECT COUNT(CDSCode) FROM dataroom_eval_bird.california_schools.frpm WHERE `County Name` = 'Los Angeles' AND `Free Meal Count (K-12)` > 500 AND `Free Meal Count (K-12)` < 700",
    "complexity": "Aggregation"
  },
  {
    "query_id": 23,
    "room_id": 4,
    "good_sql": "SELECT sname FROM dataroom_eval_bird.california_schools.satscores WHERE cname = 'Contra Costa' AND sname IS NOT NULL ORDER BY NumTstTakr DESC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 24,
    "room_id": 11,
    "good_sql": "SELECT T1.School, T1.StreetAbr FROM dataroom_eval_bird.california_schools.schools AS T1 INNER JOIN dataroom_eval_bird.california_schools.frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Enrollment (K-12)` - T2.`Enrollment (Ages 5-17)` > 30",
    "complexity": "Single Join"
  },
  {
    "query_id": 25,
    "room_id": 4,
    "good_sql": "SELECT T2.`School Name` FROM dataroom_eval_bird.california_schools.satscores AS T1 INNER JOIN dataroom_eval_bird.california_schools.frpm AS T2 ON T1.cds = T2.CDSCode WHERE CAST(T2.`Free Meal Count (K-12)` AS REAL) / T2.`Enrollment (K-12)` > 0.1 AND T1.NumGE1500 > 0",
    "complexity": "Single Join"
  },
  {
    "query_id": 26,
    "room_id": 12,
    "good_sql": "SELECT T1.sname, T2.`Charter Funding Type` FROM dataroom_eval_bird.california_schools.satscores AS T1 INNER JOIN dataroom_eval_bird.california_schools.frpm AS T2 ON T1.cds = T2.CDSCode WHERE T2.`District Name` LIKE 'Riverside%' GROUP BY T1.sname, T2.`Charter Funding Type` HAVING CAST(SUM(T1.AvgScrMath) AS REAL) / COUNT(T1.cds) > 400",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 27,
    "room_id": 13,
    "good_sql": "SELECT T1.`School Name`, T2.Zip, T2.Street, T2.City, T2.State FROM dataroom_eval_bird.california_schools.frpm AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Monterey' AND T1.`Free Meal Count (Ages 5-17)` > 800 AND T1.`School Type` = 'High Schools (Public)'",
    "complexity": "Single Join"
  },
  {
    "query_id": 28,
    "room_id": 14,
    "good_sql": "SELECT T2.School, T1.AvgScrWrite, T2.Phone, DATE_FORMAT(CAST(T2.OpenDate AS TIMESTAMP), 'yyyy'), DATE_FORMAT(CAST(T2.ClosedDate AS TIMESTAMP), 'yyyy') FROM dataroom_eval_bird.california_schools.schools AS T2 LEFT JOIN dataroom_eval_bird.california_schools.satscores AS T1 ON T2.CDSCode = T1.cds WHERE DATE_FORMAT(CAST(T2.OpenDate AS TIMESTAMP), 'yyyy') > '1991' AND DATE_FORMAT(CAST(T2.ClosedDate AS TIMESTAMP), 'yyyy') < '2000'",
    "complexity": "Single Join"
  },
  {
    "query_id": 29,
    "room_id": 15,
    "good_sql": "SELECT T2.School, T2.DOC FROM dataroom_eval_bird.california_schools.frpm AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.FundingType = 'Locally funded' AND (T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > (SELECT AVG(T3.`Enrollment (K-12)` - T3.`Enrollment (Ages 5-17)`) FROM dataroom_eval_bird.california_schools.frpm AS T3 INNER JOIN dataroom_eval_bird.california_schools.schools AS T4 ON T3.CDSCode = T4.CDSCode WHERE T4.FundingType = 'Locally funded')",
    "complexity": "Single Join, Subqueries, Aggregation"
  },
  {
    "query_id": 30,
    "room_id": 16,
    "good_sql": "SELECT T2.OpenDate FROM dataroom_eval_bird.california_schools.frpm AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T1.`Enrollment (K-12)` DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 31,
    "room_id": 17,
    "good_sql": "SELECT T2.City FROM dataroom_eval_bird.california_schools.frpm AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.CDSCode = T2.CDSCode GROUP BY T2.City ORDER BY SUM(T1.`Enrollment (K-12)`) ASC LIMIT 5",
    "complexity": "Single Join, Aggregation"
  },
  {
    "query_id": 32,
    "room_id": 18,
    "good_sql": "SELECT CAST(`Free Meal Count (K-12)` AS REAL) / `Enrollment (K-12)` FROM dataroom_eval_bird.california_schools.frpm ORDER BY `Enrollment (K-12)` DESC LIMIT 2 OFFSET 9",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 33,
    "room_id": 19,
    "good_sql": "SELECT CAST(T1.`FRPM Count (K-12)` AS REAL) / T1.`Enrollment (K-12)` FROM dataroom_eval_bird.california_schools.frpm AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.SOC = 66 ORDER BY T1.`FRPM Count (K-12)` DESC LIMIT 5",
    "complexity": "Single Join"
  },
  {
    "query_id": 34,
    "room_id": 4,
    "good_sql": "SELECT T2.Website, T1.`School Name` FROM dataroom_eval_bird.california_schools.frpm AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000 AND T2.Website IS NOT NULL",
    "complexity": "Single Join"
  },
  {
    "query_id": 35,
    "room_id": 2,
    "good_sql": "SELECT CAST(T2.`Free Meal Count (Ages 5-17)` AS REAL) / T2.`Enrollment (Ages 5-17)` FROM dataroom_eval_bird.california_schools.schools AS T1 INNER JOIN dataroom_eval_bird.california_schools.frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.AdmFName1 = 'Kacey' AND T1.AdmLName1 = 'Gibson'",
    "complexity": "Single Join"
  },
  {
    "query_id": 36,
    "room_id": 20,
    "good_sql": "SELECT T2.AdmEmail1 FROM dataroom_eval_bird.california_schools.frpm AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Charter School (Y/N)` = 1 ORDER BY T1.`Enrollment (K-12)` ASC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 37,
    "room_id": 21,
    "good_sql": "SELECT T2.AdmFName1, T2.AdmLName1, T2.AdmFName2, T2.AdmLName2, T2.AdmFName3, T2.AdmLName3 FROM dataroom_eval_bird.california_schools.satscores AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 38,
    "room_id": 22,
    "good_sql": "SELECT T2.Street, T2.City, T2.Zip, T2.State FROM dataroom_eval_bird.california_schools.satscores AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.cds = T2.CDSCode ORDER BY CAST(T1.NumGE1500 AS REAL) / T1.NumTstTakr ASC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 39,
    "room_id": 4,
    "good_sql": "SELECT T2.Website FROM dataroom_eval_bird.california_schools.satscores AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumTstTakr BETWEEN 2000 AND 3000 AND T2.County = 'Los Angeles'",
    "complexity": "Single Join"
  },
  {
    "query_id": 40,
    "room_id": 23,
    "good_sql": "SELECT AVG(T1.NumTstTakr) FROM dataroom_eval_bird.california_schools.satscores AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.cds = T2.CDSCode WHERE DATE_FORMAT(CAST(T2.OpenDate AS TIMESTAMP), 'yyyy') = '1980' AND T2.County = 'Fresno'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 41,
    "room_id": 24,
    "good_sql": "SELECT T2.Phone FROM dataroom_eval_bird.california_schools.satscores AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.District = 'Fresno Unified' AND T1.AvgScrRead IS NOT NULL ORDER BY T1.AvgScrRead ASC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 42,
    "room_id": 25,
    "good_sql": "SELECT T2.School FROM dataroom_eval_bird.california_schools.satscores AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.Virtual = 'F' ORDER BY T1.AvgScrRead DESC LIMIT 5",
    "complexity": "Single Join"
  },
  {
    "query_id": 43,
    "room_id": 4,
    "good_sql": "SELECT T2.EdOpsName FROM dataroom_eval_bird.california_schools.satscores AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrMath DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 44,
    "room_id": 26,
    "good_sql": "SELECT T1.AvgScrMath, T2.County FROM dataroom_eval_bird.california_schools.satscores AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath IS NOT NULL ORDER BY T1.AvgScrMath + T1.AvgScrRead + T1.AvgScrWrite ASC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 45,
    "room_id": 4,
    "good_sql": "SELECT T1.AvgScrWrite, T2.City FROM dataroom_eval_bird.california_schools.satscores AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 46,
    "room_id": 27,
    "good_sql": "SELECT T2.School, T1.AvgScrWrite FROM dataroom_eval_bird.california_schools.satscores AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.AdmFName1 = 'Ricci' AND T2.AdmLName1 = 'Ulrich'",
    "complexity": "Single Join"
  },
  {
    "query_id": 47,
    "room_id": 28,
    "good_sql": "SELECT T2.School FROM dataroom_eval_bird.california_schools.frpm AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.DOC = 31 ORDER BY T1.`Enrollment (K-12)` DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 48,
    "room_id": 29,
    "good_sql": "SELECT CAST(COUNT(School) AS REAL) / 12 FROM dataroom_eval_bird.california_schools.schools WHERE DOC = 52 AND County = 'Alameda' AND DATE_FORMAT(CAST(OpenDate AS TIMESTAMP), 'yyyy') = '1980'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 49,
    "room_id": 30,
    "good_sql": "SELECT CAST(SUM(CASE WHEN DOC = 54 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN DOC = 52 THEN 1 ELSE 0 END) FROM dataroom_eval_bird.california_schools.schools WHERE StatusType = 'Merged' AND County = 'Orange'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 50,
    "room_id": 31,
    "good_sql": "SELECT DISTINCT County, School, ClosedDate FROM dataroom_eval_bird.california_schools.schools WHERE County = ( SELECT County FROM dataroom_eval_bird.california_schools.schools WHERE StatusType = 'Closed' GROUP BY County ORDER BY COUNT(School) DESC LIMIT 1 ) AND StatusType = 'Closed' AND school IS NOT NULL",
    "complexity": "Subqueries"
  },
  {
    "query_id": 51,
    "room_id": 32,
    "good_sql": "SELECT T2.MailStreet, T2.School FROM dataroom_eval_bird.california_schools.satscores AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrMath DESC LIMIT 5",
    "complexity": "Single Join"
  },
  {
    "query_id": 52,
    "room_id": 4,
    "good_sql": "SELECT T2.MailStreet, T2.School FROM dataroom_eval_bird.california_schools.satscores AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrRead IS NOT NULL ORDER BY T1.AvgScrRead ASC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 53,
    "room_id": 33,
    "good_sql": "SELECT COUNT(T1.cds) FROM dataroom_eval_bird.california_schools.satscores AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.MailCity = 'Lakeport' AND (T1.AvgScrRead + T1.AvgScrMath + T1.AvgScrWrite) >= 1500",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 54,
    "room_id": 4,
    "good_sql": "SELECT T1.NumTstTakr FROM dataroom_eval_bird.california_schools.satscores AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.MailCity = 'Fresno'",
    "complexity": "Single Join"
  },
  {
    "query_id": 55,
    "room_id": 4,
    "good_sql": "SELECT School, MailZip FROM dataroom_eval_bird.california_schools.schools WHERE AdmFName1 = 'Avetik' AND AdmLName1 = 'Atoian'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 56,
    "room_id": 34,
    "good_sql": "SELECT CAST(SUM(CASE WHEN County = 'Colusa' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN County = 'Humboldt' THEN 1 ELSE 0 END) FROM dataroom_eval_bird.california_schools.schools WHERE MailState = 'CA'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 57,
    "room_id": 4,
    "good_sql": "SELECT COUNT(CDSCode) FROM dataroom_eval_bird.california_schools.schools WHERE City = 'San Joaquin' AND MailState = 'CA' AND StatusType = 'Active'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 58,
    "room_id": 4,
    "good_sql": "SELECT T2.Phone, T2.Ext FROM dataroom_eval_bird.california_schools.satscores AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrWrite DESC LIMIT 332",
    "complexity": "Single Join"
  },
  {
    "query_id": 59,
    "room_id": 4,
    "good_sql": "SELECT Phone, Ext, School FROM dataroom_eval_bird.california_schools.schools WHERE Zip = '95203-3704'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 60,
    "room_id": 4,
    "good_sql": "SELECT Website FROM dataroom_eval_bird.california_schools.schools WHERE (AdmFName1 = 'Mike' AND AdmLName1 = 'Larson') OR (AdmFName1 = 'Dante' AND AdmLName1 = 'Alvarez')",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 61,
    "room_id": 35,
    "good_sql": "SELECT Website FROM dataroom_eval_bird.california_schools.schools WHERE County = 'San Joaquin' AND Virtual = 'P' AND Charter = 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 62,
    "room_id": 36,
    "good_sql": "SELECT COUNT(School) FROM dataroom_eval_bird.california_schools.schools WHERE DOC = 52 AND Charter = 1 AND City = 'Hickman'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 63,
    "room_id": 37,
    "good_sql": "SELECT COUNT(T2.School) FROM dataroom_eval_bird.california_schools.frpm AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T2.Charter = 0 AND CAST(T1.`Free Meal Count (K-12)` AS REAL) * 100 / T1.`Enrollment (K-12)` < 0.18",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 64,
    "room_id": 38,
    "good_sql": "SELECT AdmFName1, AdmLName1, School, City FROM dataroom_eval_bird.california_schools.schools WHERE Charter = 1 AND CharterNum = '00D2'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 65,
    "room_id": 4,
    "good_sql": "SELECT COUNT(*) FROM dataroom_eval_bird.california_schools.schools WHERE CharterNum = '00D4' AND MailCity = 'Hickman'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 66,
    "room_id": 39,
    "good_sql": "SELECT CAST(SUM(CASE WHEN FundingType = 'Locally funded' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN FundingType != 'Locally funded' THEN 1 ELSE 0 END) FROM dataroom_eval_bird.california_schools.schools WHERE County = 'Santa Clara' AND Charter = 1",
    "complexity": "Aggregation"
  },
  {
    "query_id": 67,
    "room_id": 40,
    "good_sql": "SELECT COUNT(School) FROM dataroom_eval_bird.california_schools.schools WHERE DATE_FORMAT(CAST(OpenDate AS TIMESTAMP), 'yyyy') BETWEEN '2000' AND '2005' AND County = 'Stanislaus' AND FundingType = 'Directly funded'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 68,
    "room_id": 4,
    "good_sql": "SELECT COUNT(School) FROM dataroom_eval_bird.california_schools.schools WHERE DATE_FORMAT(CAST(ClosedDate AS TIMESTAMP), 'yyyy') = '1989' AND City = 'San Francisco' AND DOCType = 'Community College District'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 69,
    "room_id": 41,
    "good_sql": "SELECT County FROM dataroom_eval_bird.california_schools.schools WHERE DATE_FORMAT(CAST(ClosedDate AS TIMESTAMP), 'yyyy') BETWEEN '1980' AND '1989' AND StatusType = 'Closed' AND SOC = 11 GROUP BY County ORDER BY COUNT(School) DESC LIMIT 1",
    "complexity": "Aggregation"
  },
  {
    "query_id": 70,
    "room_id": 42,
    "good_sql": "SELECT NCESDist FROM dataroom_eval_bird.california_schools.schools WHERE SOC = 31",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 71,
    "room_id": 4,
    "good_sql": "SELECT COUNT(School) FROM dataroom_eval_bird.california_schools.schools WHERE (StatusType = 'Closed' OR StatusType = 'Active') AND County = 'Alpine'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 72,
    "room_id": 43,
    "good_sql": "SELECT T1.`District Code` FROM dataroom_eval_bird.california_schools.frpm AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.City = 'Fresno' AND T2.Magnet = 0",
    "complexity": "Single Join"
  },
  {
    "query_id": 73,
    "room_id": 44,
    "good_sql": "SELECT T1.`Enrollment (Ages 5-17)` FROM dataroom_eval_bird.california_schools.frpm AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.EdOpsCode = 'SSS' AND T2.City = 'Fremont' AND T1.`Academic Year` = '2014-2015'",
    "complexity": "Single Join"
  },
  {
    "query_id": 74,
    "room_id": 4,
    "good_sql": "SELECT T1.`FRPM Count (Ages 5-17)` FROM dataroom_eval_bird.california_schools.frpm AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.MailStreet = 'PO Box 1040' AND T2.SOCType = 'Youth Authority Facilities'",
    "complexity": "Single Join"
  },
  {
    "query_id": 75,
    "room_id": 45,
    "good_sql": "SELECT MIN(T1.`Low Grade`) FROM dataroom_eval_bird.california_schools.frpm AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.NCESDist = 613360 AND T2.EdOpsCode = 'SPECON'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 76,
    "room_id": 4,
    "good_sql": "SELECT T2.EILName, T2.School FROM dataroom_eval_bird.california_schools.frpm AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`NSLP Provision Status` = 'Breakfast Provision 2' AND T1.`County Code` = 37",
    "complexity": "Single Join"
  },
  {
    "query_id": 77,
    "room_id": 46,
    "good_sql": "SELECT T2.City FROM dataroom_eval_bird.california_schools.frpm AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`NSLP Provision Status` = 'Lunch Provision 2' AND T2.County = 'Merced' AND T1.`Low Grade` = 9 AND T1.`High Grade` = 12 AND T2.EILCode = 'HS'",
    "complexity": "Single Join"
  },
  {
    "query_id": 78,
    "room_id": 47,
    "good_sql": "SELECT T2.School, T1.`FRPM Count (Ages 5-17)` * 100 / T1.`Enrollment (Ages 5-17)` FROM dataroom_eval_bird.california_schools.frpm AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T2.GSserved = 'K-9'",
    "complexity": "Basic SQL, Single Join"
  },
  {
    "query_id": 79,
    "room_id": 4,
    "good_sql": "SELECT GSserved FROM dataroom_eval_bird.california_schools.schools WHERE City = 'Adelanto' GROUP BY GSserved ORDER BY COUNT(GSserved) DESC LIMIT 1",
    "complexity": "Aggregation"
  },
  {
    "query_id": 80,
    "room_id": 48,
    "good_sql": "SELECT County, COUNT(Virtual) FROM dataroom_eval_bird.california_schools.schools WHERE (County = 'San Diego' OR County = 'Santa Barbara') AND Virtual = 'F' GROUP BY County ORDER BY COUNT(Virtual) DESC LIMIT 1",
    "complexity": "Aggregation"
  },
  {
    "query_id": 81,
    "room_id": 4,
    "good_sql": "SELECT T1.`School Type`, T1.`School Name`, T2.Latitude FROM dataroom_eval_bird.california_schools.frpm AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T2.Latitude DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 82,
    "room_id": 49,
    "good_sql": "SELECT T2.City, T1.`Low Grade`, T1.`School Name` FROM dataroom_eval_bird.california_schools.frpm AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.State = 'CA' ORDER BY T2.Latitude ASC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 83,
    "room_id": 4,
    "good_sql": "SELECT GSoffered FROM dataroom_eval_bird.california_schools.schools ORDER BY ABS(longitude) DESC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 84,
    "room_id": 50,
    "good_sql": "SELECT T2.City, COUNT(T2.CDSCode) FROM dataroom_eval_bird.california_schools.frpm AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Magnet = 1 AND T2.GSoffered = 'K-8' AND T1.`NSLP Provision Status` = 'Multiple Provision Types' GROUP BY T2.City",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 85,
    "room_id": 4,
    "good_sql": "SELECT DISTINCT T1.AdmFName1, T1.District FROM dataroom_eval_bird.california_schools.schools AS T1 INNER JOIN ( SELECT admfname1 FROM dataroom_eval_bird.california_schools.schools GROUP BY admfname1 ORDER BY COUNT(admfname1) DESC LIMIT 2 ) AS T2 ON T1.AdmFName1 = T2.admfname1",
    "complexity": "Single Join, Subqueries, Aggregation"
  },
  {
    "query_id": 86,
    "room_id": 51,
    "good_sql": "SELECT T1.`Free Meal Count (K-12)` * 100 / T1.`Enrollment (K-12)`, T1.`District Code` FROM dataroom_eval_bird.california_schools.frpm AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.AdmFName1 = 'Alusine'",
    "complexity": "Single Join"
  },
  {
    "query_id": 87,
    "room_id": 4,
    "good_sql": "SELECT AdmLName1, District, County, School FROM dataroom_eval_bird.california_schools.schools WHERE CharterNum = '0040'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 88,
    "room_id": 52,
    "good_sql": "SELECT T2.AdmEmail1 FROM dataroom_eval_bird.california_schools.frpm AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'San Bernardino' AND T2.City = 'San Bernardino' AND T2.DOC = 54 AND DATE_FORMAT(CAST(T2.OpenDate AS TIMESTAMP), 'yyyy') BETWEEN '2009' AND '2010' AND T2.SOC = 62",
    "complexity": "Single Join"
  },
  {
    "query_id": 89,
    "room_id": 4,
    "good_sql": "SELECT T2.AdmEmail1, T2.School FROM dataroom_eval_bird.california_schools.satscores AS T1 INNER JOIN dataroom_eval_bird.california_schools.schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 90,
    "room_id": 53,
    "good_sql": "SELECT COUNT(T1.district_id) FROM dataroom_eval_bird.financial.district AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.district_id = T2.district_id WHERE T1.A3 = 'East Bohemia' AND T2.frequency = 'POPLATEK PO OBRATU'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 91,
    "room_id": 54,
    "good_sql": "SELECT COUNT(T1.account_id) FROM dataroom_eval_bird.financial.account AS T1 INNER JOIN dataroom_eval_bird.financial.loan AS T2 ON T1.account_id = T2.account_id INNER JOIN dataroom_eval_bird.financial.district AS T3 ON T1.district_id = T3.district_id WHERE T3.A3 = 'Prague'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 92,
    "room_id": 55,
    "good_sql": "SELECT DISTINCT IF(AVG(A13) > AVG(A12), '1996', '1995') FROM dataroom_eval_bird.financial.district",
    "complexity": "Aggregation"
  },
  {
    "query_id": 93,
    "room_id": 56,
    "good_sql": "SELECT DISTINCT T2.district_id FROM dataroom_eval_bird.financial.client AS T1 INNER JOIN dataroom_eval_bird.financial.district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T2.A11 BETWEEN 6000 AND 10000",
    "complexity": "Single Join"
  },
  {
    "query_id": 94,
    "room_id": 57,
    "good_sql": "SELECT COUNT(T1.client_id) FROM dataroom_eval_bird.financial.client AS T1 INNER JOIN dataroom_eval_bird.financial.district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A3 = 'North Bohemia' AND T2.A11 > 8000",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 95,
    "room_id": 58,
    "good_sql": "SELECT T1.account_id , ( SELECT MAX(A11) - MIN(A11) FROM dataroom_eval_bird.financial.district ) FROM dataroom_eval_bird.financial.account AS T1 INNER JOIN dataroom_eval_bird.financial.district AS T2 ON T1.district_id = T2.district_id WHERE T2.district_id = ( SELECT district_id FROM dataroom_eval_bird.financial.client WHERE gender = 'F' ORDER BY birth_date ASC LIMIT 1 ) ORDER BY T2.A11 DESC LIMIT 1",
    "complexity": "Subqueries, Single Join"
  },
  {
    "query_id": 96,
    "room_id": 59,
    "good_sql": "SELECT T1.account_id FROM dataroom_eval_bird.financial.account AS T1 INNER JOIN dataroom_eval_bird.financial.district AS T2 ON T1.district_id = T2.district_id WHERE T2.district_id = ( SELECT district_id FROM dataroom_eval_bird.financial.client ORDER BY birth_date DESC LIMIT 1 ) ORDER BY T2.A11 DESC LIMIT 1",
    "complexity": "Single Join, Subqueries"
  },
  {
    "query_id": 97,
    "room_id": 60,
    "good_sql": "SELECT COUNT(T1.account_id) FROM dataroom_eval_bird.financial.account AS T1 INNER JOIN dataroom_eval_bird.financial.disp AS T2 ON T1.account_id = T2.account_id WHERE T2.type = 'Owner' AND T1.frequency = 'POPLATEK TYDNE'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 98,
    "room_id": 61,
    "good_sql": "SELECT T2.client_id FROM dataroom_eval_bird.financial.account AS T1 INNER JOIN dataroom_eval_bird.financial.disp AS T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'POPLATEK PO OBRATU' AND T2.type = 'DISPONENT'",
    "complexity": "Single Join"
  },
  {
    "query_id": 99,
    "room_id": 60,
    "good_sql": "SELECT T2.account_id FROM dataroom_eval_bird.financial.loan AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.account_id = T2.account_id WHERE DATE_FORMAT(CAST(T1.date AS TIMESTAMP), 'yyyy') = '1997' AND T2.frequency = 'POPLATEK TYDNE' ORDER BY T1.amount LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 100,
    "room_id": 62,
    "good_sql": "SELECT T1.account_id FROM dataroom_eval_bird.financial.loan AS T1 INNER JOIN dataroom_eval_bird.financial.disp AS T2 ON T1.account_id = T2.account_id WHERE DATE_FORMAT(CAST(T1.date AS TIMESTAMP), 'yyyy') = '1993' AND T1.duration = 12 ORDER BY T1.amount DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 101,
    "room_id": 63,
    "good_sql": "SELECT COUNT(T2.client_id) FROM dataroom_eval_bird.financial.district AS T1 INNER JOIN dataroom_eval_bird.financial.client AS T2 ON T1.district_id = T2.district_id WHERE T2.gender = 'F' AND DATE_FORMAT(CAST(T2.birth_date AS TIMESTAMP), 'yyyy') < '1950' AND T1.A2 = 'Slokolov'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 102,
    "room_id": 64,
    "good_sql": "SELECT account_id FROM dataroom_eval_bird.financial.trans WHERE DATE_FORMAT(CAST(date AS TIMESTAMP), 'yyyy') = '1995' ORDER BY date ASC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 103,
    "room_id": 64,
    "good_sql": "SELECT DISTINCT T2.account_id FROM dataroom_eval_bird.financial.trans AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.account_id = T2.account_id WHERE DATE_FORMAT(CAST(T2.date AS TIMESTAMP), 'yyyy') < '1997' AND T1.amount > 3000",
    "complexity": "Single Join"
  },
  {
    "query_id": 104,
    "room_id": 64,
    "good_sql": "SELECT T2.client_id FROM dataroom_eval_bird.financial.client AS T1 INNER JOIN dataroom_eval_bird.financial.disp AS T2 ON T1.client_id = T2.client_id INNER JOIN dataroom_eval_bird.financial.card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.issued = '1994-03-03'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 105,
    "room_id": 64,
    "good_sql": "SELECT T1.date FROM dataroom_eval_bird.financial.account AS T1 INNER JOIN dataroom_eval_bird.financial.trans AS T2 ON T1.account_id = T2.account_id WHERE T2.amount = 840 AND T2.date = '1998-10-14'",
    "complexity": "Single Join"
  },
  {
    "query_id": 106,
    "room_id": 64,
    "good_sql": "SELECT T1.district_id FROM dataroom_eval_bird.financial.account AS T1 INNER JOIN dataroom_eval_bird.financial.loan AS T2 ON T1.account_id = T2.account_id WHERE T2.date = '1994-08-25'",
    "complexity": "Single Join"
  },
  {
    "query_id": 107,
    "room_id": 64,
    "good_sql": "SELECT T2.amount FROM dataroom_eval_bird.financial.account AS T1 INNER JOIN dataroom_eval_bird.financial.trans AS T2 ON T1.account_id = T2.account_id WHERE T1.date = '1996-10-21' ORDER BY T2.amount DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 108,
    "room_id": 65,
    "good_sql": "SELECT T2.gender FROM dataroom_eval_bird.financial.district AS T1 INNER JOIN dataroom_eval_bird.financial.client AS T2 ON T1.district_id = T2.district_id ORDER BY T1.A11 DESC, T2.birth_date ASC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 109,
    "room_id": 64,
    "good_sql": "SELECT T2.amount FROM dataroom_eval_bird.financial.loan AS T1 INNER JOIN dataroom_eval_bird.financial.trans AS T2 ON T1.account_id = T2.account_id ORDER BY T1.amount DESC, T2.date ASC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 110,
    "room_id": 66,
    "good_sql": "SELECT COUNT(T1.client_id) FROM dataroom_eval_bird.financial.client AS T1 INNER JOIN dataroom_eval_bird.financial.district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T2.A2 = 'Jesenik'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 111,
    "room_id": 64,
    "good_sql": "SELECT T1.disp_id FROM dataroom_eval_bird.financial.disp AS T1 INNER JOIN dataroom_eval_bird.financial.trans AS T2 ON T1.account_id = T2.account_id WHERE T2.date = '1998-09-02' AND T2.amount = 5100",
    "complexity": "Single Join"
  },
  {
    "query_id": 112,
    "room_id": 67,
    "good_sql": "SELECT COUNT(T2.account_id) FROM dataroom_eval_bird.financial.district AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.district_id = T2.district_id WHERE DATE_FORMAT(CAST(T2.date AS TIMESTAMP), 'yyyy') = '1996' AND T1.A2 = 'Litomerice'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 113,
    "room_id": 68,
    "good_sql": "SELECT T1.A2 FROM dataroom_eval_bird.financial.district AS T1 INNER JOIN dataroom_eval_bird.financial.client AS T2 ON T1.district_id = T2.district_id WHERE T2.birth_date = '1976-01-29' AND T2.gender = 'F'",
    "complexity": "Single Join"
  },
  {
    "query_id": 114,
    "room_id": 64,
    "good_sql": "SELECT T3.birth_date FROM dataroom_eval_bird.financial.loan AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.account_id = T2.account_id INNER JOIN dataroom_eval_bird.financial.client AS T3 ON T2.district_id = T3.district_id WHERE T1.date = '1996-01-03' AND T1.amount = 98832",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 115,
    "room_id": 69,
    "good_sql": "SELECT T1.account_id FROM dataroom_eval_bird.financial.account AS T1 INNER JOIN dataroom_eval_bird.financial.district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'Prague' ORDER BY T1.date ASC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 116,
    "room_id": 70,
    "good_sql": "SELECT SUM(CAST(T1.gender = 'M' AS REAL)) * 100 / COUNT(T1.client_id) FROM dataroom_eval_bird.financial.client AS T1 INNER JOIN dataroom_eval_bird.financial.district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'south Bohemia' GROUP BY T2.A4 ORDER BY T2.A4 DESC LIMIT 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 117,
    "room_id": 71,
    "good_sql": "SELECT CAST((SUM(IF(T3.date = '1998-12-27', T3.balance, 0)) - SUM(IF(T3.date = '1993-03-22', T3.balance, 0))) AS REAL) * 100 / SUM(IF(T3.date = '1993-03-22', T3.balance, 0)) FROM dataroom_eval_bird.financial.loan AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.account_id = T2.account_id INNER JOIN dataroom_eval_bird.financial.trans AS T3 ON T3.account_id = T2.account_id WHERE T1.date = '1993-07-05'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 118,
    "room_id": 72,
    "good_sql": "SELECT (CAST(SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) AS REAL) * 100) / SUM(amount) FROM dataroom_eval_bird.financial.loan",
    "complexity": "Aggregation"
  },
  {
    "query_id": 119,
    "room_id": 73,
    "good_sql": "SELECT SUM(CAST(status = 'C' AS REAL)) * 100 / COUNT(amount) FROM dataroom_eval_bird.financial.loan WHERE amount < 100000",
    "complexity": "Aggregation"
  },
  {
    "query_id": 120,
    "room_id": 74,
    "good_sql": "SELECT T1.account_id, T2.A2, T2.A3 FROM dataroom_eval_bird.financial.account AS T1 INNER JOIN dataroom_eval_bird.financial.district AS T2 ON T1.district_id = T2.district_id WHERE T1.frequency = 'POPLATEK PO OBRATU' AND DATE_FORMAT(CAST(T1.date AS TIMESTAMP), 'yyyy') = '1993'",
    "complexity": "Single Join"
  },
  {
    "query_id": 121,
    "room_id": 75,
    "good_sql": "SELECT T1.account_id, T1.frequency FROM dataroom_eval_bird.financial.account AS T1 INNER JOIN dataroom_eval_bird.financial.district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'east Bohemia' AND DATE_FORMAT(CAST(T1.date AS TIMESTAMP), 'yyyy') BETWEEN '1995' AND '2000'",
    "complexity": "Single Join"
  },
  {
    "query_id": 122,
    "room_id": 76,
    "good_sql": "SELECT T1.account_id, T1.date FROM dataroom_eval_bird.financial.account AS T1 INNER JOIN dataroom_eval_bird.financial.district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Prachatice'",
    "complexity": "Single Join"
  },
  {
    "query_id": 123,
    "room_id": 77,
    "good_sql": "SELECT T2.A2, T2.A3 FROM dataroom_eval_bird.financial.account AS T1 INNER JOIN dataroom_eval_bird.financial.district AS T2 ON T1.district_id = T2.district_id INNER JOIN dataroom_eval_bird.financial.loan AS T3 ON T1.account_id = T3.account_id WHERE T3.loan_id = 4990",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 124,
    "room_id": 78,
    "good_sql": "SELECT T1.account_id, T2.A2, T2.A3 FROM dataroom_eval_bird.financial.account AS T1 INNER JOIN dataroom_eval_bird.financial.district AS T2 ON T1.district_id = T2.district_id INNER JOIN dataroom_eval_bird.financial.loan AS T3 ON T1.account_id = T3.account_id WHERE T3.amount > 300000",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 125,
    "room_id": 79,
    "good_sql": "SELECT T3.loan_id, T2.A2, T2.A11 FROM dataroom_eval_bird.financial.account AS T1 INNER JOIN dataroom_eval_bird.financial.district AS T2 ON T1.district_id = T2.district_id INNER JOIN dataroom_eval_bird.financial.loan AS T3 ON T1.account_id = T3.account_id WHERE T3.duration = 60",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 126,
    "room_id": 80,
    "good_sql": "SELECT CAST((T3.A13 - T3.A12) AS REAL) * 100 / T3.A12 FROM dataroom_eval_bird.financial.loan AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.account_id = T2.account_id INNER JOIN dataroom_eval_bird.financial.district AS T3 ON T2.district_id = T3.district_id WHERE T1.status = 'D'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 127,
    "room_id": 81,
    "good_sql": "SELECT SUM(CAST(T1.A2 = 'Decin' AS REAL)) * 100 / COUNT(account_id) FROM dataroom_eval_bird.financial.district AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.district_id = T2.district_id WHERE DATE_FORMAT(CAST(T2.date AS TIMESTAMP), 'yyyy') = '1993'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 128,
    "room_id": 82,
    "good_sql": "SELECT account_id FROM dataroom_eval_bird.financial.account WHERE Frequency = 'POPLATEK MESICNE'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 129,
    "room_id": 83,
    "good_sql": "SELECT T2.A2, COUNT(T1.client_id) FROM dataroom_eval_bird.financial.client AS T1 INNER JOIN dataroom_eval_bird.financial.district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' GROUP BY T2.district_id, T2.A2 ORDER BY COUNT(T1.client_id) DESC LIMIT 10",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 130,
    "room_id": 84,
    "good_sql": "SELECT T1.district_id FROM dataroom_eval_bird.financial.district AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.district_id = T2.district_id INNER JOIN dataroom_eval_bird.financial.trans AS T3 ON T2.account_id = T3.account_id WHERE T3.type = 'VYDAJ' AND T2.date LIKE '1996-01%' ORDER BY A2 ASC LIMIT 10",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 131,
    "room_id": 85,
    "good_sql": "SELECT COUNT(T3.account_id) FROM dataroom_eval_bird.financial.district AS T1 INNER JOIN dataroom_eval_bird.financial.client AS T2 ON T1.district_id = T2.district_id INNER JOIN dataroom_eval_bird.financial.disp AS T3 ON T2.client_id = T3.client_id WHERE T1.A3 = 'south Bohemia' AND T3.type != 'OWNER'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 132,
    "room_id": 86,
    "good_sql": "SELECT T2.A3 FROM dataroom_eval_bird.financial.account AS T1 INNER JOIN dataroom_eval_bird.financial.district AS T2 ON T1.district_id = T2.district_id INNER JOIN dataroom_eval_bird.financial.loan AS T3 ON T1.account_id = T3.account_id WHERE T3.status IN ('C', 'D') GROUP BY T2.A3 ORDER BY SUM(T3.amount) DESC LIMIT 1",
    "complexity": "Multiple Joins, Aggregation"
  },
  {
    "query_id": 133,
    "room_id": 87,
    "good_sql": "SELECT AVG(T3.amount) FROM dataroom_eval_bird.financial.client AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.district_id = T2.district_id INNER JOIN dataroom_eval_bird.financial.loan AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'M'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 134,
    "room_id": 88,
    "good_sql": "SELECT district_id, A2 FROM dataroom_eval_bird.financial.district ORDER BY A13 DESC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 135,
    "room_id": 89,
    "good_sql": "SELECT COUNT(T2.account_id) FROM dataroom_eval_bird.financial.district AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.district_id = T2.district_id GROUP BY T1.A16 ORDER BY T1.A16 DESC LIMIT 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 136,
    "room_id": 90,
    "good_sql": "SELECT COUNT(T1.account_id) FROM dataroom_eval_bird.financial.trans AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.account_id = T2.account_id WHERE T1.balance < 0 AND T1.operation = 'VYBER KARTOU' AND T2.frequency = 'POPLATEK MESICNE'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 137,
    "room_id": 91,
    "good_sql": "SELECT COUNT(T1.account_id) FROM dataroom_eval_bird.financial.account AS T1 INNER JOIN dataroom_eval_bird.financial.loan AS T2 ON T1.account_id = T2.account_id WHERE T2.date BETWEEN '1995-01-01' AND '1997-12-31' AND T1.frequency = 'POPLATEK MESICNE' AND T2.amount > 250000",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 138,
    "room_id": 92,
    "good_sql": "SELECT COUNT(T1.account_id) FROM dataroom_eval_bird.financial.account AS T1 INNER JOIN dataroom_eval_bird.financial.district AS T2 ON T1.district_id = T2.district_id INNER JOIN dataroom_eval_bird.financial.loan AS T3 ON T1.account_id = T3.account_id WHERE T1.district_id = 1 AND (T3.status = 'C' OR T3.status = 'D')",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 139,
    "room_id": 93,
    "good_sql": "SELECT COUNT(T1.client_id) FROM dataroom_eval_bird.financial.client AS T1 INNER JOIN dataroom_eval_bird.financial.district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A15 = (SELECT T3.A15 FROM dataroom_eval_bird.financial.district AS T3 ORDER BY T3.A15 DESC LIMIT 1 OFFSET 1)",
    "complexity": "Aggregation, Single Join, Subqueries"
  },
  {
    "query_id": 140,
    "room_id": 94,
    "good_sql": "SELECT COUNT(T1.card_id) FROM dataroom_eval_bird.financial.card AS T1 INNER JOIN dataroom_eval_bird.financial.disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'gold' AND T2.type = 'DISPONENT'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 141,
    "room_id": 95,
    "good_sql": "SELECT COUNT(T1.account_id) FROM dataroom_eval_bird.financial.account AS T1 INNER JOIN dataroom_eval_bird.financial.district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Pisek'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 142,
    "room_id": 64,
    "good_sql": "SELECT T1.district_id FROM dataroom_eval_bird.financial.account AS T1 INNER JOIN dataroom_eval_bird.financial.district AS T2 ON T1.district_id = T2.district_id INNER JOIN dataroom_eval_bird.financial.trans AS T3 ON T1.account_id = T3.account_id WHERE DATE_FORMAT(CAST(T3.date AS TIMESTAMP), 'yyyy') = '1997' GROUP BY T1.district_id HAVING SUM(T3.amount) > 10000",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 143,
    "room_id": 96,
    "good_sql": "SELECT DISTINCT T2.account_id FROM dataroom_eval_bird.financial.trans AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.account_id = T2.account_id INNER JOIN dataroom_eval_bird.financial.district AS T3 ON T2.district_id = T3.district_id WHERE T1.k_symbol = 'SIPO' AND T3.A2 = 'Pisek'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 144,
    "room_id": 64,
    "good_sql": "SELECT T2.account_id FROM dataroom_eval_bird.financial.card AS T1 INNER JOIN dataroom_eval_bird.financial.disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type IN ('gold', 'junior')",
    "complexity": "Single Join"
  },
  {
    "query_id": 145,
    "room_id": 97,
    "good_sql": "SELECT AVG(T3.amount) FROM dataroom_eval_bird.financial.card AS T1 INNER JOIN dataroom_eval_bird.financial.disp AS T2 ON T1.disp_id = T2.disp_id INNER JOIN dataroom_eval_bird.financial.trans AS T3 ON T2.account_id = T3.account_id WHERE DATE_FORMAT(CAST(T3.date AS TIMESTAMP), 'yyyy') = '2021' AND T3.operation = 'VYBER KARTOU'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 146,
    "room_id": 98,
    "good_sql": "SELECT T1.account_id FROM dataroom_eval_bird.financial.trans AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.account_id = T2.account_id WHERE DATE_FORMAT(CAST(T1.date AS TIMESTAMP), 'yyyy') = '1998' AND T1.operation = 'VYBER KARTOU' AND T1.amount < (SELECT AVG(amount) FROM dataroom_eval_bird.financial.trans WHERE DATE_FORMAT(CAST(date AS TIMESTAMP), 'yyyy') = '1998')",
    "complexity": "Single Join, Subqueries"
  },
  {
    "query_id": 147,
    "room_id": 99,
    "good_sql": "SELECT T1.client_id FROM dataroom_eval_bird.financial.client AS T1 INNER JOIN dataroom_eval_bird.financial.disp AS T2 ON T1.client_id = T2.client_id INNER JOIN dataroom_eval_bird.financial.loan AS T3 ON T2.account_id = T3.account_id INNER JOIN dataroom_eval_bird.financial.card AS T4 ON T2.disp_id = T4.disp_id WHERE T1.gender = 'F'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 148,
    "room_id": 100,
    "good_sql": "SELECT COUNT(T1.client_id) FROM dataroom_eval_bird.financial.client AS T1 INNER JOIN dataroom_eval_bird.financial.district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T2.A3 = 'south Bohemia'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 149,
    "room_id": 101,
    "good_sql": "SELECT T2.account_id FROM dataroom_eval_bird.financial.district AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.district_id = T2.district_id INNER JOIN dataroom_eval_bird.financial.disp AS T3 ON T2.account_id = T3.account_id WHERE T3.type = 'OWNER' AND T1.A2 = 'Tabor'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 150,
    "room_id": 102,
    "good_sql": "SELECT T3.type FROM dataroom_eval_bird.financial.district AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.district_id = T2.district_id INNER JOIN dataroom_eval_bird.financial.disp AS T3 ON T2.account_id = T3.account_id WHERE T3.type != 'OWNER' AND T1.A11 BETWEEN 8000 AND 9000",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 151,
    "room_id": 103,
    "good_sql": "SELECT COUNT(T2.account_id) FROM dataroom_eval_bird.financial.district AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.district_id = T2.district_id INNER JOIN dataroom_eval_bird.financial.trans AS T3 ON T2.account_id = T3.account_id WHERE T3.bank = 'AB' AND T1.A3 = 'north Bohemia'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 152,
    "room_id": 104,
    "good_sql": "SELECT DISTINCT T1.A2 FROM dataroom_eval_bird.financial.district AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.district_id = T2.district_id INNER JOIN dataroom_eval_bird.financial.trans AS T3 ON T2.account_id = T3.account_id WHERE T3.type = 'VYDAJ'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 153,
    "room_id": 105,
    "good_sql": "SELECT AVG(T1.A15) FROM dataroom_eval_bird.financial.district AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.district_id = T2.district_id WHERE DATE_FORMAT(CAST(T2.date AS TIMESTAMP), 'yyyy') >= '1997' AND T1.A15 > 4000",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 154,
    "room_id": 106,
    "good_sql": "SELECT COUNT(T1.card_id) FROM dataroom_eval_bird.financial.card AS T1 INNER JOIN dataroom_eval_bird.financial.disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'classic' AND T2.type = 'Owner'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 155,
    "room_id": 107,
    "good_sql": "SELECT COUNT(T1.client_id) FROM dataroom_eval_bird.financial.client AS T1 INNER JOIN dataroom_eval_bird.financial.district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A2 = 'Hl.m. Praha'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 156,
    "room_id": 108,
    "good_sql": "SELECT SUM(CAST(type = 'gold' AS REAL)) * 100 / COUNT(card_id) FROM dataroom_eval_bird.financial.card WHERE DATE_FORMAT(CAST(issued AS TIMESTAMP), 'yyyy') < '1998'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 157,
    "room_id": 64,
    "good_sql": "SELECT T1.client_id FROM dataroom_eval_bird.financial.disp AS T1 INNER JOIN dataroom_eval_bird.financial.loan AS T2 ON T1.account_id = T2.account_id WHERE T1.type = 'OWNER' ORDER BY T2.amount DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 158,
    "room_id": 109,
    "good_sql": "SELECT T1.A15 FROM dataroom_eval_bird.financial.district AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.district_id = T2.district_id WHERE T2.account_id = 532",
    "complexity": "Single Join"
  },
  {
    "query_id": 159,
    "room_id": 64,
    "good_sql": "SELECT T3.district_id FROM dataroom_eval_bird.financial.order AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.account_id = T2.account_id INNER JOIN dataroom_eval_bird.financial.district AS T3 ON T2.district_id = T3.district_id WHERE T1.order_id = 33333",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 160,
    "room_id": 110,
    "good_sql": "SELECT T4.trans_id FROM dataroom_eval_bird.financial.client AS T1 INNER JOIN dataroom_eval_bird.financial.disp AS T2 ON T1.client_id = T2.client_id INNER JOIN dataroom_eval_bird.financial.account AS T3 ON T2.account_id = T3.account_id INNER JOIN dataroom_eval_bird.financial.trans AS T4 ON T3.account_id = T4.account_id WHERE T1.client_id = 3356 AND T4.operation = 'VYBER'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 161,
    "room_id": 111,
    "good_sql": "SELECT COUNT(T1.account_id) FROM dataroom_eval_bird.financial.loan AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.account_id = T2.account_id WHERE T2.frequency = 'POPLATEK TYDNE' AND T1.amount < 200000",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 162,
    "room_id": 64,
    "good_sql": "SELECT T3.type FROM dataroom_eval_bird.financial.disp AS T1 INNER JOIN dataroom_eval_bird.financial.client AS T2 ON T1.client_id = T2.client_id INNER JOIN dataroom_eval_bird.financial.card AS T3 ON T1.disp_id = T3.disp_id WHERE T2.client_id = 13539",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 163,
    "room_id": 112,
    "good_sql": "SELECT T2.district_id, T1.A3 FROM dataroom_eval_bird.financial.district AS T1 INNER JOIN dataroom_eval_bird.financial.client AS T2 ON T1.district_id = T2.district_id WHERE T2.client_id = 3541",
    "complexity": "Single Join"
  },
  {
    "query_id": 164,
    "room_id": 113,
    "good_sql": "SELECT T1.district_id FROM dataroom_eval_bird.financial.district AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.district_id = T2.district_id INNER JOIN dataroom_eval_bird.financial.loan AS T3 ON T2.account_id = T3.account_id WHERE T3.status = 'A' GROUP BY T1.district_id ORDER BY COUNT(T2.account_id) DESC LIMIT 1",
    "complexity": "Multiple Joins, Aggregation"
  },
  {
    "query_id": 165,
    "room_id": 64,
    "good_sql": "SELECT T3.client_id FROM dataroom_eval_bird.financial.order AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.account_id = T2.account_id INNER JOIN dataroom_eval_bird.financial.client AS T3 ON T2.district_id = T3.district_id WHERE T1.order_id = 32423",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 166,
    "room_id": 64,
    "good_sql": "SELECT T3.trans_id FROM dataroom_eval_bird.financial.district AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.district_id = T2.district_id INNER JOIN dataroom_eval_bird.financial.trans AS T3 ON T2.account_id = T3.account_id WHERE T1.district_id = 5",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 167,
    "room_id": 64,
    "good_sql": "SELECT COUNT(T2.account_id) FROM dataroom_eval_bird.financial.district AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.district_id = T2.district_id WHERE T1.A2 = 'Jesenik'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 168,
    "room_id": 114,
    "good_sql": "SELECT T2.client_id FROM dataroom_eval_bird.financial.card AS T1 INNER JOIN dataroom_eval_bird.financial.disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'junior' AND T1.issued >= '1997-01-01'",
    "complexity": "Single Join"
  },
  {
    "query_id": 169,
    "room_id": 115,
    "good_sql": "SELECT SUM(CAST(T2.gender = 'F' AS REAL)) * 100 / COUNT(T2.client_id) FROM dataroom_eval_bird.financial.district AS T1 INNER JOIN dataroom_eval_bird.financial.client AS T2 ON T1.district_id = T2.district_id WHERE T1.A11 > 10000",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 170,
    "room_id": 116,
    "good_sql": "SELECT CAST((SUM(CASE WHEN DATE_FORMAT(CAST(T1.date AS TIMESTAMP), 'yyyy') = '1997' THEN T1.amount ELSE 0 END) - SUM(CASE WHEN DATE_FORMAT(CAST(T1.date AS TIMESTAMP), 'yyyy') = '1996' THEN T1.amount ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN DATE_FORMAT(CAST(T1.date AS TIMESTAMP), 'yyyy') = '1996' THEN T1.amount ELSE 0 END) FROM dataroom_eval_bird.financial.loan AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.account_id = T2.account_id INNER JOIN dataroom_eval_bird.financial.disp AS T3 ON T3.account_id = T2.account_id INNER JOIN dataroom_eval_bird.financial.client AS T4 ON T4.client_id = T3.client_id WHERE T4.gender = 'M' AND T3.type = 'OWNER'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 171,
    "room_id": 117,
    "good_sql": "SELECT COUNT(account_id) FROM dataroom_eval_bird.financial.trans WHERE DATE_FORMAT(CAST(date AS TIMESTAMP), 'yyyy') > '1995' AND operation = 'VYBER KARTOU'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 172,
    "room_id": 118,
    "good_sql": "SELECT SUM(IF(A3 = 'East Bohemia', A16, 0)) - SUM(IF(A3 = 'North Bohemia', A16, 0)) FROM dataroom_eval_bird.financial.district",
    "complexity": "Aggregation"
  },
  {
    "query_id": 173,
    "room_id": 64,
    "good_sql": "SELECT SUM(CAST(type = 'Owner' AS INT)) , SUM(CAST(type = 'Disponent' AS INT)) FROM dataroom_eval_bird.financial.disp WHERE account_id BETWEEN 1 AND 10",
    "complexity": "Aggregation"
  },
  {
    "query_id": 174,
    "room_id": 119,
    "good_sql": "SELECT T1.frequency, T2.k_symbol FROM dataroom_eval_bird.financial.account AS T1 INNER JOIN dataroom_eval_bird.financial.order AS T2 ON T1.account_id = T2.account_id WHERE T1.account_id = 3 AND T2.amount = 3539",
    "complexity": "Single Join"
  },
  {
    "query_id": 175,
    "room_id": 64,
    "good_sql": "SELECT DATE_FORMAT(CAST(T1.birth_date AS TIMESTAMP), 'yyyy') FROM dataroom_eval_bird.financial.client AS T1 INNER JOIN dataroom_eval_bird.financial.disp AS T3 ON T1.client_id = T3.client_id INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T3.account_id = T2.account_id WHERE T2.account_id = 130",
    "complexity": "Single Join, Multiple Joins"
  },
  {
    "query_id": 176,
    "room_id": 120,
    "good_sql": "SELECT COUNT(T1.account_id) FROM dataroom_eval_bird.financial.account AS T1 INNER JOIN dataroom_eval_bird.financial.disp AS T2 ON T1.account_id = T2.account_id WHERE T2.type = 'OWNER' AND T1.frequency = 'POPLATEK PO OBRATU'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 177,
    "room_id": 64,
    "good_sql": "SELECT T3.amount, T3.status FROM dataroom_eval_bird.financial.client AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.district_id = T2.district_id INNER JOIN dataroom_eval_bird.financial.loan AS T3 ON T2.account_id = T3.account_id WHERE T1.client_id = 992",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 178,
    "room_id": 64,
    "good_sql": "SELECT T3.balance, T1.gender FROM dataroom_eval_bird.financial.client AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.district_id = T2.district_id INNER JOIN dataroom_eval_bird.financial.trans AS T3 ON T2.account_id = T3.account_id WHERE T1.client_id = 4 AND T3.trans_id = 851",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 179,
    "room_id": 64,
    "good_sql": "SELECT T3.type FROM dataroom_eval_bird.financial.client AS T1 INNER JOIN dataroom_eval_bird.financial.disp AS T2 ON T1.client_id = T2.client_id INNER JOIN dataroom_eval_bird.financial.card AS T3 ON T2.disp_id = T3.disp_id WHERE T1.client_id = 9",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 180,
    "room_id": 64,
    "good_sql": "SELECT SUM(T3.amount) FROM dataroom_eval_bird.financial.client AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.district_id = T2.district_id INNER JOIN dataroom_eval_bird.financial.trans AS T3 ON T2.account_id = T3.account_id WHERE DATE_FORMAT(CAST(T3.date AS TIMESTAMP), 'yyyy') = '1998' AND T1.client_id = 617",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 181,
    "room_id": 64,
    "good_sql": "SELECT T1.client_id, T3.account_id FROM dataroom_eval_bird.financial.client AS T1 INNER JOIN dataroom_eval_bird.financial.district AS T2 ON T1.district_id = T2.district_id INNER JOIN dataroom_eval_bird.financial.account AS T3 ON T2.district_id = T3.district_id WHERE T2.A3 = 'east Bohemia' AND DATE_FORMAT(CAST(T1.birth_date AS TIMESTAMP), 'yyyy') BETWEEN '1983' AND '1987'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 182,
    "room_id": 99,
    "good_sql": "SELECT T1.client_id FROM dataroom_eval_bird.financial.client AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.district_id = T2.district_id INNER JOIN dataroom_eval_bird.financial.loan AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'F' ORDER BY T3.amount DESC LIMIT 3",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 183,
    "room_id": 121,
    "good_sql": "SELECT COUNT(T1.account_id) FROM dataroom_eval_bird.financial.trans AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.account_id = T2.account_id INNER JOIN dataroom_eval_bird.financial.client AS T3 ON T2.district_id = T3.district_id WHERE DATE_FORMAT(CAST(T3.birth_date AS TIMESTAMP), 'yyyy') BETWEEN '1974' AND '1976' AND T3.gender = 'M' AND T1.amount > 4000 AND T1.k_symbol = 'SIPO'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 184,
    "room_id": 64,
    "good_sql": "SELECT COUNT(account_id) FROM dataroom_eval_bird.financial.account AS T1 INNER JOIN dataroom_eval_bird.financial.district AS T2 ON T1.district_id = T2.district_id WHERE DATE_FORMAT(CAST(T1.date AS TIMESTAMP), 'yyyy') > '1996' AND T2.A2 = 'Beroun'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 185,
    "room_id": 99,
    "good_sql": "SELECT COUNT(T1.client_id) FROM dataroom_eval_bird.financial.client AS T1 INNER JOIN dataroom_eval_bird.financial.disp AS T2 ON T1.client_id = T2.client_id INNER JOIN dataroom_eval_bird.financial.card AS T3 ON T2.disp_id = T3.disp_id WHERE T1.gender = 'F' AND T3.type = 'junior'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 186,
    "room_id": 122,
    "good_sql": "SELECT SUM(CAST(T2.gender = 'F' AS REAL)) / COUNT(T2.client_id) * 100 FROM dataroom_eval_bird.financial.district AS T1 INNER JOIN dataroom_eval_bird.financial.client AS T2 ON T1.district_id = T2.district_id WHERE T1.A3 = 'Prague'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 187,
    "room_id": 123,
    "good_sql": "SELECT SUM(CAST(T1.gender = 'M' AS REAL)) * 100 / COUNT(T1.client_id) FROM dataroom_eval_bird.financial.client AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.district_id = T2.district_id WHERE T2.frequency = 'POPLATEK TYDNE'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 188,
    "room_id": 124,
    "good_sql": "SELECT COUNT(T2.account_id) FROM dataroom_eval_bird.financial.account AS T1 INNER JOIN dataroom_eval_bird.financial.disp AS T2 ON T2.account_id = T1.account_id WHERE T1.frequency = 'POPLATEK TYDNE' AND T2.type = 'USER'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 189,
    "room_id": 64,
    "good_sql": "SELECT T1.account_id FROM dataroom_eval_bird.financial.loan AS T1 INNER JOIN dataroom_eval_bird.financial.account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration > 24 AND DATE_FORMAT(CAST(T2.date AS TIMESTAMP), 'yyyy') < '1997' ORDER BY T1.amount ASC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 190,
    "room_id": 125,
    "good_sql": "SELECT T3.account_id FROM dataroom_eval_bird.financial.client AS T1 INNER JOIN dataroom_eval_bird.financial.district AS T2 ON T1.district_id = T2.district_id INNER JOIN dataroom_eval_bird.financial.account AS T3 ON T2.district_id = T3.district_id WHERE T1.gender = 'F' ORDER BY T1.birth_date ASC, T2.A11 ASC LIMIT 1",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 191,
    "room_id": 126,
    "good_sql": "SELECT COUNT(T1.client_id) FROM dataroom_eval_bird.financial.client AS T1 INNER JOIN dataroom_eval_bird.financial.district AS T2 ON T1.district_id = T2.district_id WHERE DATE_FORMAT(CAST(T1.birth_date AS TIMESTAMP), 'yyyy') = '1920' AND T2.A3 = 'east Bohemia'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 192,
    "room_id": 127,
    "good_sql": "SELECT COUNT(T2.account_id) FROM dataroom_eval_bird.financial.account AS T1 INNER JOIN dataroom_eval_bird.financial.loan AS T2 ON T1.account_id = T2.account_id WHERE T2.duration = 24 AND T1.frequency = 'POPLATEK TYDNE'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 193,
    "room_id": 128,
    "good_sql": "SELECT AVG(T2.payments) FROM dataroom_eval_bird.financial.account AS T1 INNER JOIN dataroom_eval_bird.financial.loan AS T2 ON T1.account_id = T2.account_id WHERE T2.status IN ('C', 'D') AND T1.frequency = 'POPLATEK PO OBRATU'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 194,
    "room_id": 129,
    "good_sql": "SELECT T3.client_id, T2.district_id, T2.A2 FROM dataroom_eval_bird.financial.account AS T1 INNER JOIN dataroom_eval_bird.financial.district AS T2 ON T1.district_id = T2.district_id INNER JOIN dataroom_eval_bird.financial.disp AS T3 ON T1.account_id = T3.account_id WHERE T3.type = 'OWNER'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 195,
    "room_id": 130,
    "good_sql": "SELECT T1.client_id, DATE_FORMAT(CAST(CURRENT_TIMESTAMP() AS TIMESTAMP), 'yyyy') - DATE_FORMAT(CAST(T3.birth_date AS TIMESTAMP), 'yyyy') FROM dataroom_eval_bird.financial.disp AS T1 INNER JOIN dataroom_eval_bird.financial.card AS T2 ON T2.disp_id = T1.disp_id INNER JOIN dataroom_eval_bird.financial.client AS T3 ON T1.client_id = T3.client_id WHERE T2.type = 'gold' AND T1.type = 'OWNER'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 196,
    "room_id": 131,
    "good_sql": "SELECT T.bond_type FROM ( SELECT bond_type, COUNT(bond_id) FROM dataroom_eval_bird.toxicology.bond GROUP BY bond_type ORDER BY COUNT(bond_id) DESC LIMIT 1 ) AS T",
    "complexity": "Subqueries"
  },
  {
    "query_id": 197,
    "room_id": 132,
    "good_sql": "SELECT COUNT(DISTINCT T1.molecule_id) FROM dataroom_eval_bird.toxicology.molecule AS T1 INNER JOIN dataroom_eval_bird.toxicology.atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'cl' AND T1.label = '-'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 198,
    "room_id": 133,
    "good_sql": "SELECT AVG(oxygen_count) FROM (SELECT T1.molecule_id, COUNT(T1.element) AS oxygen_count FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.bond AS T2 ON T1.molecule_id = T2.molecule_id  WHERE T2.bond_type = '-' AND T1.element = 'o'  GROUP BY T1.molecule_id) AS oxygen_counts",
    "complexity": "Aggregation, Single Join, Subqueries"
  },
  {
    "query_id": 199,
    "room_id": 134,
    "good_sql": "SELECT AVG(single_bond_count) FROM (SELECT T3.molecule_id, COUNT(T1.bond_type) AS single_bond_count FROM dataroom_eval_bird.toxicology.bond AS T1  INNER JOIN dataroom_eval_bird.toxicology.atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN dataroom_eval_bird.toxicology.molecule AS T3 ON T3.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T3.label = '+' GROUP BY T3.molecule_id) AS subquery",
    "complexity": "Aggregation, Multiple Joins, Subqueries"
  },
  {
    "query_id": 200,
    "room_id": 135,
    "good_sql": "SELECT COUNT(DISTINCT T2.molecule_id) FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'na' AND T2.label = '-'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 201,
    "room_id": 136,
    "good_sql": "SELECT DISTINCT T2.molecule_id FROM dataroom_eval_bird.toxicology.bond AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '+'",
    "complexity": "Single Join"
  },
  {
    "query_id": 202,
    "room_id": 137,
    "good_sql": "SELECT CAST(COUNT(DISTINCT CASE WHEN T1.element = 'c' THEN T1.atom_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T1.atom_id) FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '='",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 203,
    "room_id": 138,
    "good_sql": "SELECT COUNT(T.bond_id) FROM dataroom_eval_bird.toxicology.bond AS T WHERE T.bond_type = '#'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 204,
    "room_id": 139,
    "good_sql": "SELECT COUNT(DISTINCT T.atom_id) FROM dataroom_eval_bird.toxicology.atom AS T WHERE T.element != 'br'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 205,
    "room_id": 140,
    "good_sql": "SELECT COUNT(T.molecule_id) FROM dataroom_eval_bird.toxicology.molecule AS T WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND T.label = '+'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 206,
    "room_id": 141,
    "good_sql": "SELECT T.atom_id FROM dataroom_eval_bird.toxicology.atom AS T WHERE T.element = 'si'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 207,
    "room_id": 142,
    "good_sql": "SELECT DISTINCT T1.element FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR004_8_9'",
    "complexity": "Single Join"
  },
  {
    "query_id": 208,
    "room_id": 143,
    "good_sql": "SELECT DISTINCT T1.element FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN dataroom_eval_bird.toxicology.connected AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_type = '='",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 209,
    "room_id": 144,
    "good_sql": "SELECT T.label FROM (SELECT T2.label, COUNT(T2.molecule_id) FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' GROUP BY T2.label ORDER BY COUNT(T2.molecule_id) DESC LIMIT 1) AS t",
    "complexity": "Subqueries, Single Join, Aggregation"
  },
  {
    "query_id": 210,
    "room_id": 145,
    "good_sql": "SELECT DISTINCT T1.bond_type FROM dataroom_eval_bird.toxicology.bond AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN dataroom_eval_bird.toxicology.atom AS T3 ON T2.atom_id = T3.atom_id WHERE T3.element = 'te'",
    "complexity": "Single Join, Multiple Joins"
  },
  {
    "query_id": 211,
    "room_id": 146,
    "good_sql": "SELECT T2.atom_id, T2.atom_id2 FROM dataroom_eval_bird.toxicology.bond AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '-'",
    "complexity": "Single Join"
  },
  {
    "query_id": 212,
    "room_id": 147,
    "good_sql": "SELECT DISTINCT T1.atom_id FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN dataroom_eval_bird.toxicology.connected AS T3 ON T1.atom_id = T3.atom_id WHERE T2.label = '-'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 213,
    "room_id": 148,
    "good_sql": "SELECT T.element FROM (SELECT T1.element, COUNT(DISTINCT T1.molecule_id) FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(DISTINCT T1.molecule_id) ASC LIMIT 4) AS t",
    "complexity": "Subqueries, Single Join, Aggregation"
  },
  {
    "query_id": 214,
    "room_id": 149,
    "good_sql": "SELECT T1.bond_type FROM dataroom_eval_bird.toxicology.bond AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.atom_id = 'TR004_8' AND T2.atom_id2 = 'TR004_20' OR T2.atom_id2 = 'TR004_8' AND T2.atom_id = 'TR004_20'",
    "complexity": "Single Join"
  },
  {
    "query_id": 215,
    "room_id": 150,
    "good_sql": "SELECT DISTINCT T2.label FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element != 'sn'",
    "complexity": "Single Join"
  },
  {
    "query_id": 216,
    "room_id": 151,
    "good_sql": "SELECT COUNT(DISTINCT CASE WHEN T1.element = 'i' THEN T1.atom_id ELSE NULL END) AS iodine_nums , COUNT(DISTINCT CASE WHEN T1.element = 's' THEN T1.atom_id ELSE NULL END) AS sulfur_nums FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN dataroom_eval_bird.toxicology.bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 217,
    "room_id": 152,
    "good_sql": "SELECT T2.atom_id, T2.atom_id2 FROM dataroom_eval_bird.toxicology.bond AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '#'",
    "complexity": "Single Join"
  },
  {
    "query_id": 218,
    "room_id": 153,
    "good_sql": "SELECT T2.atom_id, T2.atom_id2 FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T2.atom_id = T1.atom_id WHERE T1.molecule_id = 'TR181'",
    "complexity": "Single Join"
  },
  {
    "query_id": 219,
    "room_id": 154,
    "good_sql": "SELECT CAST(COUNT(DISTINCT CASE WHEN T1.element != 'f' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 220,
    "room_id": 155,
    "good_sql": "SELECT CAST(COUNT(DISTINCT CASE WHEN T2.label = '+' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN dataroom_eval_bird.toxicology.bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '#'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 221,
    "room_id": 156,
    "good_sql": "SELECT DISTINCT T.element FROM dataroom_eval_bird.toxicology.atom AS T WHERE T.molecule_id = 'TR000' ORDER BY T.element LIMIT 3",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 222,
    "room_id": 157,
    "good_sql": "SELECT SUBSTRING(T.bond_id, 1, 7) AS atom_id1, T.molecule_id || SUBSTRING(T.bond_id, 8, 2) AS atom_id2 FROM dataroom_eval_bird.toxicology.bond AS T WHERE T.molecule_id = 'TR001' AND T.bond_id = 'TR001_2_6'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 223,
    "room_id": 158,
    "good_sql": "SELECT COUNT(CASE WHEN T.label = '+' THEN T.molecule_id ELSE NULL END) - COUNT(CASE WHEN T.label = '-' THEN T.molecule_id ELSE NULL END) AS diff_car_notcar FROM dataroom_eval_bird.toxicology.molecule AS t",
    "complexity": "Aggregation"
  },
  {
    "query_id": 224,
    "room_id": 159,
    "good_sql": "SELECT T.atom_id FROM dataroom_eval_bird.toxicology.connected AS T WHERE T.bond_id = 'TR000_2_5'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 225,
    "room_id": 160,
    "good_sql": "SELECT T.bond_id FROM dataroom_eval_bird.toxicology.connected AS T WHERE T.atom_id2 = 'TR000_2'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 226,
    "room_id": 161,
    "good_sql": "SELECT DISTINCT T.molecule_id FROM dataroom_eval_bird.toxicology.bond AS T WHERE T.bond_type = '=' ORDER BY T.molecule_id LIMIT 5",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 227,
    "room_id": 162,
    "good_sql": "SELECT CAST(COUNT(CASE WHEN T.bond_type = '=' THEN T.bond_id ELSE NULL END) AS REAL) * 100 / COUNT(T.bond_id) FROM dataroom_eval_bird.toxicology.bond AS T WHERE T.molecule_id = 'TR008'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 228,
    "room_id": 163,
    "good_sql": "SELECT CAST(COUNT(CASE WHEN T.label = '+' THEN T.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(T.molecule_id) FROM dataroom_eval_bird.toxicology.molecule AS t",
    "complexity": "Aggregation"
  },
  {
    "query_id": 229,
    "room_id": 164,
    "good_sql": "SELECT CAST(COUNT(CASE WHEN T.element = 'h' THEN T.atom_id ELSE NULL END) AS REAL) * 100 / COUNT(T.atom_id) FROM dataroom_eval_bird.toxicology.atom AS T WHERE T.molecule_id = 'TR206'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 230,
    "room_id": 165,
    "good_sql": "SELECT DISTINCT T.bond_type FROM dataroom_eval_bird.toxicology.bond AS T WHERE T.molecule_id = 'TR000'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 231,
    "room_id": 166,
    "good_sql": "SELECT DISTINCT T1.element, T2.label FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'",
    "complexity": "Single Join"
  },
  {
    "query_id": 232,
    "room_id": 167,
    "good_sql": "SELECT T.bond_type FROM ( SELECT T1.bond_type, COUNT(T1.molecule_id) FROM dataroom_eval_bird.toxicology.bond AS T1  WHERE T1.molecule_id = 'TR018' GROUP BY T1.bond_type ORDER BY COUNT(T1.molecule_id) DESC LIMIT 1 ) AS T",
    "complexity": "Subqueries, Aggregation"
  },
  {
    "query_id": 233,
    "room_id": 168,
    "good_sql": "SELECT DISTINCT T2.molecule_id FROM dataroom_eval_bird.toxicology.bond AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-' ORDER BY T2.molecule_id LIMIT 3",
    "complexity": "Single Join"
  },
  {
    "query_id": 234,
    "room_id": 169,
    "good_sql": "SELECT DISTINCT T2.bond_id FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.molecule_id = 'TR006' ORDER BY T2.bond_id LIMIT 2",
    "complexity": "Single Join"
  },
  {
    "query_id": 235,
    "room_id": 170,
    "good_sql": "SELECT COUNT(T2.bond_id) FROM dataroom_eval_bird.toxicology.bond AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.molecule_id = 'TR009' AND T2.atom_id = T1.molecule_id || '_1' AND T2.atom_id2 = T1.molecule_id || '_2'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 236,
    "room_id": 171,
    "good_sql": "SELECT COUNT(DISTINCT T2.molecule_id) FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element = 'br'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 237,
    "room_id": 172,
    "good_sql": "SELECT T1.bond_type, T2.atom_id, T2.atom_id2 FROM dataroom_eval_bird.toxicology.bond AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_id = 'TR001_6_9'",
    "complexity": "Single Join"
  },
  {
    "query_id": 238,
    "room_id": 173,
    "good_sql": "SELECT T2.molecule_id, IF(T2.label = '+', 'YES', 'NO') AS flag_carcinogenic FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_10'",
    "complexity": "Single Join"
  },
  {
    "query_id": 239,
    "room_id": 152,
    "good_sql": "SELECT COUNT(DISTINCT T.molecule_id) FROM dataroom_eval_bird.toxicology.bond AS T WHERE T.bond_type = '#'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 240,
    "room_id": 174,
    "good_sql": "SELECT COUNT(T.bond_id) FROM dataroom_eval_bird.toxicology.connected AS T WHERE SUBSTRING(T.atom_id, -2) = '19'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 241,
    "room_id": 175,
    "good_sql": "SELECT DISTINCT T.element FROM dataroom_eval_bird.toxicology.atom AS T WHERE T.molecule_id = 'TR004'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 242,
    "room_id": 147,
    "good_sql": "SELECT COUNT(T.molecule_id) FROM dataroom_eval_bird.toxicology.molecule AS T WHERE T.label = '-'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 243,
    "room_id": 176,
    "good_sql": "SELECT DISTINCT T2.molecule_id FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE SUBSTRING(T1.atom_id, -2) BETWEEN '21' AND '25' AND T2.label = '+'",
    "complexity": "Single Join"
  },
  {
    "query_id": 244,
    "room_id": 177,
    "good_sql": "SELECT T2.bond_id FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id IN ( SELECT T3.bond_id FROM dataroom_eval_bird.toxicology.connected AS T3 INNER JOIN dataroom_eval_bird.toxicology.atom AS T4 ON T3.atom_id = T4.atom_id WHERE T4.element = 'p' ) AND T1.element = 'n'",
    "complexity": "Single Join, Subqueries"
  },
  {
    "query_id": 245,
    "room_id": 178,
    "good_sql": "SELECT T1.label FROM dataroom_eval_bird.toxicology.molecule AS T1 INNER JOIN ( SELECT T.molecule_id, COUNT(T.bond_type) FROM dataroom_eval_bird.toxicology.bond AS T WHERE T.bond_type = '=' GROUP BY T.molecule_id ORDER BY COUNT(T.bond_type) DESC LIMIT 1 ) AS T2 ON T1.molecule_id = T2.molecule_id",
    "complexity": "Single Join, Subqueries, Aggregation"
  },
  {
    "query_id": 246,
    "room_id": 179,
    "good_sql": "SELECT CAST(COUNT(T2.bond_id) AS REAL) / COUNT(T1.atom_id) FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'i'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 247,
    "room_id": 180,
    "good_sql": "SELECT T1.bond_type, T1.bond_id FROM dataroom_eval_bird.toxicology.bond AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T1.bond_id = T2.bond_id WHERE SUBSTRING(T2.atom_id, 7, 2) = '45'",
    "complexity": "Single Join"
  },
  {
    "query_id": 248,
    "room_id": 181,
    "good_sql": "SELECT DISTINCT T.element FROM dataroom_eval_bird.toxicology.atom AS T WHERE NOT T.element IN (SELECT DISTINCT T1.element FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T1.atom_id = T2.atom_id)",
    "complexity": "Subqueries, Single Join"
  },
  {
    "query_id": 249,
    "room_id": 182,
    "good_sql": "SELECT T2.atom_id, T2.atom_id2 FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN dataroom_eval_bird.toxicology.bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '#' AND T3.molecule_id = 'TR447'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 250,
    "room_id": 183,
    "good_sql": "SELECT T2.element FROM dataroom_eval_bird.toxicology.connected AS T1 INNER JOIN dataroom_eval_bird.toxicology.atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR144_8_19'",
    "complexity": "Single Join"
  },
  {
    "query_id": 251,
    "room_id": 184,
    "good_sql": "SELECT T.molecule_id FROM ( SELECT T3.molecule_id, COUNT(T1.bond_type) FROM dataroom_eval_bird.toxicology.bond AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.label = '+' AND T1.bond_type = '=' GROUP BY T3.molecule_id ORDER BY COUNT(T1.bond_type) DESC LIMIT 1 ) AS T",
    "complexity": "Subqueries, Single Join, Aggregation"
  },
  {
    "query_id": 252,
    "room_id": 185,
    "good_sql": "SELECT T.element FROM (SELECT T2.element, COUNT(DISTINCT T2.molecule_id) FROM dataroom_eval_bird.toxicology.molecule AS T1 INNER JOIN dataroom_eval_bird.toxicology.atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' GROUP BY T2.element ORDER BY COUNT(DISTINCT T2.molecule_id) LIMIT 1) AS t",
    "complexity": "Subqueries, Single Join, Aggregation"
  },
  {
    "query_id": 253,
    "room_id": 186,
    "good_sql": "SELECT T2.atom_id, T2.atom_id2 FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'pb'",
    "complexity": "Single Join"
  },
  {
    "query_id": 254,
    "room_id": 187,
    "good_sql": "SELECT DISTINCT T3.element FROM dataroom_eval_bird.toxicology.bond AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN dataroom_eval_bird.toxicology.atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '#'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 255,
    "room_id": 188,
    "good_sql": "SELECT CAST((SELECT COUNT(T1.atom_id) FROM dataroom_eval_bird.toxicology.connected AS T1 INNER JOIN dataroom_eval_bird.toxicology.bond AS T2 ON T1.bond_id = T2.bond_id GROUP BY T2.bond_type ORDER BY COUNT(T2.bond_id) DESC LIMIT 1 ) AS REAL) * 100 / ( SELECT COUNT(atom_id) FROM dataroom_eval_bird.toxicology.connected )",
    "complexity": "Subqueries, Single Join, Aggregation"
  },
  {
    "query_id": 256,
    "room_id": 189,
    "good_sql": "SELECT CAST(COUNT(CASE WHEN T2.label = '+' THEN T1.bond_id ELSE NULL END) AS REAL) * 100 / COUNT(T1.bond_id) FROM dataroom_eval_bird.toxicology.bond AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 257,
    "room_id": 190,
    "good_sql": "SELECT COUNT(T.atom_id) FROM dataroom_eval_bird.toxicology.atom AS T WHERE T.element = 'c' OR T.element = 'h'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 258,
    "room_id": 191,
    "good_sql": "SELECT DISTINCT T2.atom_id2 FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 's'",
    "complexity": "Single Join"
  },
  {
    "query_id": 259,
    "room_id": 192,
    "good_sql": "SELECT DISTINCT T3.bond_type FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN dataroom_eval_bird.toxicology.bond AS T3 ON T3.bond_id = T2.bond_id WHERE T1.element = 'sn'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 260,
    "room_id": 193,
    "good_sql": "SELECT COUNT(DISTINCT T.element) FROM ( SELECT DISTINCT T2.molecule_id, T1.element FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN dataroom_eval_bird.toxicology.bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '-' ) AS T",
    "complexity": "Aggregation, Multiple Joins, Subqueries"
  },
  {
    "query_id": 261,
    "room_id": 194,
    "good_sql": "SELECT COUNT(T1.atom_id) FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN dataroom_eval_bird.toxicology.bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '#' AND T1.element IN ('p', 'br')",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 262,
    "room_id": 185,
    "good_sql": "SELECT DISTINCT T1.bond_id FROM dataroom_eval_bird.toxicology.bond AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'",
    "complexity": "Single Join"
  },
  {
    "query_id": 263,
    "room_id": 195,
    "good_sql": "SELECT DISTINCT T1.molecule_id FROM dataroom_eval_bird.toxicology.bond AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' AND T1.bond_type = '-'",
    "complexity": "Single Join"
  },
  {
    "query_id": 264,
    "room_id": 196,
    "good_sql": "SELECT CAST(COUNT(CASE WHEN T.element = 'cl' THEN T.atom_id ELSE NULL END) AS REAL) * 100 / COUNT(T.atom_id) FROM ( SELECT T1.atom_id, T1.element FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN dataroom_eval_bird.toxicology.bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '-' ) AS T",
    "complexity": "Aggregation, Multiple Joins, Subqueries"
  },
  {
    "query_id": 265,
    "room_id": 197,
    "good_sql": "SELECT molecule_id, T.label FROM dataroom_eval_bird.toxicology.molecule AS T WHERE T.molecule_id IN ('TR000', 'TR001', 'TR002')",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 266,
    "room_id": 147,
    "good_sql": "SELECT T.molecule_id FROM dataroom_eval_bird.toxicology.molecule AS T WHERE T.label = '-'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 267,
    "room_id": 185,
    "good_sql": "SELECT COUNT(T.molecule_id) FROM dataroom_eval_bird.toxicology.molecule AS T WHERE T.molecule_id BETWEEN 'TR000' AND 'TR030' AND T.label = '+'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 268,
    "room_id": 198,
    "good_sql": "SELECT T2.molecule_id, T2.bond_type FROM dataroom_eval_bird.toxicology.molecule AS T1 INNER JOIN dataroom_eval_bird.toxicology.bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id BETWEEN 'TR000' AND 'TR050'",
    "complexity": "Single Join"
  },
  {
    "query_id": 269,
    "room_id": 199,
    "good_sql": "SELECT T2.element FROM dataroom_eval_bird.toxicology.connected AS T1 INNER JOIN dataroom_eval_bird.toxicology.atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR001_10_11'",
    "complexity": "Single Join"
  },
  {
    "query_id": 270,
    "room_id": 200,
    "good_sql": "SELECT COUNT(T3.bond_id) FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN dataroom_eval_bird.toxicology.bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T1.element = 'i'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 271,
    "room_id": 201,
    "good_sql": "SELECT T2.label FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'ca' GROUP BY T2.label ORDER BY COUNT(T2.label) DESC LIMIT 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 272,
    "room_id": 202,
    "good_sql": "SELECT T2.bond_id, T2.atom_id2, T1.element AS flag_have_CaCl FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T2.atom_id = T1.atom_id WHERE T2.bond_id = 'TR001_1_8' AND (T1.element = 'c1' OR T1.element = 'c')",
    "complexity": "Basic SQL, Single Join"
  },
  {
    "query_id": 273,
    "room_id": 203,
    "good_sql": "SELECT DISTINCT T2.molecule_id FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN dataroom_eval_bird.toxicology.bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '#' AND T1.element = 'c' AND T2.label = '-'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 274,
    "room_id": 204,
    "good_sql": "SELECT CAST(COUNT( CASE WHEN T1.element = 'cl' THEN T1.element ELSE NULL END) AS REAL) * 100 / COUNT(T1.element) FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 275,
    "room_id": 205,
    "good_sql": "SELECT DISTINCT T.element FROM dataroom_eval_bird.toxicology.atom AS T WHERE T.molecule_id = 'TR001'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 276,
    "room_id": 161,
    "good_sql": "SELECT DISTINCT T.molecule_id FROM dataroom_eval_bird.toxicology.bond AS T WHERE T.bond_type = '='",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 277,
    "room_id": 206,
    "good_sql": "SELECT T2.atom_id, T2.atom_id2 FROM dataroom_eval_bird.toxicology.bond AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '#'",
    "complexity": "Single Join"
  },
  {
    "query_id": 278,
    "room_id": 199,
    "good_sql": "SELECT T1.element FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR005_16_26'",
    "complexity": "Single Join"
  },
  {
    "query_id": 279,
    "room_id": 195,
    "good_sql": "SELECT COUNT(DISTINCT T2.molecule_id) FROM dataroom_eval_bird.toxicology.bond AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' AND T1.bond_type = '-'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 280,
    "room_id": 207,
    "good_sql": "SELECT T2.label FROM dataroom_eval_bird.toxicology.bond AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_10_11'",
    "complexity": "Single Join"
  },
  {
    "query_id": 281,
    "room_id": 208,
    "good_sql": "SELECT DISTINCT T1.bond_id, T2.label FROM dataroom_eval_bird.toxicology.bond AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'",
    "complexity": "Single Join"
  },
  {
    "query_id": 282,
    "room_id": 209,
    "good_sql": "SELECT DISTINCT T1.element FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND SUBSTRING(T1.atom_id, -1) = '4' AND LENGTH(T1.atom_id) = 7",
    "complexity": "Single Join"
  },
  {
    "query_id": 283,
    "room_id": 210,
    "good_sql": "SELECT CAST(COUNT(CASE WHEN T.element = 'h' THEN T.atom_id ELSE NULL END) AS REAL) / COUNT(T.atom_id) FROM ( SELECT DISTINCT T1.atom_id, T1.element, T1.molecule_id, T2.label FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR006' ) AS T UNION ALL SELECT DISTINCT T3.label FROM ( SELECT DISTINCT T1.atom_id, T1.element, T1.molecule_id, T2.label FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR006' ) AS T3",
    "complexity": "Aggregation, Single Join, Set options"
  },
  {
    "query_id": 284,
    "room_id": 211,
    "good_sql": "SELECT T2.label AS flag_carcinogenic FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'ca'",
    "complexity": "Single Join"
  },
  {
    "query_id": 285,
    "room_id": 212,
    "good_sql": "SELECT DISTINCT T2.bond_type FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'te'",
    "complexity": "Single Join"
  },
  {
    "query_id": 286,
    "room_id": 213,
    "good_sql": "SELECT T1.element FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN dataroom_eval_bird.toxicology.bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_10_11'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 287,
    "room_id": 152,
    "good_sql": "SELECT CAST(COUNT(CASE WHEN T.bond_type = '#' THEN T.bond_id ELSE NULL END) AS REAL) * 100 / COUNT(T.bond_id) FROM dataroom_eval_bird.toxicology.bond AS T",
    "complexity": "Aggregation"
  },
  {
    "query_id": 288,
    "room_id": 214,
    "good_sql": "SELECT CAST(COUNT(CASE WHEN T.bond_type = '=' THEN T.bond_id ELSE NULL END) AS REAL) * 100 / COUNT(T.bond_id) FROM dataroom_eval_bird.toxicology.bond AS T WHERE T.molecule_id = 'TR047'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 289,
    "room_id": 215,
    "good_sql": "SELECT T2.label AS flag_carcinogenic FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR001_1'",
    "complexity": "Single Join"
  },
  {
    "query_id": 290,
    "room_id": 215,
    "good_sql": "SELECT T.label FROM dataroom_eval_bird.toxicology.molecule AS T WHERE T.molecule_id = 'TR151'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 291,
    "room_id": 199,
    "good_sql": "SELECT DISTINCT T.element FROM dataroom_eval_bird.toxicology.atom AS T WHERE T.molecule_id = 'TR151'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 292,
    "room_id": 215,
    "good_sql": "SELECT COUNT(T.molecule_id) FROM dataroom_eval_bird.toxicology.molecule AS T WHERE T.label = '+'",
    "complexity": "Basic SQL, Aggregation"
  },
  {
    "query_id": 293,
    "room_id": 216,
    "good_sql": "SELECT T.atom_id FROM dataroom_eval_bird.toxicology.atom AS T WHERE T.molecule_id BETWEEN 'TR010' AND 'TR050' AND T.element = 'c'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 294,
    "room_id": 215,
    "good_sql": "SELECT COUNT(T1.atom_id) FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 295,
    "room_id": 184,
    "good_sql": "SELECT T1.bond_id FROM dataroom_eval_bird.toxicology.bond AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.bond_type = '='",
    "complexity": "Single Join"
  },
  {
    "query_id": 296,
    "room_id": 217,
    "good_sql": "SELECT COUNT(T1.atom_id) AS atomnums_h FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element = 'h'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 297,
    "room_id": 218,
    "good_sql": "SELECT T2.molecule_id, T2.bond_id, T1.atom_id FROM dataroom_eval_bird.toxicology.connected AS T1 INNER JOIN dataroom_eval_bird.toxicology.bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.atom_id = 'TR000_1' AND T2.bond_id = 'TR000_1_2'",
    "complexity": "Single Join"
  },
  {
    "query_id": 298,
    "room_id": 219,
    "good_sql": "SELECT T1.atom_id FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.label = '-'",
    "complexity": "Single Join"
  },
  {
    "query_id": 299,
    "room_id": 220,
    "good_sql": "SELECT CAST(COUNT(CASE WHEN T1.element = 'h' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(T2.molecule_id) FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 300,
    "room_id": 215,
    "good_sql": "SELECT T.label FROM dataroom_eval_bird.toxicology.molecule AS T WHERE T.molecule_id = 'TR124'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 301,
    "room_id": 221,
    "good_sql": "SELECT T.atom_id FROM dataroom_eval_bird.toxicology.atom AS T WHERE T.molecule_id = 'TR186'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 302,
    "room_id": 198,
    "good_sql": "SELECT T.bond_type FROM dataroom_eval_bird.toxicology.bond AS T WHERE T.bond_id = 'TR007_4_19'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 303,
    "room_id": 199,
    "good_sql": "SELECT DISTINCT T1.element FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_2_4'",
    "complexity": "Single Join"
  },
  {
    "query_id": 304,
    "room_id": 222,
    "good_sql": "SELECT COUNT(T1.bond_id), T2.label FROM dataroom_eval_bird.toxicology.bond AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '=' AND T2.molecule_id = 'TR006' GROUP BY T2.label",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 305,
    "room_id": 223,
    "good_sql": "SELECT DISTINCT T2.molecule_id, T1.element FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'",
    "complexity": "Single Join"
  },
  {
    "query_id": 306,
    "room_id": 193,
    "good_sql": "SELECT T1.bond_id, T2.atom_id, T2.atom_id2 FROM dataroom_eval_bird.toxicology.bond AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '-'",
    "complexity": "Single Join"
  },
  {
    "query_id": 307,
    "room_id": 187,
    "good_sql": "SELECT DISTINCT T1.molecule_id, T2.element FROM dataroom_eval_bird.toxicology.bond AS T1 INNER JOIN dataroom_eval_bird.toxicology.atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'",
    "complexity": "Single Join"
  },
  {
    "query_id": 308,
    "room_id": 199,
    "good_sql": "SELECT T2.element FROM dataroom_eval_bird.toxicology.connected AS T1 INNER JOIN dataroom_eval_bird.toxicology.atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR000_2_3'",
    "complexity": "Single Join"
  },
  {
    "query_id": 309,
    "room_id": 224,
    "good_sql": "SELECT COUNT(T1.bond_id) FROM dataroom_eval_bird.toxicology.connected AS T1 INNER JOIN dataroom_eval_bird.toxicology.atom AS T2 ON T1.atom_id = T2.atom_id WHERE T2.element = 'cl'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 310,
    "room_id": 218,
    "good_sql": "SELECT T1.atom_id, COUNT(DISTINCT T2.bond_type) FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR346' GROUP BY T1.atom_id, T2.bond_type",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 311,
    "room_id": 225,
    "good_sql": "SELECT COUNT(DISTINCT T2.molecule_id), SUM(CASE WHEN T2.label = '+' THEN 1 ELSE 0 END) FROM dataroom_eval_bird.toxicology.bond AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '='",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 312,
    "room_id": 226,
    "good_sql": "SELECT COUNT(DISTINCT T1.molecule_id) FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element != 's' AND T2.bond_type != '='",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 313,
    "room_id": 185,
    "good_sql": "SELECT DISTINCT T2.label FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN dataroom_eval_bird.toxicology.bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_id = 'TR001_2_4'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 314,
    "room_id": 218,
    "good_sql": "SELECT COUNT(T.atom_id) FROM dataroom_eval_bird.toxicology.atom AS T WHERE T.molecule_id = 'TR005'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 315,
    "room_id": 193,
    "good_sql": "SELECT COUNT(T.bond_id) FROM dataroom_eval_bird.toxicology.bond AS T WHERE T.bond_type = '-'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 316,
    "room_id": 215,
    "good_sql": "SELECT DISTINCT T1.molecule_id FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'cl' AND T2.label = '+'",
    "complexity": "Single Join"
  },
  {
    "query_id": 317,
    "room_id": 147,
    "good_sql": "SELECT DISTINCT T1.molecule_id FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.label = '-'",
    "complexity": "Single Join"
  },
  {
    "query_id": 318,
    "room_id": 227,
    "good_sql": "SELECT COUNT(CASE WHEN T2.label = '+' AND T1.element = 'cl' THEN T2.molecule_id ELSE NULL END) * 100 / COUNT(T2.molecule_id) FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 319,
    "room_id": 218,
    "good_sql": "SELECT DISTINCT T1.molecule_id FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_1_7'",
    "complexity": "Single Join"
  },
  {
    "query_id": 320,
    "room_id": 199,
    "good_sql": "SELECT COUNT(DISTINCT T1.element) FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_3_4'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 321,
    "room_id": 228,
    "good_sql": "SELECT T1.bond_type FROM dataroom_eval_bird.toxicology.bond AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.atom_id = 'TR000_1' AND T2.atom_id2 = 'TR000_2'",
    "complexity": "Single Join"
  },
  {
    "query_id": 322,
    "room_id": 218,
    "good_sql": "SELECT T1.molecule_id FROM dataroom_eval_bird.toxicology.bond AS T1 INNER JOIN dataroom_eval_bird.toxicology.connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.atom_id = 'TR000_2' AND T2.atom_id2 = 'TR000_4'",
    "complexity": "Single Join"
  },
  {
    "query_id": 323,
    "room_id": 229,
    "good_sql": "SELECT T.element FROM dataroom_eval_bird.toxicology.atom AS T WHERE T.atom_id = 'TR000_1'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 324,
    "room_id": 207,
    "good_sql": "SELECT label FROM dataroom_eval_bird.toxicology.molecule AS T WHERE T.molecule_id = 'TR000'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 325,
    "room_id": 230,
    "good_sql": "SELECT CAST(COUNT(CASE WHEN T.bond_type = '-' THEN T.bond_id ELSE NULL END) AS REAL) * 100 / COUNT(T.bond_id) FROM dataroom_eval_bird.toxicology.bond AS t",
    "complexity": "Aggregation"
  },
  {
    "query_id": 326,
    "room_id": 231,
    "good_sql": "SELECT COUNT(DISTINCT T1.molecule_id) FROM dataroom_eval_bird.toxicology.molecule AS T1 INNER JOIN dataroom_eval_bird.toxicology.atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'n' AND T1.label = '+'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 327,
    "room_id": 232,
    "good_sql": "SELECT DISTINCT T1.molecule_id FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 's' AND T2.bond_type = '='",
    "complexity": "Single Join"
  },
  {
    "query_id": 328,
    "room_id": 233,
    "good_sql": "SELECT T.molecule_id FROM (SELECT T1.molecule_id, COUNT(T2.atom_id) FROM dataroom_eval_bird.toxicology.molecule AS T1 INNER JOIN dataroom_eval_bird.toxicology.atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' GROUP BY T1.molecule_id HAVING COUNT(T2.atom_id) > 5) AS t",
    "complexity": "Aggregation, Single Join, Subqueries"
  },
  {
    "query_id": 329,
    "room_id": 234,
    "good_sql": "SELECT T1.element FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR024' AND T2.bond_type = '='",
    "complexity": "Single Join"
  },
  {
    "query_id": 330,
    "room_id": 235,
    "good_sql": "SELECT T.molecule_id FROM (SELECT T2.molecule_id, COUNT(T1.atom_id) FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' GROUP BY T2.molecule_id ORDER BY COUNT(T1.atom_id) DESC LIMIT 1) AS t",
    "complexity": "Subqueries, Single Join, Aggregation"
  },
  {
    "query_id": 331,
    "room_id": 236,
    "good_sql": "SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.molecule_id) FROM dataroom_eval_bird.toxicology.molecule AS T1 INNER JOIN dataroom_eval_bird.toxicology.atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN dataroom_eval_bird.toxicology.bond AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.bond_type = '#' AND T2.element = 'h'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 332,
    "room_id": 215,
    "good_sql": "SELECT COUNT(T.molecule_id) FROM dataroom_eval_bird.toxicology.molecule AS T WHERE T.label = '+'",
    "complexity": "Basic SQL, Aggregation"
  },
  {
    "query_id": 333,
    "room_id": 237,
    "good_sql": "SELECT COUNT(DISTINCT T.molecule_id) FROM dataroom_eval_bird.toxicology.bond AS T WHERE T.molecule_id BETWEEN 'TR004' AND 'TR010' AND T.bond_type = '-'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 334,
    "room_id": 238,
    "good_sql": "SELECT COUNT(T.atom_id) FROM dataroom_eval_bird.toxicology.atom AS T WHERE T.molecule_id = 'TR008' AND T.element = 'c'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 335,
    "room_id": 148,
    "good_sql": "SELECT T1.element FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-'",
    "complexity": "Single Join"
  },
  {
    "query_id": 336,
    "room_id": 239,
    "good_sql": "SELECT COUNT(DISTINCT T1.molecule_id) FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '=' AND T1.element = 'o'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 337,
    "room_id": 240,
    "good_sql": "SELECT COUNT(DISTINCT T1.molecule_id) FROM dataroom_eval_bird.toxicology.molecule AS T1 INNER JOIN dataroom_eval_bird.toxicology.bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#' AND T1.label = '-'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 338,
    "room_id": 241,
    "good_sql": "SELECT DISTINCT T1.element, T2.bond_type FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR016'",
    "complexity": "Single Join"
  },
  {
    "query_id": 339,
    "room_id": 242,
    "good_sql": "SELECT T1.atom_id FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN dataroom_eval_bird.toxicology.bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T2.molecule_id = 'TR012' AND T3.bond_type = '=' AND T1.element = 'c'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 340,
    "room_id": 243,
    "good_sql": "SELECT T1.atom_id FROM dataroom_eval_bird.toxicology.atom AS T1 INNER JOIN dataroom_eval_bird.toxicology.molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'o' AND T2.label = '+'",
    "complexity": "Single Join"
  },
  {
    "query_id": 341,
    "room_id": 244,
    "good_sql": "SELECT id FROM dataroom_eval_bird.card_games.cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 342,
    "room_id": 245,
    "good_sql": "SELECT id FROM dataroom_eval_bird.card_games.cards WHERE borderColor = 'borderless' AND (cardKingdomId IS NULL OR cardKingdomId IS NULL)",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 343,
    "room_id": 246,
    "good_sql": "SELECT name FROM dataroom_eval_bird.card_games.cards ORDER BY faceConvertedManaCost LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 344,
    "room_id": 247,
    "good_sql": "SELECT id FROM dataroom_eval_bird.card_games.cards WHERE edhrecRank < 100 AND frameVersion = 2015",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 345,
    "room_id": 248,
    "good_sql": "SELECT DISTINCT T1.id FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'gladiator' AND T2.status = 'Banned' AND T1.rarity = 'mythic'",
    "complexity": "Single Join"
  },
  {
    "query_id": 346,
    "room_id": 249,
    "good_sql": "SELECT DISTINCT T2.status FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.type = 'Artifact' AND T2.format = 'vintage' AND T1.side IS NULL",
    "complexity": "Single Join"
  },
  {
    "query_id": 347,
    "room_id": 250,
    "good_sql": "SELECT T1.id, T1.artist FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Legal' AND T2.format = 'commander' AND (T1.power IS NULL OR T1.power = '*')",
    "complexity": "Single Join"
  },
  {
    "query_id": 348,
    "room_id": 251,
    "good_sql": "SELECT T1.id, T2.text, T1.hasContentWarning FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Stephen Daniele'",
    "complexity": "Single Join"
  },
  {
    "query_id": 349,
    "room_id": 252,
    "good_sql": "SELECT T2.text FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Sublime Epiphany' AND T1.number = '74s'",
    "complexity": "Single Join"
  },
  {
    "query_id": 350,
    "room_id": 253,
    "good_sql": "SELECT FIRST(T1.name), T1.artist, FIRST(T1.isPromo) FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.isPromo = 1 GROUP BY T1.artist ORDER BY COUNT(DISTINCT T1.uuid) DESC LIMIT 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 351,
    "room_id": 254,
    "good_sql": "SELECT T2.language FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Annul' AND T1.number = 29",
    "complexity": "Single Join"
  },
  {
    "query_id": 352,
    "room_id": 255,
    "good_sql": "SELECT T1.name FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Japanese'",
    "complexity": "Single Join"
  },
  {
    "query_id": 353,
    "room_id": 256,
    "good_sql": "SELECT CAST(SUM(CASE WHEN T2.language = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.foreign_data AS T2 ON T1.uuid = T2.uuid",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 354,
    "room_id": 257,
    "good_sql": "SELECT T1.name, T1.totalSetSize FROM dataroom_eval_bird.card_games.sets AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian'",
    "complexity": "Single Join"
  },
  {
    "query_id": 355,
    "room_id": 258,
    "good_sql": "SELECT COUNT(type) FROM dataroom_eval_bird.card_games.cards WHERE artist = 'Aaron Boyd'",
    "complexity": "Basic SQL, Aggregation"
  },
  {
    "query_id": 356,
    "room_id": 259,
    "good_sql": "SELECT DISTINCT keywords FROM dataroom_eval_bird.card_games.cards WHERE name = 'Angel of Mercy'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 357,
    "room_id": 260,
    "good_sql": "SELECT COUNT(*) FROM dataroom_eval_bird.card_games.cards WHERE power = '*'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 358,
    "room_id": 261,
    "good_sql": "SELECT promoTypes FROM dataroom_eval_bird.card_games.cards WHERE name = 'Duress' AND promoTypes IS NOT NULL",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 359,
    "room_id": 262,
    "good_sql": "SELECT DISTINCT borderColor FROM dataroom_eval_bird.card_games.cards WHERE name = 'Ancestors Chosen'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 360,
    "room_id": 263,
    "good_sql": "SELECT originalType FROM dataroom_eval_bird.card_games.cards WHERE name = 'Ancestors Chosen' AND originalType IS NOT NULL",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 361,
    "room_id": 259,
    "good_sql": "SELECT language FROM dataroom_eval_bird.card_games.set_translations WHERE id IN ( SELECT id FROM dataroom_eval_bird.card_games.cards WHERE name = 'Angel of Mercy' )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 362,
    "room_id": 264,
    "good_sql": "SELECT COUNT(DISTINCT T1.id) FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Restricted' AND T1.isTextless = 0",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 363,
    "room_id": 265,
    "good_sql": "SELECT T2.text FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Condemn'",
    "complexity": "Single Join"
  },
  {
    "query_id": 364,
    "room_id": 266,
    "good_sql": "SELECT COUNT(DISTINCT T1.id) FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Restricted' AND T1.isStarter = 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 365,
    "room_id": 267,
    "good_sql": "SELECT DISTINCT T2.status FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Cloudchaser Eagle'",
    "complexity": "Single Join"
  },
  {
    "query_id": 366,
    "room_id": 268,
    "good_sql": "SELECT DISTINCT T1.type FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Benalish Knight'",
    "complexity": "Single Join"
  },
  {
    "query_id": 367,
    "room_id": 269,
    "good_sql": "SELECT T2.format FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Benalish Knight'",
    "complexity": "Single Join"
  },
  {
    "query_id": 368,
    "room_id": 270,
    "good_sql": "SELECT T1.artist FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Phyrexian'",
    "complexity": "Single Join"
  },
  {
    "query_id": 369,
    "room_id": 271,
    "good_sql": "SELECT CAST(SUM(CASE WHEN borderColor = 'borderless' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM dataroom_eval_bird.card_games.cards",
    "complexity": "Aggregation"
  },
  {
    "query_id": 370,
    "room_id": 272,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.isReprint = 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 371,
    "room_id": 273,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.borderColor = 'borderless' AND T2.language = 'Russian'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 372,
    "room_id": 274,
    "good_sql": "SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 373,
    "room_id": 275,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.card_games.cards WHERE toughness = 99",
    "complexity": "Aggregation"
  },
  {
    "query_id": 374,
    "room_id": 258,
    "good_sql": "SELECT DISTINCT name FROM dataroom_eval_bird.card_games.cards WHERE artist = 'Aaron Boyd'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 375,
    "room_id": 276,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.card_games.cards WHERE availability = 'mtgo' AND borderColor = 'black'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 376,
    "room_id": 277,
    "good_sql": "SELECT id FROM dataroom_eval_bird.card_games.cards WHERE convertedManaCost = 0",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 377,
    "room_id": 275,
    "good_sql": "SELECT layout FROM dataroom_eval_bird.card_games.cards WHERE keywords = 'Flying'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 378,
    "room_id": 278,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.card_games.cards WHERE originalType = 'Summon - Angel' AND subtypes != 'Angel'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 379,
    "room_id": 279,
    "good_sql": "SELECT id FROM dataroom_eval_bird.card_games.cards WHERE cardKingdomId IS NOT NULL AND cardKingdomFoilId IS NOT NULL",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 380,
    "room_id": 280,
    "good_sql": "SELECT id FROM dataroom_eval_bird.card_games.cards WHERE duelDeck = 'a'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 381,
    "room_id": 275,
    "good_sql": "SELECT edhrecRank FROM dataroom_eval_bird.card_games.cards WHERE frameVersion = 2015",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 382,
    "room_id": 281,
    "good_sql": "SELECT T1.artist FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Chinese Simplified'",
    "complexity": "Single Join"
  },
  {
    "query_id": 383,
    "room_id": 282,
    "good_sql": "SELECT T1.name FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.availability = 'paper' AND T2.language = 'Japanese'",
    "complexity": "Single Join"
  },
  {
    "query_id": 384,
    "room_id": 283,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Banned' AND T1.borderColor = 'white'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 385,
    "room_id": 284,
    "good_sql": "SELECT T1.uuid, T3.language FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.legalities AS T2 ON T1.uuid = T2.uuid INNER JOIN dataroom_eval_bird.card_games.foreign_data AS T3 ON T1.uuid = T3.uuid WHERE T2.format = 'legacy'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 386,
    "room_id": 285,
    "good_sql": "SELECT T2.text FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Beacon of Immortality'",
    "complexity": "Single Join"
  },
  {
    "query_id": 387,
    "room_id": 286,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = 'future'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 388,
    "room_id": 287,
    "good_sql": "SELECT id, colors FROM dataroom_eval_bird.card_games.cards WHERE id IN ( SELECT id FROM dataroom_eval_bird.card_games.set_translations WHERE setCode = 'OGW' )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 389,
    "room_id": 288,
    "good_sql": "SELECT id, language FROM dataroom_eval_bird.card_games.set_translations WHERE id IN ( SELECT id FROM dataroom_eval_bird.card_games.cards WHERE convertedManaCost = 5 ) AND setCode = '10E'",
    "complexity": "Subqueries"
  },
  {
    "query_id": 390,
    "room_id": 289,
    "good_sql": "SELECT T1.id, T2.date FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Creature - Elf'",
    "complexity": "Single Join"
  },
  {
    "query_id": 391,
    "room_id": 290,
    "good_sql": "SELECT T1.colors, T2.format FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.id BETWEEN 1 AND 20",
    "complexity": "Single Join"
  },
  {
    "query_id": 392,
    "room_id": 291,
    "good_sql": "SELECT DISTINCT T1.name FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Artifact' AND T1.colors = 'B'",
    "complexity": "Single Join"
  },
  {
    "query_id": 393,
    "room_id": 292,
    "good_sql": "SELECT DISTINCT name FROM ( SELECT T1.name, T2.date FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'uncommon' ORDER BY T2.date ASC LIMIT 3 )",
    "complexity": "Subqueries, Single Join"
  },
  {
    "query_id": 394,
    "room_id": 293,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.card_games.cards WHERE (cardKingdomId IS NULL OR cardKingdomFoilId IS NULL) AND artist = 'John Avon'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 395,
    "room_id": 294,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.card_games.cards WHERE borderColor = 'white' AND cardKingdomId IS NOT NULL AND cardKingdomFoilId IS NOT NULL",
    "complexity": "Aggregation"
  },
  {
    "query_id": 396,
    "room_id": 295,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.card_games.cards WHERE hAND = '-1' AND artist = 'UDON' AND Availability = 'print' AND type = 'mtgo'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 397,
    "room_id": 296,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.card_games.cards WHERE frameVersion = 1993 AND availability = 'paper' AND hasContentWarning = 1",
    "complexity": "Aggregation"
  },
  {
    "query_id": 398,
    "room_id": 297,
    "good_sql": "SELECT manaCost FROM dataroom_eval_bird.card_games.cards WHERE availability = 'mtgo,paper' AND borderColor = 'black' AND frameVersion = 2003 AND layout = 'normal'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 399,
    "room_id": 298,
    "good_sql": "SELECT SUM(manaCost) FROM dataroom_eval_bird.card_games.cards WHERE artist = 'Rob Alexander'",
    "complexity": "Basic SQL, Aggregation"
  },
  {
    "query_id": 400,
    "room_id": 299,
    "good_sql": "SELECT DISTINCT subtypes, supertypes FROM dataroom_eval_bird.card_games.cards WHERE availability = 'arena' AND subtypes IS NOT NULL AND supertypes IS NOT NULL",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 401,
    "room_id": 300,
    "good_sql": "SELECT setCode FROM dataroom_eval_bird.card_games.set_translations WHERE language = 'Spanish'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 402,
    "room_id": 301,
    "good_sql": "SELECT SUM(CASE WHEN hAND = '+3' THEN 1.0 ELSE 0 END) / COUNT(id) * 100 FROM dataroom_eval_bird.card_games.cards WHERE frameEffects = 'legendary'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 403,
    "room_id": 302,
    "good_sql": "SELECT CAST(SUM(CASE WHEN isTextless = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM dataroom_eval_bird.card_games.cards WHERE isStorySpotlight = 1",
    "complexity": "Aggregation"
  },
  {
    "query_id": 404,
    "room_id": 303,
    "good_sql": "SELECT ( SELECT CAST(SUM(CASE WHEN language = 'Spanish' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM dataroom_eval_bird.card_games.foreign_data ), name FROM dataroom_eval_bird.card_games.foreign_data WHERE language = 'Spanish'",
    "complexity": "Subqueries, Aggregation"
  },
  {
    "query_id": 405,
    "room_id": 304,
    "good_sql": "SELECT T2.language FROM dataroom_eval_bird.card_games.sets AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T1.code = T2.setCode WHERE T1.baseSetSize = 309",
    "complexity": "Single Join"
  },
  {
    "query_id": 406,
    "room_id": 305,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.card_games.sets AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Portuguese (Brazil)' AND T1.block = 'Commander'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 407,
    "room_id": 306,
    "good_sql": "SELECT T1.id FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.rulings AS T2 ON T1.uuid = T2.uuid INNER JOIN dataroom_eval_bird.card_games.legalities AS T3 ON T1.uuid = T3.uuid WHERE T3.status = 'Legal' AND T1.types = 'Creature'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 408,
    "room_id": 307,
    "good_sql": "SELECT T1.subtypes, T1.supertypes FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.subtypes IS NOT NULL AND T1.supertypes IS NOT NULL",
    "complexity": "Single Join"
  },
  {
    "query_id": 409,
    "room_id": 308,
    "good_sql": "SELECT T2.text FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.rulings AS T2 ON T1.uuid = T2.uuid WHERE (T1.power IS NULL OR T1.power LIKE '%*%') AND T2.text LIKE '%triggered ability%'",
    "complexity": "Single Join"
  },
  {
    "query_id": 410,
    "room_id": 309,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.legalities AS T2 ON T1.uuid = T2.uuid INNER JOIN dataroom_eval_bird.card_games.rulings AS T3 ON T1.uuid = T3.uuid WHERE T2.format = 'premodern' AND T3.text = 'This is a triggered mana ability.' AND T1.Side IS NULL",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 411,
    "room_id": 310,
    "good_sql": "SELECT T1.id FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Erica Yang' AND T2.format = 'pauper' AND T1.availability = 'paper'",
    "complexity": "Single Join"
  },
  {
    "query_id": 412,
    "room_id": 275,
    "good_sql": "SELECT DISTINCT T1.artist FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.flavorText LIKE '%Das perfekte Gegenmittel zu einer dichten Formation%'",
    "complexity": "Single Join"
  },
  {
    "query_id": 413,
    "room_id": 311,
    "good_sql": "SELECT name FROM dataroom_eval_bird.card_games.foreign_data WHERE uuid IN ( SELECT uuid FROM dataroom_eval_bird.card_games.cards WHERE types = 'Creature' AND layout = 'normal' AND borderColor = 'black' AND artist = 'Matthew D. Wilson' ) AND language = 'French'",
    "complexity": "Subqueries"
  },
  {
    "query_id": 414,
    "room_id": 312,
    "good_sql": "SELECT COUNT(DISTINCT T1.id) FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'rare' AND T2.date = '2009-01-10'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 415,
    "room_id": 313,
    "good_sql": "SELECT T2.language FROM dataroom_eval_bird.card_games.sets AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Ravnica' AND T1.baseSetSize = 180",
    "complexity": "Single Join"
  },
  {
    "query_id": 416,
    "room_id": 314,
    "good_sql": "SELECT CAST(SUM(CASE WHEN T1.hasContentWarning = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'Legal'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 417,
    "room_id": 315,
    "good_sql": "SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.power IS NULL OR T1.power LIKE '%*%'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 418,
    "room_id": 316,
    "good_sql": "SELECT CAST(SUM(CASE WHEN T2.language = 'Japanese' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM dataroom_eval_bird.card_games.sets AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T1.code = T2.setCode WHERE T1.type = 'expansion'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 419,
    "room_id": 317,
    "good_sql": "SELECT DISTINCT availability FROM dataroom_eval_bird.card_games.cards WHERE artist = 'Daren Bader'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 420,
    "room_id": 318,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.card_games.cards WHERE edhrecRank > 12000 AND borderColor = 'borderless'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 421,
    "room_id": 319,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.card_games.cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1",
    "complexity": "Aggregation"
  },
  {
    "query_id": 422,
    "room_id": 320,
    "good_sql": "SELECT name FROM dataroom_eval_bird.card_games.cards WHERE (power IS NULL OR power LIKE '%*%') AND promoTypes = 'arenaleague' ORDER BY name LIMIT 3",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 423,
    "room_id": 321,
    "good_sql": "SELECT language FROM dataroom_eval_bird.card_games.foreign_data WHERE multiverseid = 149934",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 424,
    "room_id": 322,
    "good_sql": "SELECT cardKingdomFoilId, cardKingdomId FROM dataroom_eval_bird.card_games.cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL ORDER BY cardKingdomFoilId LIMIT 3",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 425,
    "room_id": 323,
    "good_sql": "SELECT CAST(SUM(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM dataroom_eval_bird.card_games.cards",
    "complexity": "Aggregation"
  },
  {
    "query_id": 426,
    "room_id": 324,
    "good_sql": "SELECT id FROM dataroom_eval_bird.card_games.cards WHERE subtypes = 'Angel,Wizard' AND side IS NULL",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 427,
    "room_id": 325,
    "good_sql": "SELECT name FROM dataroom_eval_bird.card_games.sets WHERE mtgoCode IS NULL ORDER BY name LIMIT 3",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 428,
    "room_id": 326,
    "good_sql": "SELECT T2.language FROM dataroom_eval_bird.card_games.sets AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T1.code = T2.setCode WHERE T1.mcmName = 'Archenemy' AND T2.setCode = 'ARC'",
    "complexity": "Single Join"
  },
  {
    "query_id": 429,
    "room_id": 327,
    "good_sql": "SELECT T1.name, T2.translation FROM dataroom_eval_bird.card_games.sets AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T1.code = T2.setCode WHERE T2.id = 5 GROUP BY T1.name, T2.translation",
    "complexity": "Single Join, Aggregation"
  },
  {
    "query_id": 430,
    "room_id": 328,
    "good_sql": "SELECT T2.language, T1.type FROM dataroom_eval_bird.card_games.sets AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T1.code = T2.setCode WHERE T2.id = 206",
    "complexity": "Single Join"
  },
  {
    "query_id": 431,
    "room_id": 275,
    "good_sql": "SELECT T1.name, T1.id FROM dataroom_eval_bird.card_games.sets AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Shadowmoor' AND T2.language = 'Italian' ORDER BY T1.id LIMIT 2",
    "complexity": "Single Join"
  },
  {
    "query_id": 432,
    "room_id": 329,
    "good_sql": "SELECT T1.name, T1.id FROM dataroom_eval_bird.card_games.sets AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND T1.isFoilOnly = 1 AND T1.isForeignOnly = 0",
    "complexity": "Single Join"
  },
  {
    "query_id": 433,
    "room_id": 330,
    "good_sql": "SELECT FIRST(T1.id) FROM dataroom_eval_bird.card_games.sets AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Russian' GROUP BY T1.baseSetSize ORDER BY COUNT(T1.id) DESC LIMIT 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 434,
    "room_id": 331,
    "good_sql": "SELECT CAST(SUM(CASE WHEN T2.language = 'Chinese Simplified' AND T1.isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM dataroom_eval_bird.card_games.sets AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T1.code = T2.setCode",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 435,
    "room_id": 332,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.card_games.sets AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T2.setCode = T1.code WHERE T2.language = 'Japanese'  AND (T1.mtgoCode IS NULL OR T1.mtgoCode = '')",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 436,
    "room_id": 333,
    "good_sql": "SELECT id FROM dataroom_eval_bird.card_games.cards WHERE borderColor = 'black' GROUP BY id",
    "complexity": "Aggregation"
  },
  {
    "query_id": 437,
    "room_id": 334,
    "good_sql": "SELECT id FROM dataroom_eval_bird.card_games.cards WHERE frameEffects = 'extendedart' GROUP BY id",
    "complexity": "Aggregation"
  },
  {
    "query_id": 438,
    "room_id": 335,
    "good_sql": "SELECT id FROM dataroom_eval_bird.card_games.cards WHERE borderColor = 'black' AND isFullArt = 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 439,
    "room_id": 275,
    "good_sql": "SELECT language FROM dataroom_eval_bird.card_games.set_translations WHERE id = 174",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 440,
    "room_id": 275,
    "good_sql": "SELECT name FROM dataroom_eval_bird.card_games.sets WHERE code = 'ALL'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 441,
    "room_id": 336,
    "good_sql": "SELECT DISTINCT language FROM dataroom_eval_bird.card_games.foreign_data WHERE name = 'A Pedra Fellwar'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 442,
    "room_id": 275,
    "good_sql": "SELECT T2.setCode FROM dataroom_eval_bird.card_games.sets AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T2.setCode = T1.code WHERE T1.releaseDate = '2007-07-13'",
    "complexity": "Single Join"
  },
  {
    "query_id": 443,
    "room_id": 275,
    "good_sql": "SELECT DISTINCT T1.baseSetSize, T2.setCode FROM dataroom_eval_bird.card_games.sets AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T2.setCode = T1.code WHERE T1.block IN ('Masques', 'Mirage')",
    "complexity": "Single Join"
  },
  {
    "query_id": 444,
    "room_id": 337,
    "good_sql": "SELECT T2.setCode FROM dataroom_eval_bird.card_games.sets AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T2.setCode = T1.code WHERE T1.type = 'expansion' GROUP BY T2.setCode",
    "complexity": "Single Join, Aggregation"
  },
  {
    "query_id": 445,
    "room_id": 275,
    "good_sql": "SELECT DISTINCT T1.name, T1.type FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.foreign_data AS T2 ON T2.uuid = T1.uuid WHERE T1.watermark = 'boros'",
    "complexity": "Single Join"
  },
  {
    "query_id": 446,
    "room_id": 275,
    "good_sql": "SELECT DISTINCT T2.language, T2.flavorText FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.foreign_data AS T2 ON T2.uuid = T1.uuid WHERE T1.watermark = 'colorpie'",
    "complexity": "Single Join"
  },
  {
    "query_id": 447,
    "room_id": 338,
    "good_sql": "SELECT CAST(SUM(CASE WHEN T1.convertedManaCost = 10 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.sets AS T2 ON T2.code = T1.setCode WHERE T1.name = 'Abyssal Horror' GROUP BY NULL",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 448,
    "room_id": 337,
    "good_sql": "SELECT T2.setCode FROM dataroom_eval_bird.card_games.sets AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T2.setCode = T1.code WHERE T1.type = 'commander'",
    "complexity": "Single Join"
  },
  {
    "query_id": 449,
    "room_id": 275,
    "good_sql": "SELECT DISTINCT T1.name, T1.type FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.foreign_data AS T2 ON T2.uuid = T1.uuid WHERE T1.watermark = 'abzan'",
    "complexity": "Single Join"
  },
  {
    "query_id": 450,
    "room_id": 275,
    "good_sql": "SELECT DISTINCT T2.language, T1.type FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.foreign_data AS T2 ON T2.uuid = T1.uuid WHERE T1.watermark = 'azorius'",
    "complexity": "Single Join"
  },
  {
    "query_id": 451,
    "room_id": 339,
    "good_sql": "SELECT SUM(CASE WHEN artist = 'Aaron Miller' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) FROM dataroom_eval_bird.card_games.cards",
    "complexity": "Aggregation"
  },
  {
    "query_id": 452,
    "room_id": 340,
    "good_sql": "SELECT SUM(CASE WHEN availability = 'paper' AND hAND LIKE '+%' AND hAND != '+0' THEN 1 ELSE 0 END) FROM dataroom_eval_bird.card_games.cards",
    "complexity": "Aggregation"
  },
  {
    "query_id": 453,
    "room_id": 341,
    "good_sql": "SELECT DISTINCT name FROM dataroom_eval_bird.card_games.cards WHERE isTextless = 0",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 454,
    "room_id": 342,
    "good_sql": "SELECT DISTINCT manaCost FROM dataroom_eval_bird.card_games.cards WHERE name = 'Ancestors Chosen'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 455,
    "room_id": 343,
    "good_sql": "SELECT SUM(CASE WHEN power LIKE '%*%' OR power IS NULL THEN 1 ELSE 0 END) FROM dataroom_eval_bird.card_games.cards WHERE borderColor = 'white'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 456,
    "room_id": 344,
    "good_sql": "SELECT DISTINCT name FROM dataroom_eval_bird.card_games.cards WHERE isPromo = 1 AND side IS NOT NULL",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 457,
    "room_id": 345,
    "good_sql": "SELECT DISTINCT subtypes, supertypes FROM dataroom_eval_bird.card_games.cards WHERE name = 'Molimo, Maro-Sorcerer'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 458,
    "room_id": 346,
    "good_sql": "SELECT DISTINCT purchaseUrls FROM dataroom_eval_bird.card_games.cards WHERE promoTypes = 'bundle'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 459,
    "room_id": 347,
    "good_sql": "SELECT COUNT(CASE WHEN availability LIKE '%arena,mtgo%' THEN 1 ELSE NULL END) FROM dataroom_eval_bird.card_games.cards",
    "complexity": "Aggregation"
  },
  {
    "query_id": 460,
    "room_id": 348,
    "good_sql": "SELECT name FROM dataroom_eval_bird.card_games.cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedManaCost DESC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 461,
    "room_id": 349,
    "good_sql": "SELECT artist FROM dataroom_eval_bird.card_games.cards WHERE flavorName = 'Battra, Dark Destroyer'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 462,
    "room_id": 350,
    "good_sql": "SELECT name FROM dataroom_eval_bird.card_games.cards WHERE frameVersion = 2003 ORDER BY convertedManaCost DESC LIMIT 3",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 463,
    "room_id": 351,
    "good_sql": "SELECT translation FROM dataroom_eval_bird.card_games.set_translations WHERE setCode IN ( SELECT setCode FROM dataroom_eval_bird.card_games.cards WHERE name = 'Ancestors Chosen' ) AND language = 'Italian'",
    "complexity": "Subqueries"
  },
  {
    "query_id": 464,
    "room_id": 352,
    "good_sql": "SELECT COUNT(DISTINCT translation) FROM dataroom_eval_bird.card_games.set_translations WHERE setCode IN ( SELECT setCode FROM dataroom_eval_bird.card_games.cards WHERE name = 'Angel of Mercy' ) AND translation IS NOT NULL",
    "complexity": "Aggregation, Subqueries"
  },
  {
    "query_id": 465,
    "room_id": 353,
    "good_sql": "SELECT DISTINCT T1.name FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T2.setCode = T1.setCode WHERE T2.translation = 'Hauptset Zehnte Edition'",
    "complexity": "Single Join"
  },
  {
    "query_id": 466,
    "room_id": 354,
    "good_sql": "SELECT IF(SUM(CASE WHEN T2.language = 'Korean' AND T2.translation IS NOT NULL THEN 1 ELSE 0 END) > 0, 'YES', 'NO') FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T2.setCode = T1.setCode WHERE T1.name = 'Ancestors Chosen'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 467,
    "room_id": 355,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T2.setCode = T1.setCode WHERE T2.translation = 'Hauptset Zehnte Edition' AND T1.artist = 'Adam Rex'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 468,
    "room_id": 356,
    "good_sql": "SELECT T1.baseSetSize FROM dataroom_eval_bird.card_games.sets AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T2.setCode = T1.code WHERE T2.translation = 'Hauptset Zehnte Edition'",
    "complexity": "Single Join"
  },
  {
    "query_id": 469,
    "room_id": 357,
    "good_sql": "SELECT T2.translation FROM dataroom_eval_bird.card_games.sets AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T2.setCode = T1.code WHERE T1.name = 'Eighth Edition' AND T2.language = 'Chinese Simplified'",
    "complexity": "Single Join"
  },
  {
    "query_id": 470,
    "room_id": 358,
    "good_sql": "SELECT IF(T2.mtgoCode IS NOT NULL, 'YES', 'NO') FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.sets AS T2 ON T2.code = T1.setCode WHERE T1.name = 'Angel of Mercy'",
    "complexity": "Single Join"
  },
  {
    "query_id": 471,
    "room_id": 359,
    "good_sql": "SELECT DISTINCT T2.releaseDate FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.sets AS T2 ON T2.code = T1.setCode WHERE T1.name = 'Ancestors Chosen'",
    "complexity": "Single Join"
  },
  {
    "query_id": 472,
    "room_id": 360,
    "good_sql": "SELECT T1.type FROM dataroom_eval_bird.card_games.sets AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T2.setCode = T1.code WHERE T2.translation = 'Hauptset Zehnte Edition'",
    "complexity": "Single Join"
  },
  {
    "query_id": 473,
    "room_id": 361,
    "good_sql": "SELECT COUNT(DISTINCT T1.id) FROM dataroom_eval_bird.card_games.sets AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T2.setCode = T1.code WHERE T1.block = 'Ice Age' AND T2.language = 'Italian' AND T2.translation IS NOT NULL",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 474,
    "room_id": 362,
    "good_sql": "SELECT IF(isForeignOnly = 1, 'YES', 'NO') FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.sets AS T2 ON T2.code = T1.setCode WHERE T1.name = 'Adarkar Valkyrie'",
    "complexity": "Single Join"
  },
  {
    "query_id": 475,
    "room_id": 363,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.card_games.sets AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T2.setCode = T1.code WHERE T2.translation IS NOT NULL AND T1.baseSetSize < 10 AND T2.language = 'Italian'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 476,
    "room_id": 364,
    "good_sql": "SELECT SUM(CASE WHEN T1.borderColor = 'black' THEN 1 ELSE 0 END) FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 477,
    "room_id": 365,
    "good_sql": "SELECT T1.name FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap' ORDER BY T1.convertedManaCost DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 478,
    "room_id": 366,
    "good_sql": "SELECT T1.artist FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.sets AS T2 ON T2.code = T1.setCode WHERE (T2.name = 'Coldsnap' AND T1.artist = 'Chippy') OR (T2.name = 'Coldsnap' AND T1.artist = 'Aaron Miller') OR (T2.name = 'Coldsnap' AND T1.artist = 'Jeremy Jarvis') GROUP BY T1.artist",
    "complexity": "Single Join, Aggregation"
  },
  {
    "query_id": 479,
    "room_id": 367,
    "good_sql": "SELECT T1.name FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap' AND T1.number = 4",
    "complexity": "Single Join"
  },
  {
    "query_id": 480,
    "room_id": 368,
    "good_sql": "SELECT SUM(CASE WHEN T1.power LIKE '%*%' OR T1.power IS NULL THEN 1 ELSE 0 END) FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap' AND T1.convertedManaCost > 5",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 481,
    "room_id": 369,
    "good_sql": "SELECT T2.flavorText FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.foreign_data AS T2 ON T2.uuid = T1.uuid WHERE T1.name = 'Ancestors Chosen' AND T2.language = 'Italian'",
    "complexity": "Single Join"
  },
  {
    "query_id": 482,
    "room_id": 370,
    "good_sql": "SELECT T2.language FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.foreign_data AS T2 ON T2.uuid = T1.uuid WHERE T1.name = 'Ancestors Chosen' AND T2.flavorText IS NOT NULL",
    "complexity": "Single Join"
  },
  {
    "query_id": 483,
    "room_id": 371,
    "good_sql": "SELECT DISTINCT T1.type FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.foreign_data AS T2 ON T2.uuid = T1.uuid WHERE T1.name = 'Ancestors Chosen' AND T2.language = 'German'",
    "complexity": "Single Join"
  },
  {
    "query_id": 484,
    "room_id": 372,
    "good_sql": "SELECT DISTINCT T1.text FROM dataroom_eval_bird.card_games.foreign_data AS T1 INNER JOIN dataroom_eval_bird.card_games.cards AS T2 ON T2.uuid = T1.uuid INNER JOIN dataroom_eval_bird.card_games.sets AS T3 ON T3.code = T2.setCode WHERE T3.name = 'Coldsnap' AND T1.language = 'Italian'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 485,
    "room_id": 372,
    "good_sql": "SELECT T2.name FROM dataroom_eval_bird.card_games.foreign_data AS T1 INNER JOIN dataroom_eval_bird.card_games.cards AS T2 ON T2.uuid = T1.uuid INNER JOIN dataroom_eval_bird.card_games.sets AS T3 ON T3.code = T2.setCode WHERE T3.name = 'Coldsnap' AND T1.language = 'Italian' ORDER BY T2.convertedManaCost DESC LIMIT 1",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 486,
    "room_id": 373,
    "good_sql": "SELECT T2.date FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.rulings AS T2 ON T2.uuid = T1.uuid WHERE T1.name = 'Reminisce'",
    "complexity": "Single Join"
  },
  {
    "query_id": 487,
    "room_id": 374,
    "good_sql": "SELECT CAST(SUM(CASE WHEN T1.convertedManaCost = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 488,
    "room_id": 375,
    "good_sql": "SELECT CAST(SUM(CASE WHEN T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 489,
    "room_id": 376,
    "good_sql": "SELECT code FROM dataroom_eval_bird.card_games.sets WHERE releaseDate = '2017-07-14' GROUP BY releaseDate, code",
    "complexity": "Aggregation"
  },
  {
    "query_id": 490,
    "room_id": 377,
    "good_sql": "SELECT keyruneCode FROM dataroom_eval_bird.card_games.sets WHERE code = 'PKHC'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 491,
    "room_id": 378,
    "good_sql": "SELECT mcmId FROM dataroom_eval_bird.card_games.sets WHERE code = 'SS2'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 492,
    "room_id": 379,
    "good_sql": "SELECT mcmName FROM dataroom_eval_bird.card_games.sets WHERE releaseDate = '2017-06-09'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 493,
    "room_id": 380,
    "good_sql": "SELECT type FROM dataroom_eval_bird.card_games.sets WHERE name LIKE '%From the Vault: Lore%'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 494,
    "room_id": 381,
    "good_sql": "SELECT parentCode FROM dataroom_eval_bird.card_games.sets WHERE name = 'Commander 2014 Oversized'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 495,
    "room_id": 382,
    "good_sql": "SELECT T2.text , CASE WHEN T1.hasContentWarning = 1 THEN 'YES' ELSE 'NO' END FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.rulings AS T2 ON T2.uuid = T1.uuid WHERE T1.artist = 'Jim Pavelec'",
    "complexity": "Single Join"
  },
  {
    "query_id": 496,
    "room_id": 383,
    "good_sql": "SELECT T2.releaseDate FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.sets AS T2 ON T2.code = T1.setCode WHERE T1.name = 'Evacuation'",
    "complexity": "Single Join"
  },
  {
    "query_id": 497,
    "room_id": 384,
    "good_sql": "SELECT T1.baseSetSize FROM dataroom_eval_bird.card_games.sets AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T2.setCode = T1.code WHERE T2.translation = 'Rinascita di Alara'",
    "complexity": "Single Join"
  },
  {
    "query_id": 498,
    "room_id": 385,
    "good_sql": "SELECT type FROM dataroom_eval_bird.card_games.sets WHERE code IN ( SELECT setCode FROM dataroom_eval_bird.card_games.set_translations WHERE translation = 'Huiti\u00e8me \u00e9dition' )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 499,
    "room_id": 386,
    "good_sql": "SELECT T2.translation FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T2.setCode = T1.setCode WHERE T1.name = 'Tendo Ice Bridge' AND T2.language = 'French' AND T2.translation IS NOT NULL",
    "complexity": "Single Join"
  },
  {
    "query_id": 500,
    "room_id": 387,
    "good_sql": "SELECT COUNT(DISTINCT T2.translation) FROM dataroom_eval_bird.card_games.sets AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T2.setCode = T1.code WHERE T1.name = 'Salvat 2011' AND T2.translation IS NOT NULL",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 501,
    "room_id": 388,
    "good_sql": "SELECT T2.translation FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T2.setCode = T1.setCode WHERE T1.name = 'Fellwar Stone' AND T2.language = 'Japanese' AND T2.translation IS NOT NULL",
    "complexity": "Single Join"
  },
  {
    "query_id": 502,
    "room_id": 389,
    "good_sql": "SELECT T1.name FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Journey into Nyx Heros Path' ORDER BY T1.convertedManaCost DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 503,
    "room_id": 390,
    "good_sql": "SELECT T1.releaseDate FROM dataroom_eval_bird.card_games.sets AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T2.setCode = T1.code WHERE T2.translation = 'Ola de fr\u00edo'",
    "complexity": "Single Join"
  },
  {
    "query_id": 504,
    "room_id": 391,
    "good_sql": "SELECT type FROM dataroom_eval_bird.card_games.sets WHERE code IN ( SELECT setCode FROM dataroom_eval_bird.card_games.cards WHERE name = 'Samite Pilgrim' )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 505,
    "room_id": 392,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.card_games.cards WHERE setCode IN ( SELECT code FROM dataroom_eval_bird.card_games.sets WHERE name = 'World Championship Decks 2004' ) AND convertedManaCost = 3",
    "complexity": "Aggregation, Subqueries"
  },
  {
    "query_id": 506,
    "room_id": 393,
    "good_sql": "SELECT translation FROM dataroom_eval_bird.card_games.set_translations WHERE setCode IN ( SELECT code FROM dataroom_eval_bird.card_games.sets WHERE name = 'Mirrodin' ) AND language = 'Chinese Simplified'",
    "complexity": "Subqueries"
  },
  {
    "query_id": 507,
    "room_id": 394,
    "good_sql": "SELECT CAST(SUM(CASE WHEN isNonFoilOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM dataroom_eval_bird.card_games.sets WHERE code IN ( SELECT setCode FROM dataroom_eval_bird.card_games.set_translations WHERE language = 'Japanese' )",
    "complexity": "Aggregation, Subqueries"
  },
  {
    "query_id": 508,
    "room_id": 395,
    "good_sql": "SELECT CAST(SUM(CASE WHEN isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM dataroom_eval_bird.card_games.sets WHERE code IN ( SELECT setCode FROM dataroom_eval_bird.card_games.set_translations WHERE language = 'Portuguese (Brazil)' )",
    "complexity": "Aggregation, Subqueries"
  },
  {
    "query_id": 509,
    "room_id": 396,
    "good_sql": "SELECT DISTINCT availability FROM dataroom_eval_bird.card_games.cards WHERE artist = 'Aleksi Briclot' AND isTextless = 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 510,
    "room_id": 397,
    "good_sql": "SELECT id FROM dataroom_eval_bird.card_games.sets ORDER BY baseSetSize DESC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 511,
    "room_id": 398,
    "good_sql": "SELECT artist FROM dataroom_eval_bird.card_games.cards WHERE side IS NULL ORDER BY convertedManaCost DESC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 512,
    "room_id": 399,
    "good_sql": "SELECT frameEffects FROM dataroom_eval_bird.card_games.cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL GROUP BY frameEffects ORDER BY COUNT(frameEffects) DESC LIMIT 1",
    "complexity": "Aggregation"
  },
  {
    "query_id": 513,
    "room_id": 400,
    "good_sql": "SELECT SUM(CASE WHEN power LIKE '%*%' OR power IS NULL THEN 1 ELSE 0 END) FROM dataroom_eval_bird.card_games.cards WHERE hasFoil = 0 AND duelDeck = 'a'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 514,
    "room_id": 401,
    "good_sql": "SELECT id FROM dataroom_eval_bird.card_games.sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 515,
    "room_id": 402,
    "good_sql": "SELECT name FROM (SELECT name, MAX(manaCost) AS manaCost FROM dataroom_eval_bird.card_games.cards WHERE uuid IN (SELECT uuid FROM dataroom_eval_bird.card_games.legalities WHERE format = 'duel') GROUP BY name ORDER BY manaCost DESC LIMIT 10)",
    "complexity": "Subqueries, Aggregation"
  },
  {
    "query_id": 516,
    "room_id": 403,
    "good_sql": "SELECT T1.originalReleaseDate, T2.format FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'mythic' AND T1.originalReleaseDate IS NOT NULL AND T2.status = 'Legal' ORDER BY T1.originalReleaseDate LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 517,
    "room_id": 404,
    "good_sql": "SELECT COUNT(T3.id) FROM ( SELECT T1.id FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.foreign_data AS T2 ON T2.uuid = T1.uuid WHERE T1.artist = 'Volkan Ba\u01f5a' AND T2.language = 'French' GROUP BY T1.id ) AS T3",
    "complexity": "Aggregation, Single Join, Subqueries"
  },
  {
    "query_id": 518,
    "room_id": 405,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.legalities AS T2 ON T2.uuid = T1.uuid WHERE T1.rarity = 'rare' AND T1.types = 'Enchantment' AND T1.name = 'Abundance' AND T2.status = 'Legal'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 519,
    "room_id": 406,
    "good_sql": "SELECT T2.format, ANY_VALUE(T1.name) FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.legalities AS T2 ON T2.uuid = T1.uuid WHERE T2.status = 'Banned' GROUP BY T2.format ORDER BY COUNT(T2.status) DESC LIMIT 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 520,
    "room_id": 407,
    "good_sql": "SELECT language FROM dataroom_eval_bird.card_games.set_translations WHERE id IN ( SELECT id FROM dataroom_eval_bird.card_games.sets WHERE name = 'Battlebond' )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 521,
    "room_id": 408,
    "good_sql": "SELECT T1.artist, ANY_VALUE(T2.format) FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.legalities AS T2 ON T2.uuid = T1.uuid GROUP BY T1.artist ORDER BY COUNT(T1.id) ASC LIMIT 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 522,
    "room_id": 409,
    "good_sql": "SELECT DISTINCT T2.status FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.legalities AS T2 ON T2.uuid = T1.uuid WHERE T1.frameVersion = 1997 AND T1.hasContentWarning = 1 AND T1.artist = 'D. Alexander Gregory' AND T2.format = 'legacy'",
    "complexity": "Single Join"
  },
  {
    "query_id": 523,
    "room_id": 410,
    "good_sql": "SELECT T1.name, T2.format FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.legalities AS T2 ON T2.uuid = T1.uuid WHERE T1.edhrecRank = 1 AND T2.status = 'Banned' GROUP BY T1.name, T2.format",
    "complexity": "Single Join, Aggregation"
  },
  {
    "query_id": 524,
    "room_id": 411,
    "good_sql": "SELECT (CAST(SUM(T1.id) AS REAL) / COUNT(T1.id)) / 4, ANY_VALUE(T2.language) FROM dataroom_eval_bird.card_games.sets AS T1 INNER JOIN dataroom_eval_bird.card_games.set_translations AS T2 ON T1.id = T2.id WHERE T1.releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY T1.releaseDate ORDER BY COUNT(T2.language) DESC LIMIT 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 525,
    "room_id": 412,
    "good_sql": "SELECT DISTINCT artist FROM dataroom_eval_bird.card_games.cards WHERE availability = 'arena' AND BorderColor = 'black'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 526,
    "room_id": 413,
    "good_sql": "SELECT uuid FROM dataroom_eval_bird.card_games.legalities WHERE format = 'oldschool' AND (status = 'Banned' OR status = 'Restricted')",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 527,
    "room_id": 414,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.card_games.cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 528,
    "room_id": 415,
    "good_sql": "SELECT T2.text FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.rulings AS T2 ON T2.uuid = T1.uuid WHERE T1.artist = 'Kev Walker' ORDER BY T2.date DESC",
    "complexity": "Single Join"
  },
  {
    "query_id": 529,
    "room_id": 416,
    "good_sql": "SELECT DISTINCT T2.name , CASE WHEN T1.status = 'Legal' THEN T1.format ELSE NULL END FROM dataroom_eval_bird.card_games.legalities AS T1 INNER JOIN dataroom_eval_bird.card_games.cards AS T2 ON T2.uuid = T1.uuid WHERE T2.setCode IN ( SELECT code FROM dataroom_eval_bird.card_games.sets WHERE name = 'Hour of Devastation' )",
    "complexity": "Single Join, Subqueries"
  },
  {
    "query_id": 530,
    "room_id": 417,
    "good_sql": "SELECT name FROM dataroom_eval_bird.card_games.sets WHERE code IN (SELECT setCode FROM dataroom_eval_bird.card_games.set_translations WHERE language = 'Korean' AND NOT language LIKE '%Japanese%')",
    "complexity": "Subqueries"
  },
  {
    "query_id": 531,
    "room_id": 418,
    "good_sql": "SELECT DISTINCT T1.frameVersion, T1.name, IF(T2.status = 'Banned', T1.name, 'NO') FROM dataroom_eval_bird.card_games.cards AS T1 INNER JOIN dataroom_eval_bird.card_games.legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Allen Williams'",
    "complexity": "Basic SQL, Single Join"
  },
  {
    "query_id": 532,
    "room_id": 419,
    "good_sql": "SELECT DisplayName FROM dataroom_eval_bird.codebase_community.users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon') AND Reputation = ( SELECT MAX(Reputation) FROM dataroom_eval_bird.codebase_community.users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon') )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 533,
    "room_id": 420,
    "good_sql": "SELECT DisplayName FROM dataroom_eval_bird.codebase_community.users WHERE DATE_FORMAT(CAST(CreationDate AS TIMESTAMP), 'yyyy') = '2014'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 534,
    "room_id": 421,
    "good_sql": "SELECT COUNT(Id) FROM dataroom_eval_bird.codebase_community.users WHERE DATE(LastAccessDate) > '2014-09-01'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 535,
    "room_id": 422,
    "good_sql": "SELECT DisplayName FROM dataroom_eval_bird.codebase_community.users WHERE Views = ( SELECT MAX(Views) FROM dataroom_eval_bird.codebase_community.users )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 536,
    "room_id": 423,
    "good_sql": "SELECT COUNT(Id) FROM dataroom_eval_bird.codebase_community.users WHERE Upvotes > 100 AND Downvotes > 1",
    "complexity": "Aggregation"
  },
  {
    "query_id": 537,
    "room_id": 424,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.codebase_community.users WHERE DATE_FORMAT(CAST(CreationDate AS TIMESTAMP), 'yyyy') > '2013' AND Views > 10",
    "complexity": "Aggregation"
  },
  {
    "query_id": 538,
    "room_id": 425,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 539,
    "room_id": 425,
    "good_sql": "SELECT T1.Title FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'",
    "complexity": "Single Join"
  },
  {
    "query_id": 540,
    "room_id": 426,
    "good_sql": "SELECT T2.DisplayName FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors from experts'",
    "complexity": "Single Join"
  },
  {
    "query_id": 541,
    "room_id": 427,
    "good_sql": "SELECT T1.Title FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' ORDER BY T1.ViewCount DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 542,
    "room_id": 428,
    "good_sql": "SELECT T2.DisplayName FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.OwnerUserId = T2.Id ORDER BY T1.FavoriteCount DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 543,
    "room_id": 429,
    "good_sql": "SELECT SUM(T1.CommentCount) FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 544,
    "room_id": 430,
    "good_sql": "SELECT MAX(T1.AnswerCount) FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 545,
    "room_id": 431,
    "good_sql": "SELECT T2.DisplayName FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Examples for teaching: Correlation does not mean causation'",
    "complexity": "Single Join"
  },
  {
    "query_id": 546,
    "room_id": 432,
    "good_sql": "SELECT COUNT(T1.Id) FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' AND T1.ParentId IS NULL",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 547,
    "room_id": 433,
    "good_sql": "SELECT T2.DisplayName FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.ClosedDate IS NOT NULL",
    "complexity": "Single Join"
  },
  {
    "query_id": 548,
    "room_id": 434,
    "good_sql": "SELECT COUNT(T1.Id) FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Score >= 20 AND T2.Age > 65",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 549,
    "room_id": 435,
    "good_sql": "SELECT T2.Location FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors from experts'",
    "complexity": "Single Join"
  },
  {
    "query_id": 550,
    "room_id": 436,
    "good_sql": "SELECT T2.Body FROM dataroom_eval_bird.codebase_community.tags AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T2.Id = T1.ExcerptPostId WHERE T1.TagName = 'bayesian'",
    "complexity": "Single Join"
  },
  {
    "query_id": 551,
    "room_id": 437,
    "good_sql": "SELECT Body FROM dataroom_eval_bird.codebase_community.posts WHERE id = ( SELECT ExcerptPostId FROM dataroom_eval_bird.codebase_community.tags ORDER BY Count DESC LIMIT 1 )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 552,
    "room_id": 425,
    "good_sql": "SELECT COUNT(T1.Id) FROM dataroom_eval_bird.codebase_community.badges AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 553,
    "room_id": 425,
    "good_sql": "SELECT T1.`Name` FROM dataroom_eval_bird.codebase_community.badges AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie'",
    "complexity": "Single Join"
  },
  {
    "query_id": 554,
    "room_id": 438,
    "good_sql": "SELECT COUNT(T1.Id) FROM dataroom_eval_bird.codebase_community.badges AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.UserId = T2.Id WHERE DATE_FORMAT(CAST(T1.Date AS TIMESTAMP), 'yyyy') = '2011' AND T2.DisplayName = 'csgillespie'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 555,
    "room_id": 439,
    "good_sql": "SELECT T2.DisplayName FROM dataroom_eval_bird.codebase_community.badges AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.UserId = T2.Id GROUP BY T2.DisplayName ORDER BY COUNT(T1.Id) DESC LIMIT 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 556,
    "room_id": 440,
    "good_sql": "SELECT AVG(T1.Score) FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 557,
    "room_id": 441,
    "good_sql": "SELECT CAST(COUNT(T1.Id) AS REAL) / COUNT(DISTINCT T2.DisplayName) FROM dataroom_eval_bird.codebase_community.badges AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.UserId = T2.Id WHERE T2.Views > 200",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 558,
    "room_id": 442,
    "good_sql": "SELECT CAST(SUM(IF(T2.Age > 65, 1, 0)) AS REAL) * 100 / COUNT(T1.Id) FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Score > 20",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 559,
    "room_id": 443,
    "good_sql": "SELECT COUNT(Id) FROM dataroom_eval_bird.codebase_community.votes WHERE UserId = 58 AND CreationDate = '2010-07-19'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 560,
    "room_id": 444,
    "good_sql": "SELECT CreationDate FROM dataroom_eval_bird.codebase_community.votes GROUP BY CreationDate ORDER BY COUNT(Id) DESC LIMIT 1",
    "complexity": "Aggregation"
  },
  {
    "query_id": 561,
    "room_id": 445,
    "good_sql": "SELECT COUNT(Id) FROM dataroom_eval_bird.codebase_community.badges WHERE Name = 'Revival'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 562,
    "room_id": 446,
    "good_sql": "SELECT Title FROM dataroom_eval_bird.codebase_community.posts WHERE Id = ( SELECT PostId FROM dataroom_eval_bird.codebase_community.comments ORDER BY Score DESC LIMIT 1 )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 563,
    "room_id": 447,
    "good_sql": "SELECT COUNT(T1.Id) FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.comments AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount = 1910",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 564,
    "room_id": 448,
    "good_sql": "SELECT T1.FavoriteCount FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.comments AS T2 ON T1.Id = T2.PostId WHERE T2.CreationDate = '2014-04-23 20:29:39.0' AND T2.UserId = 3025",
    "complexity": "Single Join"
  },
  {
    "query_id": 565,
    "room_id": 449,
    "good_sql": "SELECT T2.Text FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.comments AS T2 ON T1.Id = T2.PostId WHERE T1.ParentId = 107829 AND T1.CommentCount = 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 566,
    "room_id": 450,
    "good_sql": "SELECT IF(T2.ClosedDate IS NULL, 'NOT well-finished', 'well-finished') AS resylt FROM dataroom_eval_bird.codebase_community.comments AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 23853 AND T1.CreationDate = '2013-07-12 09:08:18.0'",
    "complexity": "Single Join"
  },
  {
    "query_id": 567,
    "room_id": 451,
    "good_sql": "SELECT T1.Reputation FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Id = 65041",
    "complexity": "Single Join"
  },
  {
    "query_id": 568,
    "room_id": 452,
    "good_sql": "SELECT COUNT(T1.Id) FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Tiago Pasqualini'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 569,
    "room_id": 453,
    "good_sql": "SELECT T1.DisplayName FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.votes AS T2 ON T1.Id = T2.UserId WHERE T2.Id = 6347",
    "complexity": "Single Join"
  },
  {
    "query_id": 570,
    "room_id": 454,
    "good_sql": "SELECT COUNT(T1.Id) FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.votes AS T2 ON T1.Id = T2.PostId WHERE T1.Title LIKE '%data visualization%'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 571,
    "room_id": 455,
    "good_sql": "SELECT T2.Name FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'DatEpicCoderGuyWhoPrograms'",
    "complexity": "Single Join"
  },
  {
    "query_id": 572,
    "room_id": 456,
    "good_sql": "SELECT CAST(COUNT(T2.Id) AS REAL) / COUNT(DISTINCT T1.Id) FROM dataroom_eval_bird.codebase_community.votes AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.UserId = T2.OwnerUserId WHERE T1.UserId = 24",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 573,
    "room_id": 457,
    "good_sql": "SELECT ViewCount FROM dataroom_eval_bird.codebase_community.posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 574,
    "room_id": 458,
    "good_sql": "SELECT Text FROM dataroom_eval_bird.codebase_community.comments WHERE Score = 17",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 575,
    "room_id": 459,
    "good_sql": "SELECT DisplayName FROM dataroom_eval_bird.codebase_community.users WHERE WebsiteUrl = 'http://stackoverflow.com'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 576,
    "room_id": 460,
    "good_sql": "SELECT T2.Name FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'SilentGhost'",
    "complexity": "Single Join"
  },
  {
    "query_id": 577,
    "room_id": 461,
    "good_sql": "SELECT T1.DisplayName FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.comments AS T2 ON T1.Id = T2.UserId WHERE T2.Text = 'thank you user93!'",
    "complexity": "Single Join"
  },
  {
    "query_id": 578,
    "room_id": 462,
    "good_sql": "SELECT T2.Text FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.comments AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'A Lion'",
    "complexity": "Single Join"
  },
  {
    "query_id": 579,
    "room_id": 463,
    "good_sql": "SELECT T1.DisplayName, T1.Reputation FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Title = 'Understanding what Dassault iSight is doing?'",
    "complexity": "Single Join"
  },
  {
    "query_id": 580,
    "room_id": 464,
    "good_sql": "SELECT T1.Text FROM dataroom_eval_bird.codebase_community.comments AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title = 'How does gentle boosting differ from AdaBoost?'",
    "complexity": "Single Join"
  },
  {
    "query_id": 581,
    "room_id": 465,
    "good_sql": "SELECT T1.DisplayName FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Necromancer' LIMIT 10",
    "complexity": "Single Join"
  },
  {
    "query_id": 582,
    "room_id": 466,
    "good_sql": "SELECT T2.DisplayName FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Open source tools for visualizing multi-dimensional data?'",
    "complexity": "Single Join"
  },
  {
    "query_id": 583,
    "room_id": 467,
    "good_sql": "SELECT T1.Title FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Vebjorn Ljosa'",
    "complexity": "Single Join"
  },
  {
    "query_id": 584,
    "room_id": 468,
    "good_sql": "SELECT SUM(T1.Score), T2.WebsiteUrl FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Yevgeny' GROUP BY T2.WebsiteUrl",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 585,
    "room_id": 469,
    "good_sql": "SELECT T2.Comment FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posthistory AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'",
    "complexity": "Single Join"
  },
  {
    "query_id": 586,
    "room_id": 470,
    "good_sql": "SELECT SUM(T2.BountyAmount) FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.votes AS T2 ON T1.Id = T2.PostId WHERE T1.Title LIKE '%data%'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 587,
    "room_id": 471,
    "good_sql": "SELECT T3.DisplayName, T1.Title FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.votes AS T2 ON T1.Id = T2.PostId INNER JOIN dataroom_eval_bird.codebase_community.users AS T3 ON T3.Id = T2.UserId WHERE T2.BountyAmount = 50 AND T1.Title LIKE '%variance%'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 588,
    "room_id": 472,
    "good_sql": "SELECT AVG(T2.ViewCount) OVER (), T2.Title, T1.Text, T1.Score FROM dataroom_eval_bird.codebase_community.comments AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T2.Id = T1.PostId WHERE T2.Tags = '<humor>'",
    "complexity": "Single Join, Window function"
  },
  {
    "query_id": 589,
    "room_id": 447,
    "good_sql": "SELECT COUNT(Id) FROM dataroom_eval_bird.codebase_community.comments WHERE UserId = 13",
    "complexity": "Aggregation"
  },
  {
    "query_id": 590,
    "room_id": 473,
    "good_sql": "SELECT Id FROM dataroom_eval_bird.codebase_community.users WHERE Reputation = ( SELECT MAX(Reputation) FROM dataroom_eval_bird.codebase_community.users )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 591,
    "room_id": 474,
    "good_sql": "SELECT Id FROM dataroom_eval_bird.codebase_community.users WHERE Views = ( SELECT MIN(Views) FROM dataroom_eval_bird.codebase_community.users )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 592,
    "room_id": 475,
    "good_sql": "SELECT COUNT(Id) FROM dataroom_eval_bird.codebase_community.badges WHERE DATE_FORMAT(CAST(Date AS TIMESTAMP), 'yyyy') = '2011' AND Name = 'Supporter'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 593,
    "room_id": 476,
    "good_sql": "SELECT UserId FROM (SELECT UserId, COUNT(Name) AS num FROM dataroom_eval_bird.codebase_community.badges GROUP BY UserId) AS T WHERE T.num > 5",
    "complexity": "Subqueries, Aggregation"
  },
  {
    "query_id": 594,
    "room_id": 477,
    "good_sql": "SELECT COUNT(DISTINCT T1.Id) FROM dataroom_eval_bird.codebase_community.badges AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.UserId = T2.Id WHERE T1.Name IN ('Supporter', 'Teacher') AND T2.Location = 'New York'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 595,
    "room_id": 447,
    "good_sql": "SELECT T2.Id, T2.Reputation FROM dataroom_eval_bird.codebase_community.comments AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.UserId = T2.Id WHERE T1.PostId = 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 596,
    "room_id": 478,
    "good_sql": "SELECT T2.UserId FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posthistory AS T2 ON T1.Id = T2.UserId INNER JOIN dataroom_eval_bird.codebase_community.posts AS T3 ON T2.PostId = T3.Id WHERE T3.ViewCount >= 1000 GROUP BY T2.UserId HAVING COUNT(DISTINCT T2.PostHistoryTypeId) = 1",
    "complexity": "Multiple Joins, Aggregation"
  },
  {
    "query_id": 597,
    "room_id": 479,
    "good_sql": "SELECT ANY_VALUE(Name) FROM dataroom_eval_bird.codebase_community.badges AS T1 INNER JOIN dataroom_eval_bird.codebase_community.comments AS T2 ON T1.UserId = t2.UserId GROUP BY T2.UserId ORDER BY COUNT(T2.UserId) DESC LIMIT 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 598,
    "room_id": 480,
    "good_sql": "SELECT COUNT(T1.Id) FROM dataroom_eval_bird.codebase_community.badges AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.UserId = T2.Id WHERE T2.Location = 'India' AND T1.Name = 'Teacher'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 599,
    "room_id": 481,
    "good_sql": "SELECT CAST(SUM(IF(DATE_FORMAT(CAST(Date AS TIMESTAMP), 'yyyy') = '2010', 1, 0)) AS REAL) * 100 / COUNT(Id) - CAST(SUM(IF(DATE_FORMAT(CAST(Date AS TIMESTAMP), 'yyyy') = '2011', 1, 0)) AS REAL) * 100 / COUNT(Id) FROM dataroom_eval_bird.codebase_community.badges WHERE Name = 'Student'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 600,
    "room_id": 447,
    "good_sql": "SELECT T1.PostHistoryTypeId, (SELECT COUNT(DISTINCT UserId) FROM dataroom_eval_bird.codebase_community.comments WHERE PostId = 3720) AS NumberOfUsers FROM dataroom_eval_bird.codebase_community.posthistory AS T1 WHERE T1.PostId = 3720",
    "complexity": "Subqueries"
  },
  {
    "query_id": 601,
    "room_id": 482,
    "good_sql": "SELECT T1.ViewCount FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.postlinks AS T2 ON T1.Id = T2.PostId WHERE T2.PostId = 61217",
    "complexity": "Single Join"
  },
  {
    "query_id": 602,
    "room_id": 447,
    "good_sql": "SELECT T1.Score, T2.LinkTypeId FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.postlinks AS T2 ON T1.Id = T2.PostId WHERE T2.PostId = 395",
    "complexity": "Single Join"
  },
  {
    "query_id": 603,
    "room_id": 483,
    "good_sql": "SELECT PostId, UserId FROM dataroom_eval_bird.codebase_community.posthistory WHERE PostId IN ( SELECT Id FROM dataroom_eval_bird.codebase_community.posts WHERE Score > 60 )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 604,
    "room_id": 484,
    "good_sql": "SELECT SUM(DISTINCT FavoriteCount) FROM dataroom_eval_bird.codebase_community.posts WHERE Id IN (SELECT PostId FROM dataroom_eval_bird.codebase_community.posthistory WHERE UserId = 686 AND DATE_FORMAT(CAST(CreationDate AS TIMESTAMP), 'yyyy') = '2011')",
    "complexity": "Aggregation, Subqueries"
  },
  {
    "query_id": 605,
    "room_id": 485,
    "good_sql": "SELECT AVG(T1.UpVotes), AVG(T1.Age) FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN ( SELECT OwnerUserId, COUNT(*) AS post_count FROM dataroom_eval_bird.codebase_community.posts GROUP BY OwnerUserId HAVING post_count > 10) AS T2 ON T1.Id = T2.OwnerUserId",
    "complexity": "Aggregation, Single Join, Subqueries"
  },
  {
    "query_id": 606,
    "room_id": 486,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.codebase_community.badges WHERE Name = 'Announcer'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 607,
    "room_id": 487,
    "good_sql": "SELECT Name FROM dataroom_eval_bird.codebase_community.badges WHERE Date = '2010-07-19 19:39:08.0'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 608,
    "room_id": 488,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.codebase_community.comments WHERE score > 60",
    "complexity": "Aggregation"
  },
  {
    "query_id": 609,
    "room_id": 489,
    "good_sql": "SELECT Text FROM dataroom_eval_bird.codebase_community.comments WHERE CreationDate = '2010-07-19 19:16:14.0'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 610,
    "room_id": 490,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.codebase_community.posts WHERE Score = 10",
    "complexity": "Aggregation"
  },
  {
    "query_id": 611,
    "room_id": 491,
    "good_sql": "SELECT T2.name FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.badges AS T2 ON T1.Id = T2.UserId ORDER BY T1.Reputation DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 612,
    "room_id": 492,
    "good_sql": "SELECT T1.Reputation FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.badges AS T2 ON T1.Id = T2.UserId WHERE T2.Date = '2010-07-19 19:39:08.0'",
    "complexity": "Single Join"
  },
  {
    "query_id": 613,
    "room_id": 447,
    "good_sql": "SELECT T2.Name FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Pierre'",
    "complexity": "Single Join"
  },
  {
    "query_id": 614,
    "room_id": 493,
    "good_sql": "SELECT T2.Date FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location = 'Rochester, NY'",
    "complexity": "Single Join"
  },
  {
    "query_id": 615,
    "room_id": 494,
    "good_sql": "SELECT CAST(COUNT(T1.Id) AS REAL) * 100 / (SELECT COUNT(Id) FROM dataroom_eval_bird.codebase_community.users) FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Teacher'",
    "complexity": "Aggregation, Single Join, Subqueries"
  },
  {
    "query_id": 616,
    "room_id": 495,
    "good_sql": "SELECT CAST(SUM(IF(T2.Age BETWEEN 13 AND 18, 1, 0)) AS REAL) * 100 / COUNT(T1.Id) FROM dataroom_eval_bird.codebase_community.badges AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.UserId = T2.Id WHERE T1.`Name` = 'Organizer'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 617,
    "room_id": 496,
    "good_sql": "SELECT T1.Score FROM dataroom_eval_bird.codebase_community.comments AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.PostId = T2.Id WHERE T1.CreationDate = '2010-07-19 19:19:56.0'",
    "complexity": "Single Join"
  },
  {
    "query_id": 618,
    "room_id": 497,
    "good_sql": "SELECT T1.Text FROM dataroom_eval_bird.codebase_community.comments AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.PostId = T2.Id WHERE T1.CreationDate = '2010-07-19 19:37:33.0'",
    "complexity": "Single Join"
  },
  {
    "query_id": 619,
    "room_id": 498,
    "good_sql": "SELECT T1.Age FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location = 'Vienna, Austria'",
    "complexity": "Single Join"
  },
  {
    "query_id": 620,
    "room_id": 499,
    "good_sql": "SELECT COUNT(T1.Id) FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Supporter' AND T1.Age BETWEEN 19 AND 65",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 621,
    "room_id": 492,
    "good_sql": "SELECT T1.Views FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.badges AS T2 ON T1.Id = T2.UserId WHERE T2.Date = '2010-07-19 19:39:08.0'",
    "complexity": "Single Join"
  },
  {
    "query_id": 622,
    "room_id": 500,
    "good_sql": "SELECT T2.Name FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.badges AS T2 ON T1.Id = T2.UserId WHERE T1.Reputation = (SELECT MIN(Reputation) FROM dataroom_eval_bird.codebase_community.users)",
    "complexity": "Single Join, Subqueries"
  },
  {
    "query_id": 623,
    "room_id": 501,
    "good_sql": "SELECT T2.Name FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Sharpie'",
    "complexity": "Single Join"
  },
  {
    "query_id": 624,
    "room_id": 502,
    "good_sql": "SELECT COUNT(T1.Id) FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.badges AS T2 ON T1.Id = T2.UserId WHERE T1.Age > 65 AND T2.Name = 'Supporter'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 625,
    "room_id": 503,
    "good_sql": "SELECT DisplayName FROM dataroom_eval_bird.codebase_community.users WHERE Id = 30",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 626,
    "room_id": 504,
    "good_sql": "SELECT COUNT(Id) FROM dataroom_eval_bird.codebase_community.users WHERE Location = 'New York'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 627,
    "room_id": 505,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.codebase_community.votes WHERE DATE_FORMAT(CAST(CreationDate AS TIMESTAMP), 'yyyy') = '2010'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 628,
    "room_id": 506,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.codebase_community.users WHERE Age BETWEEN 19 AND 65",
    "complexity": "Aggregation"
  },
  {
    "query_id": 629,
    "room_id": 507,
    "good_sql": "SELECT Id, DisplayName FROM dataroom_eval_bird.codebase_community.users WHERE Views = ( SELECT MAX(Views) FROM dataroom_eval_bird.codebase_community.users )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 630,
    "room_id": 508,
    "good_sql": "SELECT CAST(SUM(IF(DATE_FORMAT(CAST(CreationDate AS TIMESTAMP), 'yyyy') = '2010', 1, 0)) AS REAL) / SUM(IF(DATE_FORMAT(CAST(CreationDate AS TIMESTAMP), 'yyyy') = '2011', 1, 0)) FROM dataroom_eval_bird.codebase_community.votes",
    "complexity": "Aggregation"
  },
  {
    "query_id": 631,
    "room_id": 509,
    "good_sql": "SELECT T3.Tags FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posthistory AS T2 ON T1.Id = T2.UserId INNER JOIN dataroom_eval_bird.codebase_community.posts AS T3 ON T2.PostId = T3.Id WHERE T1.DisplayName = 'John Salvatier'",
    "complexity": "Single Join, Multiple Joins"
  },
  {
    "query_id": 632,
    "room_id": 510,
    "good_sql": "SELECT COUNT(T1.Id) FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posthistory AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Daniel Vassallo'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 633,
    "room_id": 511,
    "good_sql": "SELECT COUNT(T1.Id) FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posthistory AS T2 ON T1.Id = T2.UserId INNER JOIN dataroom_eval_bird.codebase_community.votes AS T3 ON T3.PostId = T2.PostId WHERE T1.DisplayName = 'Harlan'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 634,
    "room_id": 512,
    "good_sql": "SELECT T2.PostId FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posthistory AS T2 ON T1.Id = T2.UserId INNER JOIN dataroom_eval_bird.codebase_community.posts AS T3 ON T2.PostId = T3.Id WHERE T1.DisplayName = 'slashnick' ORDER BY T3.AnswerCount DESC LIMIT 1",
    "complexity": "Single Join, Multiple Joins"
  },
  {
    "query_id": 635,
    "room_id": 513,
    "good_sql": "SELECT T1.DisplayName FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posthistory AS T2 ON T1.Id = T2.UserId INNER JOIN dataroom_eval_bird.codebase_community.posts AS T3 ON T2.PostId = T3.Id WHERE T1.DisplayName = 'Harvey Motulsky' OR T1.DisplayName = 'Noah Snyder' GROUP BY T1.DisplayName ORDER BY SUM(T3.ViewCount) DESC LIMIT 1",
    "complexity": "Multiple Joins, Aggregation"
  },
  {
    "query_id": 636,
    "room_id": 514,
    "good_sql": "SELECT COUNT(T1.Id) FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posthistory AS T2 ON T1.Id = T2.UserId INNER JOIN dataroom_eval_bird.codebase_community.posts AS T3 ON T2.PostId = T3.Id INNER JOIN dataroom_eval_bird.codebase_community.votes AS T4 ON T4.PostId = T3.Id WHERE T1.DisplayName = 'Matt Parker' GROUP BY T2.PostId, T4.Id HAVING COUNT(T4.Id) > 4",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 637,
    "room_id": 515,
    "good_sql": "SELECT COUNT(T3.Id) FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN dataroom_eval_bird.codebase_community.comments AS T3 ON T2.Id = T3.PostId WHERE T1.DisplayName = 'Neil McGuigan' AND T3.Score < 60",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 638,
    "room_id": 516,
    "good_sql": "SELECT T3.Tags FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posthistory AS T2 ON T1.Id = T2.UserId INNER JOIN dataroom_eval_bird.codebase_community.posts AS T3 ON T3.Id = T2.PostId WHERE T1.DisplayName = 'Mark Meckes' AND T3.CommentCount = 0",
    "complexity": "Single Join, Multiple Joins"
  },
  {
    "query_id": 639,
    "room_id": 517,
    "good_sql": "SELECT T1.DisplayName FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.badges AS T2 ON T1.Id = T2.UserId WHERE T2.`Name` = 'Organizer'",
    "complexity": "Single Join"
  },
  {
    "query_id": 640,
    "room_id": 518,
    "good_sql": "SELECT CAST(SUM(IF(T3.TagName = 'r', 1, 0)) AS REAL) * 100 / COUNT(T1.Id) FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posthistory AS T2 ON T1.Id = T2.UserId INNER JOIN dataroom_eval_bird.codebase_community.tags AS T3 ON T3.ExcerptPostId = T2.PostId WHERE T1.DisplayName = 'Community'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 641,
    "room_id": 519,
    "good_sql": "SELECT SUM(IF(T1.DisplayName = 'Mornington', T3.ViewCount, 0)) - SUM(IF(T1.DisplayName = 'Amos', T3.ViewCount, 0)) AS diff FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posthistory AS T2 ON T1.Id = T2.UserId INNER JOIN dataroom_eval_bird.codebase_community.posts AS T3 ON T3.Id = T2.PostId",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 642,
    "room_id": 520,
    "good_sql": "SELECT COUNT(Id) FROM dataroom_eval_bird.codebase_community.badges WHERE Name = 'Commentator' AND DATE_FORMAT(CAST(Date AS TIMESTAMP), 'yyyy') = '2014'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 643,
    "room_id": 521,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.codebase_community.posthistory WHERE DATE(CreationDate) = '2010-07-21'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 644,
    "room_id": 522,
    "good_sql": "SELECT DisplayName, Age FROM dataroom_eval_bird.codebase_community.users WHERE Views = ( SELECT MAX(Views) FROM dataroom_eval_bird.codebase_community.users )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 645,
    "room_id": 523,
    "good_sql": "SELECT LastEditDate, LastEditorUserId FROM dataroom_eval_bird.codebase_community.posts WHERE Title = 'Detecting a given face in a database of facial images'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 646,
    "room_id": 524,
    "good_sql": "SELECT COUNT(Id) FROM dataroom_eval_bird.codebase_community.comments WHERE UserId = 13 AND Score < 60",
    "complexity": "Aggregation"
  },
  {
    "query_id": 647,
    "room_id": 525,
    "good_sql": "SELECT T1.Title, T2.UserDisplayName FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.comments AS T2 ON T2.PostId = T2.Id WHERE T1.Score > 60",
    "complexity": "Single Join"
  },
  {
    "query_id": 648,
    "room_id": 526,
    "good_sql": "SELECT T2.Name FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.badges AS T2 ON T1.Id = T2.UserId WHERE DATE_FORMAT(CAST(T2.Date AS TIMESTAMP), 'yyyy') = '2011' AND T1.Location = 'North Pole'",
    "complexity": "Single Join"
  },
  {
    "query_id": 649,
    "room_id": 527,
    "good_sql": "SELECT T1.DisplayName, T1.WebsiteUrl FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.FavoriteCount > 150",
    "complexity": "Single Join"
  },
  {
    "query_id": 650,
    "room_id": 447,
    "good_sql": "SELECT T1.Id, T2.LastEditDate FROM dataroom_eval_bird.codebase_community.posthistory AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title = 'What is the best introductory Bayesian statistics textbook?'",
    "complexity": "Single Join"
  },
  {
    "query_id": 651,
    "room_id": 528,
    "good_sql": "SELECT T1.LastAccessDate, T1.Location FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'outliers'",
    "complexity": "Single Join"
  },
  {
    "query_id": 652,
    "room_id": 447,
    "good_sql": "SELECT T3.Title FROM dataroom_eval_bird.codebase_community.postlinks AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.PostId = T2.Id INNER JOIN dataroom_eval_bird.codebase_community.posts AS T3 ON T1.RelatedPostId = T3.Id WHERE T2.Title = 'How to tell if something happened in a data set which monitors a value over time'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 653,
    "room_id": 529,
    "good_sql": "SELECT T1.PostId, T2.Name FROM dataroom_eval_bird.codebase_community.posthistory AS T1 INNER JOIN dataroom_eval_bird.codebase_community.badges AS T2 ON T1.UserId = T2.UserId WHERE T1.UserDisplayName = 'Samuel' AND DATE_FORMAT(CAST(T1.CreationDate AS TIMESTAMP), 'yyyy') = '2013' AND DATE_FORMAT(CAST(T2.Date AS TIMESTAMP), 'yyyy') = '2013'",
    "complexity": "Single Join"
  },
  {
    "query_id": 654,
    "room_id": 530,
    "good_sql": "SELECT DisplayName FROM dataroom_eval_bird.codebase_community.users WHERE Id = ( SELECT OwnerUserId FROM dataroom_eval_bird.codebase_community.posts ORDER BY ViewCount DESC LIMIT 1 )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 655,
    "room_id": 531,
    "good_sql": "SELECT T3.DisplayName, T3.Location FROM dataroom_eval_bird.codebase_community.tags AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.ExcerptPostId = T2.Id INNER JOIN dataroom_eval_bird.codebase_community.users AS T3 ON T3.Id = T2.OwnerUserId WHERE T1.TagName = 'hypothesis-testing'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 656,
    "room_id": 532,
    "good_sql": "SELECT T3.Title, T2.LinkTypeId FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.postlinks AS T2 ON T1.Id = T2.PostId INNER JOIN dataroom_eval_bird.codebase_community.posts AS T3 ON T2.RelatedPostId = T3.Id WHERE T1.Title = 'What are principal component scores?'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 657,
    "room_id": 533,
    "good_sql": "SELECT DisplayName FROM dataroom_eval_bird.codebase_community.users WHERE Id = ( SELECT OwnerUserId FROM dataroom_eval_bird.codebase_community.posts WHERE ParentId IS NOT NULL ORDER BY Score DESC LIMIT 1 )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 658,
    "room_id": 534,
    "good_sql": "SELECT DisplayName, WebsiteUrl FROM dataroom_eval_bird.codebase_community.users WHERE Id = ( SELECT UserId FROM dataroom_eval_bird.codebase_community.votes WHERE VoteTypeId = 8 ORDER BY BountyAmount DESC LIMIT 1 )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 659,
    "room_id": 535,
    "good_sql": "SELECT Title FROM dataroom_eval_bird.codebase_community.posts ORDER BY ViewCount DESC LIMIT 5",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 660,
    "room_id": 536,
    "good_sql": "SELECT COUNT(Id) FROM dataroom_eval_bird.codebase_community.tags WHERE Count BETWEEN 5000 AND 7000",
    "complexity": "Aggregation"
  },
  {
    "query_id": 661,
    "room_id": 537,
    "good_sql": "SELECT OwnerUserId FROM dataroom_eval_bird.codebase_community.posts WHERE FavoriteCount = ( SELECT MAX(FavoriteCount) FROM dataroom_eval_bird.codebase_community.posts )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 662,
    "room_id": 538,
    "good_sql": "SELECT Age FROM dataroom_eval_bird.codebase_community.users WHERE Reputation = ( SELECT MAX(Reputation) FROM dataroom_eval_bird.codebase_community.users )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 663,
    "room_id": 539,
    "good_sql": "SELECT COUNT(T1.Id) FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.votes AS T2 ON T1.Id = T2.PostId WHERE T2.BountyAmount = 50 AND DATE_FORMAT(CAST(T2.CreationDate AS TIMESTAMP), 'yyyy') = '2011'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 664,
    "room_id": 540,
    "good_sql": "SELECT Id FROM dataroom_eval_bird.codebase_community.users WHERE Age = ( SELECT MIN(Age) FROM dataroom_eval_bird.codebase_community.users )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 665,
    "room_id": 541,
    "good_sql": "SELECT Score FROM dataroom_eval_bird.codebase_community.posts WHERE Id = ( SELECT ExcerptPostId FROM dataroom_eval_bird.codebase_community.tags ORDER BY Count DESC LIMIT 1 )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 666,
    "room_id": 542,
    "good_sql": "SELECT CAST(COUNT(T1.Id) AS REAL) / 12 FROM dataroom_eval_bird.codebase_community.postlinks AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.PostId = T2.Id WHERE T2.AnswerCount <= 2 AND DATE_FORMAT(CAST(T1.CreationDate AS TIMESTAMP), 'yyyy') = '2010'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 667,
    "room_id": 543,
    "good_sql": "SELECT T2.Id FROM dataroom_eval_bird.codebase_community.votes AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 1465 ORDER BY T2.FavoriteCount DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 668,
    "room_id": 544,
    "good_sql": "SELECT T1.Title FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.postlinks AS T2 ON T2.PostId = T1.Id ORDER BY T1.CreaionDate LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 669,
    "room_id": 545,
    "good_sql": "SELECT T1.DisplayName FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.badges AS T2 ON T1.Id = T2.UserId GROUP BY T1.DisplayName ORDER BY COUNT(T1.Id) DESC LIMIT 1",
    "complexity": "Single Join, Aggregation"
  },
  {
    "query_id": 670,
    "room_id": 546,
    "good_sql": "SELECT T2.CreationDate FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.votes AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'chl' ORDER BY T2.CreationDate LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 671,
    "room_id": 547,
    "good_sql": "SELECT T2.CreaionDate FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Age IS NOT NULL ORDER BY T1.Age, T2.CreaionDate LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 672,
    "room_id": 548,
    "good_sql": "SELECT T1.DisplayName FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.badges AS T2 ON T1.Id = T2.UserId WHERE T2.`Name` = 'Autobiographer' ORDER BY T2.Date LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 673,
    "room_id": 549,
    "good_sql": "SELECT COUNT(T1.Id) FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Location = 'United Kingdom' AND T2.FavoriteCount >= 4",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 674,
    "room_id": 550,
    "good_sql": "SELECT AVG(PostId) FROM dataroom_eval_bird.codebase_community.votes WHERE UserId IN ( SELECT Id FROM dataroom_eval_bird.codebase_community.users WHERE Age = ( SELECT MAX(Age) FROM dataroom_eval_bird.codebase_community.users ) )",
    "complexity": "Aggregation, Subqueries"
  },
  {
    "query_id": 675,
    "room_id": 551,
    "good_sql": "SELECT DisplayName FROM dataroom_eval_bird.codebase_community.users WHERE Reputation = ( SELECT MAX(Reputation) FROM dataroom_eval_bird.codebase_community.users )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 676,
    "room_id": 552,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.codebase_community.users WHERE Reputation > 2000 AND Views > 1000",
    "complexity": "Aggregation"
  },
  {
    "query_id": 677,
    "room_id": 553,
    "good_sql": "SELECT DisplayName FROM dataroom_eval_bird.codebase_community.users WHERE Age BETWEEN 19 AND 65",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 678,
    "room_id": 554,
    "good_sql": "SELECT COUNT(T1.Id) FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.Id = T2.OwnerUserId WHERE DATE_FORMAT(CAST(T2.CreaionDate AS TIMESTAMP), 'yyyy') = '2010' AND T1.DisplayName = 'Jay Stevens'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 679,
    "room_id": 555,
    "good_sql": "SELECT T2.Id, T2.Title FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Harvey Motulsky' ORDER BY T2.ViewCount DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 680,
    "room_id": 556,
    "good_sql": "SELECT T1.Id, T2.Title FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.Id = T2.OwnerUserId ORDER BY T2.Score DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 681,
    "room_id": 557,
    "good_sql": "SELECT AVG(T2.Score) FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Stephen Turner'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 682,
    "room_id": 558,
    "good_sql": "SELECT T1.DisplayName FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.Id = T2.OwnerUserId WHERE DATE_FORMAT(CAST(T2.CreaionDate AS TIMESTAMP), 'yyyy') = '2011' AND T2.ViewCount > 20000",
    "complexity": "Single Join"
  },
  {
    "query_id": 683,
    "room_id": 559,
    "good_sql": "SELECT T2.OwnerUserId, T1.DisplayName FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.Id = T2.OwnerUserId WHERE DATE_FORMAT(CAST(T1.CreationDate AS TIMESTAMP), 'yyyy') = '2010' ORDER BY T2.FavoriteCount DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 684,
    "room_id": 560,
    "good_sql": "SELECT CAST(SUM(IF(DATE_FORMAT(CAST(T2.CreaionDate AS TIMESTAMP), 'yyyy') = '2011' AND T1.Reputation > 1000, 1, 0)) AS REAL) * 100 / COUNT(T1.Id) FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.Id = T2.OwnerUserId",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 685,
    "room_id": 561,
    "good_sql": "SELECT CAST(SUM(IF(Age BETWEEN 13 AND 18, 1, 0)) AS REAL) * 100 / COUNT(Id) FROM dataroom_eval_bird.codebase_community.users",
    "complexity": "Aggregation"
  },
  {
    "query_id": 686,
    "room_id": 562,
    "good_sql": "SELECT T2.ViewCount, T3.DisplayName FROM dataroom_eval_bird.codebase_community.posthistory AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.PostId = T2.Id INNER JOIN dataroom_eval_bird.codebase_community.users AS T3 ON T2.LastEditorUserId = T3.Id WHERE T1.Text = 'Computer Game Datasets'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 687,
    "room_id": 563,
    "good_sql": "SELECT Id FROM dataroom_eval_bird.codebase_community.posts WHERE ViewCount > ( SELECT AVG(ViewCount) FROM dataroom_eval_bird.codebase_community.posts )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 688,
    "room_id": 564,
    "good_sql": "SELECT COUNT(T2.Id) FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.comments AS T2 ON T1.Id = T2.PostId GROUP BY T1.Id ORDER BY SUM(T1.Score) DESC LIMIT 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 689,
    "room_id": 565,
    "good_sql": "SELECT COUNT(Id) FROM dataroom_eval_bird.codebase_community.posts WHERE ViewCount > 35000 AND CommentCount = 0",
    "complexity": "Aggregation"
  },
  {
    "query_id": 690,
    "room_id": 566,
    "good_sql": "SELECT T2.DisplayName, T2.Location FROM dataroom_eval_bird.codebase_community.posts AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Id = 183 ORDER BY T1.LastEditDate DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 691,
    "room_id": 567,
    "good_sql": "SELECT T1.Name FROM dataroom_eval_bird.codebase_community.badges AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Emmett' ORDER BY T1.Date DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 692,
    "room_id": 568,
    "good_sql": "SELECT COUNT(Id) FROM dataroom_eval_bird.codebase_community.users WHERE Age BETWEEN 19 AND 65 AND UpVotes > 5000",
    "complexity": "Aggregation"
  },
  {
    "query_id": 693,
    "room_id": 569,
    "good_sql": "SELECT T1.Date - T2.CreationDate FROM dataroom_eval_bird.codebase_community.badges AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Zolomon'",
    "complexity": "Single Join"
  },
  {
    "query_id": 694,
    "room_id": 570,
    "good_sql": "SELECT subquery.post_count\nFROM (\n    SELECT COUNT(T2.Id) AS post_count, ANY_VALUE(T1.CreationDate)\n    FROM dataroom_eval_bird.codebase_community.users AS T1\n    INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.Id = T2.OwnerUserId\n    INNER JOIN dataroom_eval_bird.codebase_community.comments AS T3 ON T3.PostId = T2.Id\n    GROUP BY NULL\n    ORDER BY ANY_VALUE(T1.CreationDate) DESC\n    LIMIT 1\n) AS subquery",
    "complexity": "Subqueries, Multiple Joins, Aggregation"
  },
  {
    "query_id": 695,
    "room_id": 571,
    "good_sql": "SELECT T3.Text, T1.DisplayName FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN dataroom_eval_bird.codebase_community.comments AS T3 ON T2.Id = T3.PostId WHERE T2.Title = 'Analysing wind data with R' ORDER BY T1.CreationDate DESC LIMIT 1",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 696,
    "room_id": 572,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.codebase_community.badges WHERE `Name` = 'Citizen Patrol'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 697,
    "room_id": 573,
    "good_sql": "SELECT COUNT(Id) FROM dataroom_eval_bird.codebase_community.tags WHERE TagName = 'careers'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 698,
    "room_id": 447,
    "good_sql": "SELECT Reputation, Views FROM dataroom_eval_bird.codebase_community.users WHERE DisplayName = 'Jarrod Dixon'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 699,
    "room_id": 447,
    "good_sql": "SELECT CommentCount, AnswerCount FROM dataroom_eval_bird.codebase_community.posts WHERE Title = 'Clustering 1D data'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 700,
    "room_id": 574,
    "good_sql": "SELECT CreationDate FROM dataroom_eval_bird.codebase_community.users WHERE DisplayName = 'IrishStat'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 701,
    "room_id": 575,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.codebase_community.votes WHERE BountyAmount >= 30",
    "complexity": "Aggregation"
  },
  {
    "query_id": 702,
    "room_id": 576,
    "good_sql": "SELECT CAST(SUM(CASE WHEN T2.Score >= 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN (SELECT MAX(Reputation) AS max_reputation FROM dataroom_eval_bird.codebase_community.users) AS T3 ON T1.Reputation = T3.max_reputation",
    "complexity": "Aggregation, Multiple Joins, Subqueries"
  },
  {
    "query_id": 703,
    "room_id": 577,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.codebase_community.posts WHERE Score < 20",
    "complexity": "Aggregation"
  },
  {
    "query_id": 704,
    "room_id": 578,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.codebase_community.tags WHERE Count <= 20 AND Id < 15",
    "complexity": "Aggregation"
  },
  {
    "query_id": 705,
    "room_id": 579,
    "good_sql": "SELECT ExcerptPostId, WikiPostId FROM dataroom_eval_bird.codebase_community.tags WHERE TagName = 'sample'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 706,
    "room_id": 580,
    "good_sql": "SELECT T2.Reputation, T2.UpVotes FROM dataroom_eval_bird.codebase_community.comments AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'fine, you win :)'",
    "complexity": "Single Join"
  },
  {
    "query_id": 707,
    "room_id": 581,
    "good_sql": "SELECT T1.Text FROM dataroom_eval_bird.codebase_community.comments AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title LIKE '%linear regression%'",
    "complexity": "Single Join"
  },
  {
    "query_id": 708,
    "room_id": 582,
    "good_sql": "SELECT Text FROM dataroom_eval_bird.codebase_community.comments WHERE PostId IN ( SELECT Id FROM dataroom_eval_bird.codebase_community.posts WHERE ViewCount BETWEEN 100 AND 150 ) ORDER BY Score DESC LIMIT 1",
    "complexity": "Subqueries"
  },
  {
    "query_id": 709,
    "room_id": 583,
    "good_sql": "SELECT T2.CreationDate, T2.Age FROM dataroom_eval_bird.codebase_community.comments AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.UserId = T2.Id WHERE T1.text LIKE '%http://%'",
    "complexity": "Single Join"
  },
  {
    "query_id": 710,
    "room_id": 584,
    "good_sql": "SELECT COUNT(T1.Id) FROM dataroom_eval_bird.codebase_community.comments AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.PostId = T2.Id WHERE T2.ViewCount < 5 AND T2.Score = 0",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 711,
    "room_id": 585,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.codebase_community.comments AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.PostId = T2.Id WHERE T2.CommentCount = 1 AND T2.Score = 0",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 712,
    "room_id": 447,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.codebase_community.comments AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.UserId = T2.Id WHERE T1.Score = 0 AND T2.Age = 40",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 713,
    "room_id": 586,
    "good_sql": "SELECT T2.Id, T1.Text FROM dataroom_eval_bird.codebase_community.comments AS T1 INNER JOIN dataroom_eval_bird.codebase_community.posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title = 'Group differences on a five point Likert item'",
    "complexity": "Single Join"
  },
  {
    "query_id": 714,
    "room_id": 587,
    "good_sql": "SELECT T2.UpVotes FROM dataroom_eval_bird.codebase_community.comments AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'R is also lazy evaluated.'",
    "complexity": "Single Join"
  },
  {
    "query_id": 715,
    "room_id": 588,
    "good_sql": "SELECT T1.Text FROM dataroom_eval_bird.codebase_community.comments AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky'",
    "complexity": "Single Join"
  },
  {
    "query_id": 716,
    "room_id": 589,
    "good_sql": "SELECT T2.DisplayName FROM dataroom_eval_bird.codebase_community.comments AS T1 INNER JOIN dataroom_eval_bird.codebase_community.users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 1 AND 5 AND T2.DownVotes = 0",
    "complexity": "Single Join"
  },
  {
    "query_id": 717,
    "room_id": 590,
    "good_sql": "SELECT CAST(SUM(IF(T1.UpVotes = 0, 1, 0)) AS REAL) / COUNT(T1.Id) AS per FROM dataroom_eval_bird.codebase_community.users AS T1 INNER JOIN dataroom_eval_bird.codebase_community.comments AS T2 ON T1.Id = T2.UserId WHERE T2.Score BETWEEN 5 AND 10",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 718,
    "room_id": 591,
    "good_sql": "SELECT T3.power_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN dataroom_eval_bird.superhero.superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = '3-D Man'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 719,
    "room_id": 592,
    "good_sql": "SELECT COUNT(T1.hero_id) FROM dataroom_eval_bird.superhero.hero_power AS T1 INNER JOIN dataroom_eval_bird.superhero.superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Super Strength'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 720,
    "room_id": 593,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN dataroom_eval_bird.superhero.superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.height_cm > 200",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 721,
    "room_id": 594,
    "good_sql": "SELECT DISTINCT T1.full_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.full_name HAVING COUNT(T2.power_id) > 15",
    "complexity": "Single Join, Aggregation"
  },
  {
    "query_id": 722,
    "room_id": 595,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 723,
    "room_id": 596,
    "good_sql": "SELECT T2.colour FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.colour AS T2 ON T1.skin_colour_id = T2.id WHERE T1.superhero_name = 'Apocalypse'",
    "complexity": "Single Join"
  },
  {
    "query_id": 724,
    "room_id": 597,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN dataroom_eval_bird.superhero.superpower AS T3 ON T2.power_id = T3.id INNER JOIN dataroom_eval_bird.superhero.colour AS T4 ON T1.eye_colour_id = T4.id WHERE T3.power_name = 'Agility' AND T4.colour = 'Blue'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 725,
    "room_id": 598,
    "good_sql": "SELECT T1.superhero_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN dataroom_eval_bird.superhero.colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 726,
    "room_id": 599,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 727,
    "room_id": 600,
    "good_sql": "SELECT T1.full_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' ORDER BY T1.height_cm DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 728,
    "room_id": 601,
    "good_sql": "SELECT T2.publisher_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Sauron'",
    "complexity": "Single Join"
  },
  {
    "query_id": 729,
    "room_id": 602,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN dataroom_eval_bird.superhero.colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.publisher_name = 'Marvel Comics' AND T3.colour = 'Blue'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 730,
    "room_id": 603,
    "good_sql": "SELECT AVG(T1.height_cm) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 731,
    "room_id": 604,
    "good_sql": "SELECT CAST(COUNT(CASE WHEN T3.power_name = 'Super Strength' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN dataroom_eval_bird.superhero.superpower AS T3 ON T2.power_id = T3.id INNER JOIN dataroom_eval_bird.superhero.publisher AS T4 ON T1.publisher_id = T4.id WHERE T4.publisher_name = 'Marvel Comics'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 732,
    "room_id": 605,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 733,
    "room_id": 606,
    "good_sql": "SELECT T2.publisher_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN dataroom_eval_bird.superhero.hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN dataroom_eval_bird.superhero.attribute AS T4 ON T3.attribute_id = T4.id WHERE T4.attribute_name = 'Speed' ORDER BY T3.attribute_value LIMIT 1",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 734,
    "room_id": 607,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN dataroom_eval_bird.superhero.colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.publisher_name = 'Marvel Comics' AND T3.colour = 'Gold'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 735,
    "room_id": 608,
    "good_sql": "SELECT T2.publisher_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Blue Beetle II'",
    "complexity": "Single Join"
  },
  {
    "query_id": 736,
    "room_id": 609,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.colour AS T2 ON T1.hair_colour_id = T2.id WHERE T2.colour = 'Blond'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 737,
    "room_id": 610,
    "good_sql": "SELECT T1.superhero_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN dataroom_eval_bird.superhero.attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Intelligence' ORDER BY T2.attribute_value LIMIT 1",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 738,
    "room_id": 611,
    "good_sql": "SELECT T2.race FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'Copycat'",
    "complexity": "Single Join"
  },
  {
    "query_id": 739,
    "room_id": 612,
    "good_sql": "SELECT COUNT(T1.hero_id) FROM dataroom_eval_bird.superhero.hero_attribute AS T1 INNER JOIN dataroom_eval_bird.superhero.attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Durability' AND T1.attribute_value < 50",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 740,
    "room_id": 613,
    "good_sql": "SELECT T1.superhero_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN dataroom_eval_bird.superhero.superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Death Touch'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 741,
    "room_id": 614,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN dataroom_eval_bird.superhero.attribute AS T3 ON T2.attribute_id = T3.id INNER JOIN dataroom_eval_bird.superhero.gender AS T4 ON T1.gender_id = T4.id WHERE T3.attribute_name = 'Strength' AND T2.attribute_value = 100 AND T4.gender = 'Female'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 742,
    "room_id": 615,
    "good_sql": "SELECT T1.superhero_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.superhero_name ORDER BY COUNT(T2.hero_id) DESC LIMIT 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 743,
    "room_id": 616,
    "good_sql": "SELECT COUNT(T1.superhero_name) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 744,
    "room_id": 617,
    "good_sql": "SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM dataroom_eval_bird.superhero.superhero)), CAST(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS REAL) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN dataroom_eval_bird.superhero.alignment AS T3 ON T3.id = T1.alignment_id WHERE T3.alignment = 'Bad'",
    "complexity": "Aggregation, Multiple Joins, Subqueries"
  },
  {
    "query_id": 745,
    "room_id": 618,
    "good_sql": "SELECT SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.publisher AS T2 ON T1.publisher_id = T2.id",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 746,
    "room_id": 619,
    "good_sql": "SELECT id FROM dataroom_eval_bird.superhero.publisher WHERE publisher_name = 'Star Trek'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 747,
    "room_id": 620,
    "good_sql": "SELECT AVG(attribute_value) FROM dataroom_eval_bird.superhero.hero_attribute",
    "complexity": "Aggregation"
  },
  {
    "query_id": 748,
    "room_id": 621,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.superhero.superhero WHERE full_name IS NULL",
    "complexity": "Aggregation"
  },
  {
    "query_id": 749,
    "room_id": 622,
    "good_sql": "SELECT T2.colour FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.id = 75",
    "complexity": "Single Join"
  },
  {
    "query_id": 750,
    "room_id": 623,
    "good_sql": "SELECT T3.power_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN dataroom_eval_bird.superhero.superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Deathlok'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 751,
    "room_id": 624,
    "good_sql": "SELECT AVG(T1.weight_kg) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Female'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 752,
    "room_id": 625,
    "good_sql": "SELECT T3.power_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN dataroom_eval_bird.superhero.superpower AS T3 ON T3.id = T2.power_id INNER JOIN dataroom_eval_bird.superhero.gender AS T4 ON T4.id = T1.gender_id WHERE T4.gender = 'Male' LIMIT 5",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 753,
    "room_id": 626,
    "good_sql": "SELECT T1.superhero_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien'",
    "complexity": "Single Join"
  },
  {
    "query_id": 754,
    "room_id": 627,
    "good_sql": "SELECT DISTINCT T1.superhero_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.height_cm BETWEEN 170 AND 190 AND T2.colour LIKE 'No Colour'",
    "complexity": "Basic SQL, Single Join"
  },
  {
    "query_id": 755,
    "room_id": 628,
    "good_sql": "SELECT T2.power_name FROM dataroom_eval_bird.superhero.hero_power AS T1 INNER JOIN dataroom_eval_bird.superhero.superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 56",
    "complexity": "Single Join"
  },
  {
    "query_id": 756,
    "room_id": 629,
    "good_sql": "SELECT T1.full_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Demi-God'",
    "complexity": "Single Join"
  },
  {
    "query_id": 757,
    "room_id": 630,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Bad'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 758,
    "room_id": 631,
    "good_sql": "SELECT T2.race FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 169",
    "complexity": "Single Join"
  },
  {
    "query_id": 759,
    "room_id": 632,
    "good_sql": "SELECT DISTINCT T3.colour FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.race AS T2 ON T1.race_id = T2.id INNER JOIN dataroom_eval_bird.superhero.colour AS T3 ON T1.hair_colour_id = T3.id WHERE T1.height_cm = 185 AND T2.race = 'Human'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 760,
    "room_id": 633,
    "good_sql": "SELECT T2.colour FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.colour AS T2 ON T1.eye_colour_id = T2.id ORDER BY T1.weight_kg DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 761,
    "room_id": 634,
    "good_sql": "SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 762,
    "room_id": 635,
    "good_sql": "SELECT T1.full_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Male' AND T1.weight_kg * 100 > ( SELECT AVG(weight_kg) FROM dataroom_eval_bird.superhero.superhero ) * 79",
    "complexity": "Single Join, Subqueries"
  },
  {
    "query_id": 763,
    "room_id": 636,
    "good_sql": "SELECT T2.power_name FROM dataroom_eval_bird.superhero.hero_power AS T1 INNER JOIN dataroom_eval_bird.superhero.superpower AS T2 ON T1.power_id = T2.id GROUP BY T2.power_name ORDER BY COUNT(T1.hero_id) DESC LIMIT 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 764,
    "room_id": 637,
    "good_sql": "SELECT T2.attribute_value FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Abomination'",
    "complexity": "Single Join"
  },
  {
    "query_id": 765,
    "room_id": 638,
    "good_sql": "SELECT DISTINCT T2.power_name FROM dataroom_eval_bird.superhero.hero_power AS T1 INNER JOIN dataroom_eval_bird.superhero.superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 766,
    "room_id": 639,
    "good_sql": "SELECT COUNT(T1.hero_id) FROM dataroom_eval_bird.superhero.hero_power AS T1 INNER JOIN dataroom_eval_bird.superhero.superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Stealth'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 767,
    "room_id": 640,
    "good_sql": "SELECT T1.full_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN dataroom_eval_bird.superhero.attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Strength' ORDER BY T2.attribute_value DESC LIMIT 1",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 768,
    "room_id": 641,
    "good_sql": "SELECT CAST(COUNT(*) AS REAL) / SUM(CASE WHEN T2.id = 1 THEN 1 ELSE 0 END) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.colour AS T2 ON T1.skin_colour_id = T2.id",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 769,
    "room_id": 642,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Dark Horse Comics'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 770,
    "room_id": 643,
    "good_sql": "SELECT T1.superhero_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN dataroom_eval_bird.superhero.attribute AS T3 ON T3.id = T2.attribute_id INNER JOIN dataroom_eval_bird.superhero.publisher AS T4 ON T4.id = T1.publisher_id WHERE T4.publisher_name = 'Dark Horse Comics' AND T3.attribute_name = 'Durability' ORDER BY T2.attribute_value DESC LIMIT 1",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 771,
    "room_id": 644,
    "good_sql": "SELECT T2.colour FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Abraham Sapien'",
    "complexity": "Single Join"
  },
  {
    "query_id": 772,
    "room_id": 645,
    "good_sql": "SELECT T1.superhero_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN dataroom_eval_bird.superhero.superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Flight'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 773,
    "room_id": 646,
    "good_sql": "SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.publisher AS T2 ON T2.id = T1.publisher_id INNER JOIN dataroom_eval_bird.superhero.gender AS T3 ON T3.id = T1.gender_id WHERE T2.publisher_name = 'Dark Horse Comics' AND T3.gender = 'Female'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 774,
    "room_id": 647,
    "good_sql": "SELECT T1.superhero_name, T2.publisher_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = T1.hair_colour_id AND T1.eye_colour_id = T1.skin_colour_id",
    "complexity": "Single Join"
  },
  {
    "query_id": 775,
    "room_id": 648,
    "good_sql": "SELECT T2.race FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'A-Bomb'",
    "complexity": "Single Join"
  },
  {
    "query_id": 776,
    "room_id": 649,
    "good_sql": "SELECT CAST(COUNT(CASE WHEN T3.colour = 'Blue' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.gender AS T2 ON T1.gender_id = T2.id INNER JOIN dataroom_eval_bird.superhero.colour AS T3 ON T1.skin_colour_id = T3.id WHERE T2.gender = 'Female'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 777,
    "room_id": 650,
    "good_sql": "SELECT T1.superhero_name, T2.race FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.race AS T2 ON T1.race_id = T2.id WHERE T1.full_name = 'Charles Chandler'",
    "complexity": "Single Join"
  },
  {
    "query_id": 778,
    "room_id": 651,
    "good_sql": "SELECT T2.gender FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.gender AS T2 ON T1.gender_id = T2.id WHERE T1.superhero_name = 'Agent 13'",
    "complexity": "Single Join"
  },
  {
    "query_id": 779,
    "room_id": 652,
    "good_sql": "SELECT T1.superhero_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN dataroom_eval_bird.superhero.superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Adaptation'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 780,
    "room_id": 653,
    "good_sql": "SELECT COUNT(T1.power_id) FROM dataroom_eval_bird.superhero.hero_power AS T1 INNER JOIN dataroom_eval_bird.superhero.superhero AS T2 ON T1.hero_id = T2.id WHERE T2.superhero_name = 'Amazo'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 781,
    "room_id": 654,
    "good_sql": "SELECT T3.power_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN dataroom_eval_bird.superhero.superpower AS T3 ON T2.power_id = T3.id WHERE T1.full_name = 'Hunter Zolomon'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 782,
    "room_id": 655,
    "good_sql": "SELECT T1.height_cm FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber'",
    "complexity": "Single Join"
  },
  {
    "query_id": 783,
    "room_id": 656,
    "good_sql": "SELECT T1.superhero_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.colour AS T2 ON T1.eye_colour_id = T2.id AND T1.hair_colour_id = T2.id WHERE T2.colour = 'Black'",
    "complexity": "Single Join"
  },
  {
    "query_id": 784,
    "room_id": 657,
    "good_sql": "SELECT T2.colour FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN dataroom_eval_bird.superhero.colour AS T3 ON T1.skin_colour_id = T3.id WHERE T3.colour = 'Gold'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 785,
    "room_id": 658,
    "good_sql": "SELECT T1.full_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'",
    "complexity": "Single Join"
  },
  {
    "query_id": 786,
    "room_id": 659,
    "good_sql": "SELECT T1.superhero_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'",
    "complexity": "Single Join"
  },
  {
    "query_id": 787,
    "room_id": 660,
    "good_sql": "SELECT COUNT(T1.hero_id) FROM dataroom_eval_bird.superhero.hero_attribute AS T1 INNER JOIN dataroom_eval_bird.superhero.attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Strength' AND T1.attribute_value = ( SELECT MAX(attribute_value) FROM dataroom_eval_bird.superhero.hero_attribute )",
    "complexity": "Aggregation, Single Join, Subqueries"
  },
  {
    "query_id": 788,
    "room_id": 661,
    "good_sql": "SELECT T2.race, T3.alignment FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.race AS T2 ON T1.race_id = T2.id INNER JOIN dataroom_eval_bird.superhero.alignment AS T3 ON T1.alignment_id = T3.id WHERE T1.superhero_name = 'Cameron Hicks'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 789,
    "room_id": 662,
    "good_sql": "SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN dataroom_eval_bird.superhero.gender AS T3 ON T1.gender_id = T3.id WHERE T3.gender = 'Female'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 790,
    "room_id": 663,
    "good_sql": "SELECT CAST(SUM(T1.weight_kg) AS REAL) / COUNT(T1.id) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 791,
    "room_id": 664,
    "good_sql": "SELECT ( SELECT weight_kg FROM dataroom_eval_bird.superhero.superhero WHERE full_name LIKE 'Emil Blonsky' ) - ( SELECT weight_kg FROM dataroom_eval_bird.superhero.superhero WHERE full_name LIKE 'Charles Chandler' ) AS CALCULATE",
    "complexity": "Subqueries"
  },
  {
    "query_id": 792,
    "room_id": 665,
    "good_sql": "SELECT CAST(SUM(height_cm) AS REAL) / COUNT(id) FROM dataroom_eval_bird.superhero.superhero",
    "complexity": "Aggregation"
  },
  {
    "query_id": 793,
    "room_id": 666,
    "good_sql": "SELECT T3.power_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN dataroom_eval_bird.superhero.superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Abomination'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 794,
    "room_id": 667,
    "good_sql": "SELECT COUNT(*) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.race AS T2 ON T1.race_id = T2.id INNER JOIN dataroom_eval_bird.superhero.gender AS T3 ON T3.id = T1.gender_id WHERE T1.race_id = 21 AND T1.gender_id = 1",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 795,
    "room_id": 668,
    "good_sql": "SELECT T1.superhero_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN dataroom_eval_bird.superhero.attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Speed' ORDER BY T2.attribute_value DESC LIMIT 1",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 796,
    "room_id": 669,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 797,
    "room_id": 670,
    "good_sql": "SELECT T3.attribute_name, T2.attribute_value FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN dataroom_eval_bird.superhero.attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.superhero_name = '3-D Man'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 798,
    "room_id": 671,
    "good_sql": "SELECT T1.superhero_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN dataroom_eval_bird.superhero.colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Brown'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 799,
    "room_id": 672,
    "good_sql": "SELECT T2.publisher_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')",
    "complexity": "Single Join"
  },
  {
    "query_id": 800,
    "room_id": 673,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.id = 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 801,
    "room_id": 674,
    "good_sql": "SELECT CAST(COUNT(CASE WHEN T2.colour = 'Blue' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.colour AS T2 ON T1.eye_colour_id = T2.id",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 802,
    "room_id": 675,
    "good_sql": "SELECT CAST(COUNT(CASE WHEN T2.gender = 'Male' THEN T1.id ELSE NULL END) AS REAL) / COUNT(CASE WHEN T2.gender = 'Female' THEN T1.id ELSE NULL END) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.gender AS T2 ON T1.gender_id = T2.id",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 803,
    "room_id": 676,
    "good_sql": "SELECT superhero_name FROM dataroom_eval_bird.superhero.superhero ORDER BY height_cm DESC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 804,
    "room_id": 677,
    "good_sql": "SELECT id FROM dataroom_eval_bird.superhero.superpower WHERE power_name = 'Cryokinesis'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 805,
    "room_id": 678,
    "good_sql": "SELECT superhero_name FROM dataroom_eval_bird.superhero.superhero WHERE id = 294",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 806,
    "room_id": 679,
    "good_sql": "SELECT DISTINCT full_name FROM dataroom_eval_bird.superhero.superhero WHERE full_name IS NOT NULL AND (weight_kg IS NULL OR weight_kg = 0)",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 807,
    "room_id": 680,
    "good_sql": "SELECT T2.colour FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Karen Beecher-Duncan'",
    "complexity": "Single Join"
  },
  {
    "query_id": 808,
    "room_id": 681,
    "good_sql": "SELECT T3.power_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN dataroom_eval_bird.superhero.superpower AS T3 ON T2.power_id = T3.id WHERE T1.full_name = 'Helen Parr'",
    "complexity": "Single Join, Multiple Joins"
  },
  {
    "query_id": 809,
    "room_id": 682,
    "good_sql": "SELECT DISTINCT T2.race FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 108 AND T1.height_cm = 188",
    "complexity": "Single Join"
  },
  {
    "query_id": 810,
    "room_id": 683,
    "good_sql": "SELECT T2.publisher_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.id = 38",
    "complexity": "Single Join"
  },
  {
    "query_id": 811,
    "room_id": 684,
    "good_sql": "SELECT T3.race FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN dataroom_eval_bird.superhero.race AS T3 ON T1.race_id = T3.id ORDER BY T2.attribute_value DESC LIMIT 1",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 812,
    "room_id": 685,
    "good_sql": "SELECT T3.power_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN dataroom_eval_bird.superhero.superpower AS T3 ON T3.id = T2.power_id WHERE T1.superhero_name = 'Atom IV'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 813,
    "room_id": 686,
    "good_sql": "SELECT T1.superhero_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue' LIMIT 5",
    "complexity": "Single Join"
  },
  {
    "query_id": 814,
    "room_id": 687,
    "good_sql": "SELECT AVG(T1.attribute_value) FROM dataroom_eval_bird.superhero.hero_attribute AS T1 INNER JOIN dataroom_eval_bird.superhero.superhero AS T2 ON T1.hero_id = T2.id INNER JOIN dataroom_eval_bird.superhero.alignment AS T3 ON T2.alignment_id = T3.id WHERE T3.alignment = 'Neutral'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 815,
    "room_id": 688,
    "good_sql": "SELECT DISTINCT T2.colour FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.colour AS T2 ON T1.skin_colour_id = T2.id INNER JOIN dataroom_eval_bird.superhero.hero_attribute AS T3 ON T1.id = T3.hero_id WHERE T3.attribute_value = 100",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 816,
    "room_id": 689,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN dataroom_eval_bird.superhero.gender AS T3 ON T1.gender_id = T3.id WHERE T2.alignment = 'Good' AND T3.gender = 'Female'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 817,
    "room_id": 690,
    "good_sql": "SELECT T1.superhero_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_value BETWEEN 75 AND 80",
    "complexity": "Single Join"
  },
  {
    "query_id": 818,
    "room_id": 691,
    "good_sql": "SELECT T3.race FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.colour AS T2 ON T1.hair_colour_id = T2.id INNER JOIN dataroom_eval_bird.superhero.race AS T3 ON T1.race_id = T3.id INNER JOIN dataroom_eval_bird.superhero.gender AS T4 ON T1.gender_id = T4.id WHERE T2.colour = 'Blue' AND T4.gender = 'Male'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 819,
    "room_id": 692,
    "good_sql": "SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN dataroom_eval_bird.superhero.gender AS T3 ON T1.gender_id = T3.id WHERE T2.alignment = 'Bad'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 820,
    "room_id": 693,
    "good_sql": "SELECT SUM(CASE WHEN T2.id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.id = 1 THEN 1 ELSE 0 END) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 821,
    "room_id": 694,
    "good_sql": "SELECT T2.attribute_value FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN dataroom_eval_bird.superhero.attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.superhero_name = 'Hulk' AND T3.attribute_name = 'Strength'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 822,
    "room_id": 695,
    "good_sql": "SELECT T3.power_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN dataroom_eval_bird.superhero.superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Ajax'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 823,
    "room_id": 696,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN dataroom_eval_bird.superhero.colour AS T3 ON T1.skin_colour_id = T3.id WHERE T2.alignment = 'Bad' AND T3.colour = 'Green'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 824,
    "room_id": 697,
    "good_sql": "SELECT COUNT(T1.id) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN dataroom_eval_bird.superhero.gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'Marvel Comics' AND T3.gender = 'Female'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 825,
    "room_id": 698,
    "good_sql": "SELECT T1.superhero_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN dataroom_eval_bird.superhero.superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Wind Control' ORDER BY T1.superhero_name",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 826,
    "room_id": 699,
    "good_sql": "SELECT T4.gender FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN dataroom_eval_bird.superhero.superpower AS T3 ON T2.power_id = T3.id INNER JOIN dataroom_eval_bird.superhero.gender AS T4 ON T1.gender_id = T4.id WHERE T3.power_name = 'Phoenix Force'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 827,
    "room_id": 700,
    "good_sql": "SELECT T1.superhero_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics' ORDER BY T1.weight_kg DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 828,
    "room_id": 701,
    "good_sql": "SELECT AVG(T1.height_cm) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN dataroom_eval_bird.superhero.race AS T3 ON T1.race_id = T3.id WHERE T2.publisher_name = 'Dark Horse Comics' AND T3.race != 'Human'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 829,
    "room_id": 702,
    "good_sql": "SELECT count_superhero_name FROM (SELECT COUNT(T3.superhero_name) AS count_superhero_name, ANY_VALUE(T1.attribute_value) FROM dataroom_eval_bird.superhero.hero_attribute AS T1 INNER JOIN dataroom_eval_bird.superhero.attribute AS T2 ON T1.attribute_id = T2.id INNER JOIN dataroom_eval_bird.superhero.superhero AS T3 ON T1.hero_id = T3.id WHERE T2.attribute_name = 'Speed' GROUP BY NULL ORDER BY ANY_VALUE(T1.attribute_value) DESC LIMIT 1) AS subquery",
    "complexity": "Subqueries, Multiple Joins, Aggregation"
  },
  {
    "query_id": 830,
    "room_id": 703,
    "good_sql": "SELECT SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.publisher AS T2 ON T1.publisher_id = T2.id",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 831,
    "room_id": 704,
    "good_sql": "SELECT T3.attribute_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN dataroom_eval_bird.superhero.attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.superhero_name = 'Black Panther' ORDER BY T2.attribute_value ASC LIMIT 1",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 832,
    "room_id": 705,
    "good_sql": "SELECT T2.colour FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Abomination'",
    "complexity": "Single Join"
  },
  {
    "query_id": 833,
    "room_id": 706,
    "good_sql": "SELECT superhero_name FROM dataroom_eval_bird.superhero.superhero ORDER BY height_cm DESC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 834,
    "room_id": 707,
    "good_sql": "SELECT superhero_name FROM dataroom_eval_bird.superhero.superhero WHERE full_name = 'Charles Chandler'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 835,
    "room_id": 708,
    "good_sql": "SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN dataroom_eval_bird.superhero.gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'George Lucas'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 836,
    "room_id": 709,
    "good_sql": "SELECT CAST(COUNT(CASE WHEN T3.alignment = 'Good' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN dataroom_eval_bird.superhero.alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.publisher_name = 'Marvel Comics'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 837,
    "room_id": 710,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.superhero.superhero WHERE full_name LIKE 'John%'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 838,
    "room_id": 711,
    "good_sql": "SELECT hero_id FROM dataroom_eval_bird.superhero.hero_attribute WHERE attribute_value = ( SELECT MIN(attribute_value) FROM dataroom_eval_bird.superhero.hero_attribute )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 839,
    "room_id": 712,
    "good_sql": "SELECT full_name FROM dataroom_eval_bird.superhero.superhero WHERE superhero_name = 'Alien'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 840,
    "room_id": 713,
    "good_sql": "SELECT T1.full_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg < 100 AND T2.colour = 'Brown'",
    "complexity": "Single Join"
  },
  {
    "query_id": 841,
    "room_id": 712,
    "good_sql": "SELECT T2.attribute_value FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Aquababy'",
    "complexity": "Single Join"
  },
  {
    "query_id": 842,
    "room_id": 714,
    "good_sql": "SELECT T1.weight_kg, T2.race FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.race AS T2 ON T1.race_id = T2.id WHERE T1.id = 40",
    "complexity": "Single Join"
  },
  {
    "query_id": 843,
    "room_id": 712,
    "good_sql": "SELECT AVG(T1.height_cm) FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 844,
    "room_id": 715,
    "good_sql": "SELECT T1.hero_id FROM dataroom_eval_bird.superhero.hero_power AS T1 INNER JOIN dataroom_eval_bird.superhero.superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Intelligence'",
    "complexity": "Single Join"
  },
  {
    "query_id": 845,
    "room_id": 716,
    "good_sql": "SELECT T2.colour FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Blackwulf'",
    "complexity": "Single Join"
  },
  {
    "query_id": 846,
    "room_id": 717,
    "good_sql": "SELECT T3.power_name FROM dataroom_eval_bird.superhero.superhero AS T1 INNER JOIN dataroom_eval_bird.superhero.hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN dataroom_eval_bird.superhero.superpower AS T3 ON T2.power_id = T3.id WHERE T1.height_cm * 100 > ( SELECT AVG(height_cm) FROM dataroom_eval_bird.superhero.superhero ) * 80",
    "complexity": "Single Join, Multiple Joins, Subqueries"
  },
  {
    "query_id": 847,
    "room_id": 718,
    "good_sql": "SELECT T2.driverRef FROM dataroom_eval_bird.formula_1.qualifying AS T1 INNER JOIN dataroom_eval_bird.formula_1.drivers AS T2 ON T2.driverId = T1.driverId WHERE T1.raceId = 18 ORDER BY T1.q1 DESC LIMIT 5",
    "complexity": "Single Join"
  },
  {
    "query_id": 848,
    "room_id": 719,
    "good_sql": "SELECT T2.surname FROM dataroom_eval_bird.formula_1.qualifying AS T1 INNER JOIN dataroom_eval_bird.formula_1.drivers AS T2 ON T2.driverId = T1.driverId WHERE T1.raceId = 19 AND T1.q2 IS NOT NULL ORDER BY T1.q2 ASC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 849,
    "room_id": 720,
    "good_sql": "SELECT T2.year FROM dataroom_eval_bird.formula_1.circuits AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.location = 'Shanghai'",
    "complexity": "Single Join"
  },
  {
    "query_id": 850,
    "room_id": 721,
    "good_sql": "SELECT DISTINCT T1.url FROM dataroom_eval_bird.formula_1.circuits AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.name = 'Circuit de Barcelona-Catalunya'",
    "complexity": "Single Join"
  },
  {
    "query_id": 851,
    "room_id": 722,
    "good_sql": "SELECT DISTINCT T2.name FROM dataroom_eval_bird.formula_1.circuits AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.country = 'Germany'",
    "complexity": "Single Join"
  },
  {
    "query_id": 852,
    "room_id": 723,
    "good_sql": "SELECT DISTINCT T1.position FROM dataroom_eval_bird.formula_1.constructorstandings AS T1 INNER JOIN dataroom_eval_bird.formula_1.constructors AS T2 ON T2.constructorId = T1.constructorId WHERE T2.name = 'Renault'",
    "complexity": "Single Join"
  },
  {
    "query_id": 853,
    "room_id": 724,
    "good_sql": "SELECT COUNT(T3.raceId) FROM dataroom_eval_bird.formula_1.circuits AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T3 ON T3.circuitID = T1.circuitId WHERE NOT T1.country IN ('Bahrain', 'China', 'Singapore', 'Japan', 'Korea', 'Turkey', 'UAE', 'Malaysia', 'Spain', 'Monaco', 'Azerbaijan', 'Austria', 'Belgium', 'France', 'Germany', 'Hungary', 'Italy', 'UK') AND T3.year = 2010",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 854,
    "room_id": 725,
    "good_sql": "SELECT DISTINCT T2.name FROM dataroom_eval_bird.formula_1.circuits AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.country = 'Spain'",
    "complexity": "Single Join"
  },
  {
    "query_id": 855,
    "room_id": 726,
    "good_sql": "SELECT DISTINCT T1.lat, T1.lng FROM dataroom_eval_bird.formula_1.circuits AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T2.circuitID = T1.circuitId WHERE T2.name = 'Australian Grand Prix'",
    "complexity": "Basic SQL, Single Join"
  },
  {
    "query_id": 856,
    "room_id": 727,
    "good_sql": "SELECT DISTINCT T1.url FROM dataroom_eval_bird.formula_1.circuits AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.name = 'Sepang International Circuit'",
    "complexity": "Single Join"
  },
  {
    "query_id": 857,
    "room_id": 724,
    "good_sql": "SELECT DISTINCT T2.time FROM dataroom_eval_bird.formula_1.circuits AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.name = 'Sepang International Circuit'",
    "complexity": "Single Join"
  },
  {
    "query_id": 858,
    "room_id": 728,
    "good_sql": "SELECT DISTINCT T1.lat, T1.lng, T1.location FROM dataroom_eval_bird.formula_1.circuits AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T2.circuitID = T1.circuitId WHERE T2.name = 'Abu Dhabi Grand Prix'",
    "complexity": "Basic SQL, Single Join"
  },
  {
    "query_id": 859,
    "room_id": 729,
    "good_sql": "SELECT T2.nationality FROM dataroom_eval_bird.formula_1.constructorresults AS T1 INNER JOIN dataroom_eval_bird.formula_1.constructors AS T2 ON T2.constructorId = T1.constructorId WHERE T1.raceId = 24 AND T1.points = 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 860,
    "room_id": 729,
    "good_sql": "SELECT T1.q1 FROM dataroom_eval_bird.formula_1.qualifying AS T1 INNER JOIN dataroom_eval_bird.formula_1.drivers AS T2 ON T2.driverId = T1.driverId WHERE T1.raceId = 354 AND T2.forename = 'Bruno' AND T2.surname = 'Senna'",
    "complexity": "Single Join"
  },
  {
    "query_id": 861,
    "room_id": 729,
    "good_sql": "SELECT DISTINCT T2.nationality FROM dataroom_eval_bird.formula_1.qualifying AS T1 INNER JOIN dataroom_eval_bird.formula_1.drivers AS T2 ON T2.driverId = T1.driverId WHERE T1.raceId = 355 AND T1.q2 LIKE '1:40%'",
    "complexity": "Single Join"
  },
  {
    "query_id": 862,
    "room_id": 729,
    "good_sql": "SELECT T2.number FROM dataroom_eval_bird.formula_1.qualifying AS T1 INNER JOIN dataroom_eval_bird.formula_1.drivers AS T2 ON T2.driverId = T1.driverId WHERE T1.raceId = 903 AND T1.q3 LIKE '1:54%'",
    "complexity": "Single Join"
  },
  {
    "query_id": 863,
    "room_id": 730,
    "good_sql": "SELECT COUNT(T3.driverId) FROM dataroom_eval_bird.formula_1.races AS T1 INNER JOIN dataroom_eval_bird.formula_1.results AS T2 ON T2.raceId = T1.raceId INNER JOIN dataroom_eval_bird.formula_1.drivers AS T3 ON T3.driverId = T2.driverId WHERE T1.year = 2007 AND T1.name = 'Bahrain Grand Prix' AND T2.time IS NULL",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 864,
    "room_id": 729,
    "good_sql": "SELECT T2.url FROM dataroom_eval_bird.formula_1.races AS T1 INNER JOIN dataroom_eval_bird.formula_1.seasons AS T2 ON T2.year = T1.year WHERE T1.raceId = 901",
    "complexity": "Single Join"
  },
  {
    "query_id": 865,
    "room_id": 731,
    "good_sql": "SELECT COUNT(T2.driverId) FROM dataroom_eval_bird.formula_1.races AS T1 INNER JOIN dataroom_eval_bird.formula_1.results AS T2 ON T2.raceId = T1.raceId WHERE T1.date = '2015-11-29' AND T2.time IS NOT NULL",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 866,
    "room_id": 732,
    "good_sql": "SELECT T1.forename, T1.surname FROM dataroom_eval_bird.formula_1.drivers AS T1 INNER JOIN dataroom_eval_bird.formula_1.results AS T2 ON T2.driverId = T1.driverId WHERE T2.raceId = 592 AND T2.time IS NOT NULL AND T1.dob IS NOT NULL ORDER BY T1.dob ASC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 867,
    "room_id": 733,
    "good_sql": "SELECT DISTINCT T2.forename, T2.surname, T2.url FROM dataroom_eval_bird.formula_1.laptimes AS T1 INNER JOIN dataroom_eval_bird.formula_1.drivers AS T2 ON T2.driverId = T1.driverId WHERE T1.raceId = 161 AND T1.time LIKE '1:27%'",
    "complexity": "Single Join"
  },
  {
    "query_id": 868,
    "room_id": 734,
    "good_sql": "SELECT T1.nationality FROM dataroom_eval_bird.formula_1.drivers AS T1 INNER JOIN dataroom_eval_bird.formula_1.results AS T2 ON T2.driverId = T1.driverId WHERE T2.raceId = 933 AND T2.fastestLapTime IS NOT NULL ORDER BY T2.fastestLapSpeed DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 869,
    "room_id": 726,
    "good_sql": "SELECT DISTINCT T1.lat, T1.lng FROM dataroom_eval_bird.formula_1.circuits AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T2.circuitID = T1.circuitId WHERE T2.name = 'Malaysian Grand Prix'",
    "complexity": "Basic SQL, Single Join"
  },
  {
    "query_id": 870,
    "room_id": 735,
    "good_sql": "SELECT T2.url FROM dataroom_eval_bird.formula_1.constructorresults AS T1 INNER JOIN dataroom_eval_bird.formula_1.constructors AS T2 ON T2.constructorId = T1.constructorId WHERE T1.raceId = 9 ORDER BY T1.points DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 871,
    "room_id": 729,
    "good_sql": "SELECT T1.q1 FROM dataroom_eval_bird.formula_1.qualifying AS T1 INNER JOIN dataroom_eval_bird.formula_1.drivers AS T2 ON T2.driverId = T1.driverId WHERE T1.raceId = 345 AND T2.forename = 'Lucas' AND T2.surname = 'di Grassi'",
    "complexity": "Single Join"
  },
  {
    "query_id": 872,
    "room_id": 729,
    "good_sql": "SELECT DISTINCT T2.nationality FROM dataroom_eval_bird.formula_1.qualifying AS T1 INNER JOIN dataroom_eval_bird.formula_1.drivers AS T2 ON T2.driverId = T1.driverId WHERE T1.raceId = 347 AND T1.q2 LIKE '1:15%'",
    "complexity": "Single Join"
  },
  {
    "query_id": 873,
    "room_id": 729,
    "good_sql": "SELECT T2.code FROM dataroom_eval_bird.formula_1.qualifying AS T1 INNER JOIN dataroom_eval_bird.formula_1.drivers AS T2 ON T2.driverId = T1.driverId WHERE T1.raceId = 45 AND T1.q3 LIKE '1:33%'",
    "complexity": "Single Join"
  },
  {
    "query_id": 874,
    "room_id": 729,
    "good_sql": "SELECT T2.time FROM dataroom_eval_bird.formula_1.drivers AS T1 INNER JOIN dataroom_eval_bird.formula_1.results AS T2 ON T2.driverId = T1.driverId WHERE T2.raceId = 743 AND T1.forename = 'Bruce' AND T1.surname = 'McLaren'",
    "complexity": "Single Join"
  },
  {
    "query_id": 875,
    "room_id": 736,
    "good_sql": "SELECT T3.forename, T3.surname FROM dataroom_eval_bird.formula_1.races AS T1 INNER JOIN dataroom_eval_bird.formula_1.results AS T2 ON T2.raceId = T1.raceId INNER JOIN dataroom_eval_bird.formula_1.drivers AS T3 ON T3.driverId = T2.driverId WHERE T1.year = 2006 AND T1.name = 'San Marino Grand Prix' AND T2.position = 2",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 876,
    "room_id": 729,
    "good_sql": "SELECT T2.url FROM dataroom_eval_bird.formula_1.races AS T1 INNER JOIN dataroom_eval_bird.formula_1.seasons AS T2 ON T2.year = T1.year WHERE T1.raceId = 901",
    "complexity": "Single Join"
  },
  {
    "query_id": 877,
    "room_id": 724,
    "good_sql": "SELECT COUNT(T2.driverId) FROM dataroom_eval_bird.formula_1.races AS T1 INNER JOIN dataroom_eval_bird.formula_1.results AS T2 ON T2.raceId = T1.raceId WHERE T1.date = '2015-11-29' AND T2.time IS NOT NULL",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 878,
    "room_id": 737,
    "good_sql": "SELECT T1.forename, T1.surname FROM dataroom_eval_bird.formula_1.drivers AS T1 INNER JOIN dataroom_eval_bird.formula_1.results AS T2 ON T2.driverId = T1.driverId WHERE T2.raceId = 872 AND T2.time IS NOT NULL ORDER BY T1.dob DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 879,
    "room_id": 738,
    "good_sql": "SELECT T2.forename, T2.surname FROM dataroom_eval_bird.formula_1.laptimes AS T1 INNER JOIN dataroom_eval_bird.formula_1.drivers AS T2 ON T2.driverId = T1.driverId WHERE T1.raceId = 348 ORDER BY T1.time ASC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 880,
    "room_id": 739,
    "good_sql": "SELECT T1.nationality FROM dataroom_eval_bird.formula_1.drivers AS T1 INNER JOIN dataroom_eval_bird.formula_1.results AS T2 ON T2.driverId = T1.driverId WHERE T2.fastestLapTime IS NOT NULL ORDER BY T2.fastestLapSpeed DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 881,
    "room_id": 740,
    "good_sql": "SELECT (SUM(IF(T2.raceId = 853, T2.fastestLapSpeed, 0)) - SUM(IF(T2.raceId = 854, T2.fastestLapSpeed, 0))) * 100 / SUM(IF(T2.raceId = 853, T2.fastestLapSpeed, 0)) FROM dataroom_eval_bird.formula_1.drivers AS T1 INNER JOIN dataroom_eval_bird.formula_1.results AS T2 ON T2.driverId = T1.driverId WHERE T1.forename = 'Paul' AND T1.surname = 'di Resta'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 882,
    "room_id": 741,
    "good_sql": "SELECT CAST(COUNT(CASE WHEN T2.time IS NOT NULL THEN T2.driverId END) AS REAL) * 100 / COUNT(T2.driverId) FROM dataroom_eval_bird.formula_1.races AS T1 INNER JOIN dataroom_eval_bird.formula_1.results AS T2 ON T2.raceId = T1.raceId WHERE T1.date = '1983-07-16'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 883,
    "room_id": 742,
    "good_sql": "SELECT year FROM dataroom_eval_bird.formula_1.races WHERE name = 'Singapore Grand Prix' ORDER BY year ASC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 884,
    "room_id": 724,
    "good_sql": "SELECT name FROM dataroom_eval_bird.formula_1.races WHERE year = 2005 ORDER BY name DESC",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 885,
    "room_id": 743,
    "good_sql": "SELECT name FROM dataroom_eval_bird.formula_1.races WHERE DATE_FORMAT(CAST(date AS TIMESTAMP), 'yyyy') = (SELECT DATE_FORMAT(CAST(date AS TIMESTAMP), 'yyyy') FROM dataroom_eval_bird.formula_1.races ORDER BY date ASC LIMIT 1) AND DATE_FORMAT(CAST(date AS TIMESTAMP), 'MM') = (SELECT DATE_FORMAT(CAST(date AS TIMESTAMP), 'MM') FROM dataroom_eval_bird.formula_1.races ORDER BY date ASC LIMIT 1)",
    "complexity": "Subqueries"
  },
  {
    "query_id": 886,
    "room_id": 744,
    "good_sql": "SELECT name, date FROM dataroom_eval_bird.formula_1.races WHERE year = 1999 ORDER BY round DESC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 887,
    "room_id": 745,
    "good_sql": "SELECT year FROM dataroom_eval_bird.formula_1.races GROUP BY year ORDER BY COUNT(round) DESC LIMIT 1",
    "complexity": "Aggregation"
  },
  {
    "query_id": 888,
    "room_id": 746,
    "good_sql": "SELECT name FROM dataroom_eval_bird.formula_1.races WHERE year = 2017 AND NOT name IN (SELECT name FROM dataroom_eval_bird.formula_1.races WHERE year = 2000)",
    "complexity": "Subqueries"
  },
  {
    "query_id": 889,
    "room_id": 747,
    "good_sql": "SELECT T1.country, T1.location FROM dataroom_eval_bird.formula_1.circuits AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T2.circuitID = T1.circuitId WHERE T2.name = 'European Grand Prix' ORDER BY T2.year ASC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 890,
    "room_id": 748,
    "good_sql": "SELECT T2.date FROM dataroom_eval_bird.formula_1.circuits AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.name = 'Brands Hatch' AND T2.name = 'British Grand Prix' ORDER BY T2.year DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 891,
    "room_id": 749,
    "good_sql": "SELECT COUNT(T2.circuitid) FROM dataroom_eval_bird.formula_1.circuits AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.name = 'Silverstone Circuit' AND T2.name = 'British Grand Prix'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 892,
    "room_id": 724,
    "good_sql": "SELECT T3.forename, T3.surname FROM dataroom_eval_bird.formula_1.races AS T1 INNER JOIN dataroom_eval_bird.formula_1.driverstandings AS T2 ON T2.raceId = T1.raceId INNER JOIN dataroom_eval_bird.formula_1.drivers AS T3 ON T3.driverId = T2.driverId WHERE T1.name = 'Singapore Grand Prix' AND T1.year = 2010 ORDER BY T2.position ASC",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 893,
    "room_id": 750,
    "good_sql": "SELECT T3.forename, T3.surname, T2.points FROM dataroom_eval_bird.formula_1.races AS T1 INNER JOIN dataroom_eval_bird.formula_1.driverstandings AS T2 ON T2.raceId = T1.raceId INNER JOIN dataroom_eval_bird.formula_1.drivers AS T3 ON T3.driverId = T2.driverId ORDER BY T2.points DESC LIMIT 1",
    "complexity": "Single Join, Multiple Joins"
  },
  {
    "query_id": 894,
    "room_id": 724,
    "good_sql": "SELECT T3.forename, T3.surname, T2.points FROM dataroom_eval_bird.formula_1.races AS T1 INNER JOIN dataroom_eval_bird.formula_1.driverstandings AS T2 ON T2.raceId = T1.raceId INNER JOIN dataroom_eval_bird.formula_1.drivers AS T3 ON T3.driverId = T2.driverId WHERE T1.name = 'Chinese Grand Prix' AND T1.year = 2017 ORDER BY T2.points DESC LIMIT 3",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 895,
    "room_id": 751,
    "good_sql": "SELECT T2.milliseconds, T1.forename, T1.surname, T3.name FROM dataroom_eval_bird.formula_1.drivers AS T1 INNER JOIN dataroom_eval_bird.formula_1.laptimes AS T2 ON T1.driverId = T2.driverId INNER JOIN dataroom_eval_bird.formula_1.races AS T3 ON T2.raceId = T3.raceId ORDER BY T2.milliseconds ASC LIMIT 1",
    "complexity": "Single Join, Multiple Joins"
  },
  {
    "query_id": 896,
    "room_id": 752,
    "good_sql": "SELECT AVG(T2.milliseconds) FROM dataroom_eval_bird.formula_1.races AS T1 INNER JOIN dataroom_eval_bird.formula_1.laptimes AS T2 ON T2.raceId = T1.raceId INNER JOIN dataroom_eval_bird.formula_1.drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.forename = 'Sebastian' AND T3.surname = 'Vettel' AND T1.year = 2009 AND T1.name = 'Chinese GrAND Prix'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 897,
    "room_id": 753,
    "good_sql": "SELECT CAST(COUNT(CASE WHEN T2.position != 1 THEN T2.position END) AS REAL) * 100 / COUNT(T2.driverStandingsId) FROM dataroom_eval_bird.formula_1.races AS T1 INNER JOIN dataroom_eval_bird.formula_1.driverstandings AS T2 ON T2.raceId = T1.raceId INNER JOIN dataroom_eval_bird.formula_1.drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.surname = 'Hamilton' AND T1.year >= 2010",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 898,
    "room_id": 754,
    "good_sql": "SELECT T1.forename, T1.surname, T1.nationality, AVG(T2.points) FROM dataroom_eval_bird.formula_1.drivers AS T1 INNER JOIN dataroom_eval_bird.formula_1.driverstandings AS T2 ON T2.driverId = T1.driverId WHERE T2.wins = 1 GROUP BY T1.forename, T1.surname, T1.nationality ORDER BY COUNT(T2.wins) DESC LIMIT 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 899,
    "room_id": 755,
    "good_sql": "SELECT DATE_FORMAT(CAST(CURRENT_TIMESTAMP() AS TIMESTAMP), 'yyyy') - DATE_FORMAT(CAST(dob AS TIMESTAMP), 'yyyy'), forename, surname FROM dataroom_eval_bird.formula_1.drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 900,
    "room_id": 756,
    "good_sql": "SELECT DISTINCT T1.name FROM dataroom_eval_bird.formula_1.circuits AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T2.circuitID = T1.circuitId WHERE DATE_FORMAT(CAST(T2.date AS TIMESTAMP), 'yyyy') BETWEEN '1990' AND '2000' GROUP BY T1.name HAVING COUNT(T2.raceId) = 4",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 901,
    "room_id": 724,
    "good_sql": "SELECT T1.name, T1.location, T2.name FROM dataroom_eval_bird.formula_1.circuits AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.country = 'USA' AND T2.year = 2006",
    "complexity": "Single Join"
  },
  {
    "query_id": 902,
    "room_id": 757,
    "good_sql": "SELECT DISTINCT T2.name, T1.name, T1.location FROM dataroom_eval_bird.formula_1.circuits AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T2.circuitID = T1.circuitId WHERE T2.year = 2005 AND DATE_FORMAT(CAST(T2.date AS TIMESTAMP), 'MM') = '09'",
    "complexity": "Single Join"
  },
  {
    "query_id": 903,
    "room_id": 758,
    "good_sql": "SELECT T1.name FROM dataroom_eval_bird.formula_1.races AS T1 INNER JOIN dataroom_eval_bird.formula_1.driverstandings AS T2 ON T2.raceId = T1.raceId INNER JOIN dataroom_eval_bird.formula_1.drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.forename = 'Alex' AND T3.surname = 'Yoong' AND T2.position < 10",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 904,
    "room_id": 759,
    "good_sql": "SELECT SUM(T2.wins) FROM dataroom_eval_bird.formula_1.drivers AS T1 INNER JOIN dataroom_eval_bird.formula_1.driverstandings AS T2 ON T2.driverId = T1.driverId INNER JOIN dataroom_eval_bird.formula_1.races AS T3 ON T3.raceId = T2.raceId INNER JOIN dataroom_eval_bird.formula_1.circuits AS T4 ON T4.circuitId = T3.circuitId WHERE T1.forename = 'Michael' AND T1.surname = 'Schumacher' AND T4.name = 'Sepang International Circuit'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 905,
    "room_id": 760,
    "good_sql": "SELECT T1.name, T1.year FROM dataroom_eval_bird.formula_1.races AS T1 INNER JOIN dataroom_eval_bird.formula_1.laptimes AS T2 ON T2.raceId = T1.raceId INNER JOIN dataroom_eval_bird.formula_1.drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.forename = 'Michael' AND T3.surname = 'Schumacher' ORDER BY T2.milliseconds ASC LIMIT 1",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 906,
    "room_id": 761,
    "good_sql": "SELECT AVG(T2.points) FROM dataroom_eval_bird.formula_1.drivers AS T1 INNER JOIN dataroom_eval_bird.formula_1.driverstandings AS T2 ON T2.driverId = T1.driverId INNER JOIN dataroom_eval_bird.formula_1.races AS T3 ON T3.raceId = T2.raceId WHERE T1.forename = 'Eddie' AND T1.surname = 'Irvine' AND T3.year = 2000",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 907,
    "room_id": 762,
    "good_sql": "SELECT T1.name, T2.points FROM dataroom_eval_bird.formula_1.races AS T1 INNER JOIN dataroom_eval_bird.formula_1.driverstandings AS T2 ON T2.raceId = T1.raceId INNER JOIN dataroom_eval_bird.formula_1.drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' ORDER BY T1.year ASC LIMIT 1",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 908,
    "room_id": 724,
    "good_sql": "SELECT subquery.name, subquery.country\nFROM (\n  SELECT DISTINCT T2.name, T1.country, T2.date \n  FROM dataroom_eval_bird.formula_1.circuits AS T1 \n  INNER JOIN dataroom_eval_bird.formula_1.races AS T2 \n  ON T2.circuitID = T1.circuitId \n  WHERE T2.year = 2017\n  ORDER BY T2.date ASC\n) AS subquery\nORDER BY subquery.date ASC",
    "complexity": "Subqueries, Single Join"
  },
  {
    "query_id": 909,
    "room_id": 724,
    "good_sql": "SELECT T3.lap, T2.name, T2.year, T1.location FROM dataroom_eval_bird.formula_1.circuits AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T1.circuitId = T2.circuitId INNER JOIN dataroom_eval_bird.formula_1.laptimes AS T3 ON T3.raceId = T2.raceId ORDER BY T3.lap DESC LIMIT 1",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 910,
    "room_id": 763,
    "good_sql": "SELECT CAST(COUNT(CASE WHEN T1.country = 'Germany' THEN T2.circuitID END) AS REAL) * 100 / COUNT(T2.circuitId) FROM dataroom_eval_bird.formula_1.circuits AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T2.circuitID = T1.circuitId WHERE T2.name = 'European Grand Prix'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 911,
    "room_id": 764,
    "good_sql": "SELECT lat, lng FROM dataroom_eval_bird.formula_1.circuits WHERE name = 'Silverstone Circuit'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 912,
    "room_id": 765,
    "good_sql": "SELECT name FROM dataroom_eval_bird.formula_1.circuits WHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY lat DESC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 913,
    "room_id": 766,
    "good_sql": "SELECT circuitRef FROM dataroom_eval_bird.formula_1.circuits WHERE name = 'Marina Bay Street Circuit'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 914,
    "room_id": 767,
    "good_sql": "SELECT country FROM dataroom_eval_bird.formula_1.circuits ORDER BY alt DESC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 915,
    "room_id": 768,
    "good_sql": "SELECT COUNT(driverId) - COUNT(CASE WHEN code IS NOT NULL THEN code END) FROM dataroom_eval_bird.formula_1.drivers",
    "complexity": "Aggregation"
  },
  {
    "query_id": 916,
    "room_id": 769,
    "good_sql": "SELECT nationality FROM dataroom_eval_bird.formula_1.drivers WHERE dob IS NOT NULL ORDER BY dob ASC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 917,
    "room_id": 770,
    "good_sql": "SELECT surname FROM dataroom_eval_bird.formula_1.drivers WHERE nationality = 'Italian'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 918,
    "room_id": 771,
    "good_sql": "SELECT url FROM dataroom_eval_bird.formula_1.drivers WHERE forename = 'Anthony' AND surname = 'Davidson'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 919,
    "room_id": 772,
    "good_sql": "SELECT driverRef FROM dataroom_eval_bird.formula_1.drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 920,
    "room_id": 724,
    "good_sql": "SELECT T1.name FROM dataroom_eval_bird.formula_1.circuits AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T2.circuitID = T1.circuitId WHERE T2.year = 2009 AND T2.name = 'Spanish Grand Prix'",
    "complexity": "Single Join"
  },
  {
    "query_id": 921,
    "room_id": 724,
    "good_sql": "SELECT DISTINCT T2.year FROM dataroom_eval_bird.formula_1.circuits AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.name = 'Silverstone Circuit'",
    "complexity": "Single Join"
  },
  {
    "query_id": 922,
    "room_id": 773,
    "good_sql": "SELECT DISTINCT T1.url FROM dataroom_eval_bird.formula_1.circuits AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.name = 'Silverstone Circuit'",
    "complexity": "Single Join"
  },
  {
    "query_id": 923,
    "room_id": 724,
    "good_sql": "SELECT T2.date, T2.time FROM dataroom_eval_bird.formula_1.circuits AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T2.circuitID = T1.circuitId WHERE T2.year = 2010 AND T2.name = 'Abu Dhabi Grand Prix'",
    "complexity": "Single Join"
  },
  {
    "query_id": 924,
    "room_id": 724,
    "good_sql": "SELECT COUNT(T2.circuitId) FROM dataroom_eval_bird.formula_1.circuits AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.country = 'Italy'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 925,
    "room_id": 724,
    "good_sql": "SELECT T2.date FROM dataroom_eval_bird.formula_1.circuits AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.name = 'Circuit de Barcelona-Catalunya'",
    "complexity": "Single Join"
  },
  {
    "query_id": 926,
    "room_id": 774,
    "good_sql": "SELECT T1.url FROM dataroom_eval_bird.formula_1.circuits AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T2.circuitID = T1.circuitId WHERE T2.year = 2009 AND T2.name = 'Spanish Grand Prix'",
    "complexity": "Single Join"
  },
  {
    "query_id": 927,
    "room_id": 775,
    "good_sql": "SELECT T2.fastestLapTime FROM dataroom_eval_bird.formula_1.drivers AS T1 INNER JOIN dataroom_eval_bird.formula_1.results AS T2 ON T2.driverId = T1.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.fastestLapTime IS NOT NULL ORDER BY T2.fastestLapTime ASC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 928,
    "room_id": 724,
    "good_sql": "SELECT T1.forename, T1.surname FROM dataroom_eval_bird.formula_1.drivers AS T1 INNER JOIN dataroom_eval_bird.formula_1.results AS T2 ON T2.driverId = T1.driverId WHERE T2.fastestLapTime IS NOT NULL ORDER BY T2.fastestLapSpeed DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 929,
    "room_id": 772,
    "good_sql": "SELECT T3.forename, T3.surname, T3.driverRef FROM dataroom_eval_bird.formula_1.races AS T1 INNER JOIN dataroom_eval_bird.formula_1.results AS T2 ON T2.raceId = T1.raceId INNER JOIN dataroom_eval_bird.formula_1.drivers AS T3 ON T3.driverId = T2.driverId WHERE T1.name = 'Australian Grand Prix' AND T2.rank = 1 AND T1.year = 2008",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 930,
    "room_id": 724,
    "good_sql": "SELECT T1.name FROM dataroom_eval_bird.formula_1.races AS T1 INNER JOIN dataroom_eval_bird.formula_1.results AS T2 ON T2.raceId = T1.raceId INNER JOIN dataroom_eval_bird.formula_1.drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 931,
    "room_id": 776,
    "good_sql": "SELECT name FROM dataroom_eval_bird.formula_1.races WHERE raceId IN ( SELECT raceId FROM dataroom_eval_bird.formula_1.results WHERE rank = 1 AND driverId = ( SELECT driverId FROM dataroom_eval_bird.formula_1.drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' ) )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 932,
    "room_id": 777,
    "good_sql": "SELECT T2.fastestLapSpeed FROM dataroom_eval_bird.formula_1.races AS T1 INNER JOIN dataroom_eval_bird.formula_1.results AS T2 ON T2.raceId = T1.raceId WHERE T1.name = 'Spanish Grand Prix' AND T1.year = 2009 AND T2.fastestLapSpeed IS NOT NULL ORDER BY T2.fastestLapSpeed DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 933,
    "room_id": 724,
    "good_sql": "SELECT DISTINCT T1.year FROM dataroom_eval_bird.formula_1.races AS T1 INNER JOIN dataroom_eval_bird.formula_1.results AS T2 ON T2.raceId = T1.raceId INNER JOIN dataroom_eval_bird.formula_1.drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton'",
    "complexity": "Single Join, Multiple Joins"
  },
  {
    "query_id": 934,
    "room_id": 778,
    "good_sql": "SELECT T2.positionOrder FROM dataroom_eval_bird.formula_1.races AS T1 INNER JOIN dataroom_eval_bird.formula_1.results AS T2 ON T2.raceId = T1.raceId INNER JOIN dataroom_eval_bird.formula_1.drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' AND T1.name = 'Australian Grand Prix' AND T1.year = 2008",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 935,
    "room_id": 779,
    "good_sql": "SELECT T3.forename, T3.surname FROM dataroom_eval_bird.formula_1.races AS T1 INNER JOIN dataroom_eval_bird.formula_1.results AS T2 ON T2.raceId = T1.raceId INNER JOIN dataroom_eval_bird.formula_1.drivers AS T3 ON T3.driverId = T2.driverId WHERE T2.grid = 4 AND T1.name = 'Australian Grand Prix' AND T1.year = 2008",
    "complexity": "Single Join, Multiple Joins"
  },
  {
    "query_id": 936,
    "room_id": 780,
    "good_sql": "SELECT COUNT(T2.driverId) FROM dataroom_eval_bird.formula_1.races AS T1 INNER JOIN dataroom_eval_bird.formula_1.results AS T2 ON T2.raceId = T1.raceId WHERE T1.name = 'Australian Grand Prix' AND T1.year = 2008 AND T2.time IS NOT NULL",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 937,
    "room_id": 724,
    "good_sql": "SELECT T1.fastestLap FROM dataroom_eval_bird.formula_1.results AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T1.raceId = T2.raceId INNER JOIN dataroom_eval_bird.formula_1.drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.name = 'Australian Grand Prix' AND T2.year = 2008 AND T3.forename = 'Lewis' AND T3.surname = 'Hamilton'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 938,
    "room_id": 781,
    "good_sql": "SELECT T1.time FROM dataroom_eval_bird.formula_1.results AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T1.raceId = T2.raceId WHERE T1.rank = 2 AND T2.name = 'Australian Grand Prix' AND T2.year = 2008",
    "complexity": "Single Join"
  },
  {
    "query_id": 939,
    "room_id": 782,
    "good_sql": "SELECT T1.forename, T1.surname, T1.url FROM dataroom_eval_bird.formula_1.drivers AS T1 INNER JOIN dataroom_eval_bird.formula_1.results AS T2 ON T1.driverId = T2.driverId INNER JOIN dataroom_eval_bird.formula_1.races AS T3 ON T3.raceId = T2.raceId WHERE T3.name = 'Australian Grand Prix' AND T2.time LIKE '_:%:__.___' AND T3.year = 2008",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 940,
    "room_id": 783,
    "good_sql": "SELECT COUNT(*) FROM dataroom_eval_bird.formula_1.drivers AS T1 INNER JOIN dataroom_eval_bird.formula_1.results AS T2 ON T1.driverId = T2.driverId INNER JOIN dataroom_eval_bird.formula_1.races AS T3 ON T3.raceId = T2.raceId WHERE T3.name = 'Australian GrAND Prix' AND T1.nationality = 'American' AND T3.year = 2008",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 941,
    "room_id": 784,
    "good_sql": "SELECT COUNT(*) FROM (SELECT T1.driverId FROM dataroom_eval_bird.formula_1.results AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Australian Grand Prix' AND T2.year = 2008 AND T1.time IS NOT NULL GROUP BY T1.driverId HAVING COUNT(T2.raceId) > 0)",
    "complexity": "Subqueries, Single Join, Aggregation"
  },
  {
    "query_id": 942,
    "room_id": 724,
    "good_sql": "SELECT SUM(T2.points) FROM dataroom_eval_bird.formula_1.drivers AS T1 INNER JOIN dataroom_eval_bird.formula_1.results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 943,
    "room_id": 785,
    "good_sql": "SELECT AVG(CAST(SUBSTRING(T2.fastestLapTime, 1, INSTR(T2.fastestLapTime, ':') - 1) AS INT) * 60 + CAST(SUBSTRING(T2.fastestLapTime, INSTR(T2.fastestLapTime, ':') + 1) AS REAL)) FROM dataroom_eval_bird.formula_1.drivers AS T1 INNER JOIN dataroom_eval_bird.formula_1.results AS T2 ON T1.driverId = T2.driverId WHERE T1.surname = 'Hamilton' AND T1.forename = 'Lewis'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 944,
    "room_id": 786,
    "good_sql": "SELECT CAST(SUM(IF(T1.time IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.resultId) FROM dataroom_eval_bird.formula_1.results AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Australian GrAND Prix' AND T2.year = 2008",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 945,
    "room_id": 787,
    "good_sql": "WITH time_in_seconds AS (SELECT T1.positionOrder, CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTRING(T1.time, 1, 1) AS REAL) * 3600) + (CAST(SUBSTRING(T1.time, 3, 2) AS REAL) * 60) + CAST(SUBSTRING(T1.time, 6) AS REAL) ELSE CAST(SUBSTRING(T1.time, 2) AS REAL) END AS time_seconds FROM dataroom_eval_bird.formula_1.results AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Australian Grand Prix' AND T1.time IS NOT NULL AND T2.year = 2008), champion_time AS (SELECT time_seconds FROM time_in_seconds WHERE positionOrder = 1), last_driver_incremental AS (SELECT time_seconds FROM time_in_seconds WHERE positionOrder = (SELECT MAX(positionOrder) FROM time_in_seconds)) SELECT (CAST((SELECT time_seconds FROM last_driver_incremental) AS REAL) * 100) / (SELECT time_seconds + (SELECT time_seconds FROM last_driver_incremental) FROM champion_time)",
    "complexity": "Subqueries, Single Join"
  },
  {
    "query_id": 946,
    "room_id": 788,
    "good_sql": "SELECT COUNT(circuitId) FROM dataroom_eval_bird.formula_1.circuits WHERE location = 'Melbourne' AND country = 'Australia'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 947,
    "room_id": 789,
    "good_sql": "SELECT lat, lng FROM dataroom_eval_bird.formula_1.circuits WHERE country = 'USA'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 948,
    "room_id": 790,
    "good_sql": "SELECT COUNT(driverId) FROM dataroom_eval_bird.formula_1.drivers WHERE nationality = 'British' AND DATE_FORMAT(CAST(dob AS TIMESTAMP), 'yyyy') > '1980'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 949,
    "room_id": 791,
    "good_sql": "SELECT AVG(T1.points) FROM dataroom_eval_bird.formula_1.constructorstandings AS T1 INNER JOIN dataroom_eval_bird.formula_1.constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.nationality = 'British'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 950,
    "room_id": 724,
    "good_sql": "SELECT T2.name FROM dataroom_eval_bird.formula_1.constructorstandings AS T1 INNER JOIN dataroom_eval_bird.formula_1.constructors AS T2 ON T1.constructorId = T2.constructorId ORDER BY T1.points DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 951,
    "room_id": 792,
    "good_sql": "SELECT T2.name FROM dataroom_eval_bird.formula_1.constructorstandings AS T1 INNER JOIN dataroom_eval_bird.formula_1.constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.points = 0 AND T1.raceId = 291",
    "complexity": "Single Join"
  },
  {
    "query_id": 952,
    "room_id": 793,
    "good_sql": "SELECT COUNT(T1.raceId) FROM dataroom_eval_bird.formula_1.constructorstandings AS T1 INNER JOIN dataroom_eval_bird.formula_1.constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.points = 0 AND T2.nationality = 'Japanese' GROUP BY T1.constructorId HAVING COUNT(raceId) = 2",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 953,
    "room_id": 724,
    "good_sql": "SELECT DISTINCT T2.name FROM dataroom_eval_bird.formula_1.results AS T1 INNER JOIN dataroom_eval_bird.formula_1.constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.rank = 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 954,
    "room_id": 794,
    "good_sql": "SELECT COUNT(DISTINCT T2.constructorId) FROM dataroom_eval_bird.formula_1.results AS T1 INNER JOIN dataroom_eval_bird.formula_1.constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.laps > 50 AND T2.nationality = 'French'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 955,
    "room_id": 795,
    "good_sql": "SELECT CAST(SUM(IF(T1.time IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.raceId) FROM dataroom_eval_bird.formula_1.results AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T1.raceId = T2.raceId INNER JOIN dataroom_eval_bird.formula_1.drivers AS T3 ON T1.driverId = T3.driverId WHERE T3.nationality = 'Japanese' AND T2.year BETWEEN 2007 AND 2009",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 956,
    "room_id": 796,
    "good_sql": "WITH time_in_seconds AS (SELECT T2.year, T2.raceId, T1.positionOrder, CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTRING(T1.time, 1, 1) AS REAL) * 3600) + (CAST(SUBSTRING(T1.time, 3, 2) AS REAL) * 60) + CAST(SUBSTRING(T1.time, 6) AS REAL) ELSE CAST(SUBSTRING(T1.time, 2) AS REAL) END AS time_seconds FROM dataroom_eval_bird.formula_1.results AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T1.raceId = T2.raceId WHERE T1.time IS NOT NULL), champion_time AS (SELECT year, raceId, time_seconds FROM time_in_seconds WHERE positionOrder = 1) SELECT year, AVG(time_seconds) FROM champion_time GROUP BY year HAVING AVG(time_seconds) IS NOT NULL",
    "complexity": "Subqueries, Aggregation, Single Join"
  },
  {
    "query_id": 957,
    "room_id": 797,
    "good_sql": "SELECT T2.forename, T2.surname FROM dataroom_eval_bird.formula_1.results AS T1 INNER JOIN dataroom_eval_bird.formula_1.drivers AS T2 ON T1.driverId = T2.driverId WHERE DATE_FORMAT(CAST(T2.dob AS TIMESTAMP), 'yyyy') > '1975' AND T1.rank = 2",
    "complexity": "Single Join"
  },
  {
    "query_id": 958,
    "room_id": 798,
    "good_sql": "SELECT COUNT(T1.driverId) FROM dataroom_eval_bird.formula_1.results AS T1 INNER JOIN dataroom_eval_bird.formula_1.drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.nationality = 'Italian' AND T1.time IS NULL",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 959,
    "room_id": 724,
    "good_sql": "SELECT T2.forename, T2.surname, T1.fastestLapTime FROM dataroom_eval_bird.formula_1.results AS T1 INNER JOIN dataroom_eval_bird.formula_1.drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.fastestLapTime IS NOT NULL ORDER BY T1.fastestLapTime ASC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 960,
    "room_id": 799,
    "good_sql": "SELECT T1.fastestLap FROM dataroom_eval_bird.formula_1.results AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2009 AND T1.time LIKE '_:%:__.___'",
    "complexity": "Single Join"
  },
  {
    "query_id": 961,
    "room_id": 800,
    "good_sql": "SELECT AVG(T1.fastestLapSpeed) FROM dataroom_eval_bird.formula_1.results AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2009 AND T2.name = 'Spanish Grand Prix'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 962,
    "room_id": 801,
    "good_sql": "SELECT T1.name, T1.year FROM dataroom_eval_bird.formula_1.races AS T1 INNER JOIN dataroom_eval_bird.formula_1.results AS T2 ON T1.raceId = T2.raceId WHERE T2.milliseconds IS NOT NULL ORDER BY T2.milliseconds LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 963,
    "room_id": 802,
    "good_sql": "SELECT CAST(SUM(IF(DATE_FORMAT(CAST(T3.dob AS TIMESTAMP), 'yyyy') < '1985' AND T1.laps > 50, 1, 0)) AS REAL) * 100 / COUNT(*) FROM dataroom_eval_bird.formula_1.results AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T1.raceId = T2.raceId INNER JOIN dataroom_eval_bird.formula_1.drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.year BETWEEN 2000 AND 2005",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 964,
    "room_id": 803,
    "good_sql": "SELECT COUNT(T1.driverId) FROM dataroom_eval_bird.formula_1.drivers AS T1 INNER JOIN dataroom_eval_bird.formula_1.laptimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'French' AND (CAST(SUBSTRING(T2.time, 1, 2) AS INT) * 60 + CAST(SUBSTRING(T2.time, 4, 2) AS INT) + CAST(SUBSTRING(T2.time, 7, 2) AS REAL) / 1000) < 120",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 965,
    "room_id": 804,
    "good_sql": "SELECT code FROM dataroom_eval_bird.formula_1.drivers WHERE Nationality = 'American'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 966,
    "room_id": 724,
    "good_sql": "SELECT raceId FROM dataroom_eval_bird.formula_1.races WHERE year = 2009",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 967,
    "room_id": 724,
    "good_sql": "SELECT COUNT(driverId) FROM dataroom_eval_bird.formula_1.driverstandings WHERE raceId = 18",
    "complexity": "Aggregation"
  },
  {
    "query_id": 968,
    "room_id": 805,
    "good_sql": "SELECT COUNT(*) \nFROM (\n    SELECT T1.nationality \n    FROM dataroom_eval_bird.formula_1.drivers AS T1 \n    ORDER BY T1.dob DESC \n    LIMIT 3\n) AS T3 \nWHERE T3.nationality = 'Dutch'",
    "complexity": "Subqueries"
  },
  {
    "query_id": 969,
    "room_id": 806,
    "good_sql": "SELECT driverRef FROM dataroom_eval_bird.formula_1.drivers WHERE forename = 'Robert' AND surname = 'Kubica'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 970,
    "room_id": 807,
    "good_sql": "SELECT COUNT(driverId) FROM dataroom_eval_bird.formula_1.drivers WHERE nationality = 'Australian' AND DATE_FORMAT(CAST(dob AS TIMESTAMP), 'yyyy') = '1980'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 971,
    "room_id": 808,
    "good_sql": "SELECT T2.driverId FROM dataroom_eval_bird.formula_1.pitstops AS T1 INNER JOIN dataroom_eval_bird.formula_1.drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.nationality = 'German' AND DATE_FORMAT(CAST(T2.dob AS TIMESTAMP), 'yyyy') BETWEEN '1980' AND '1990' ORDER BY T1.time LIMIT 3",
    "complexity": "Single Join"
  },
  {
    "query_id": 972,
    "room_id": 809,
    "good_sql": "SELECT driverRef \nFROM dataroom_eval_bird.formula_1.drivers \nWHERE nationality = 'German' \nORDER BY dob ASC \nLIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 973,
    "room_id": 810,
    "good_sql": "SELECT T2.driverId, T2.code FROM dataroom_eval_bird.formula_1.results AS T1 INNER JOIN dataroom_eval_bird.formula_1.drivers AS T2 ON T1.driverId = T2.driverId WHERE DATE_FORMAT(CAST(T2.dob AS TIMESTAMP), 'yyyy') = '1971' AND T1.fastestLapTime IS NOT NULL",
    "complexity": "Single Join"
  },
  {
    "query_id": 974,
    "room_id": 811,
    "good_sql": "SELECT T2.driverId FROM dataroom_eval_bird.formula_1.pitstops AS T1 INNER JOIN dataroom_eval_bird.formula_1.drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.nationality = 'Spanish' AND DATE_FORMAT(CAST(T2.dob AS TIMESTAMP), 'yyyy') < '1982' ORDER BY T1.time DESC LIMIT 10",
    "complexity": "Single Join"
  },
  {
    "query_id": 975,
    "room_id": 812,
    "good_sql": "SELECT T2.year FROM dataroom_eval_bird.formula_1.results AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T1.raceId = T2.raceId WHERE T1.fastestLapTime IS NOT NULL",
    "complexity": "Single Join"
  },
  {
    "query_id": 976,
    "room_id": 813,
    "good_sql": "SELECT T2.year FROM dataroom_eval_bird.formula_1.laptimes AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T1.raceId = T2.raceId ORDER BY T1.time DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 977,
    "room_id": 814,
    "good_sql": "SELECT driverId FROM dataroom_eval_bird.formula_1.laptimes WHERE lap = 1 ORDER BY time LIMIT 5",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 978,
    "room_id": 815,
    "good_sql": "SELECT SUM(IF(time IS NOT NULL, 1, 0)) FROM dataroom_eval_bird.formula_1.results WHERE statusId = 2 AND raceID < 100 AND raceId > 50",
    "complexity": "Aggregation"
  },
  {
    "query_id": 979,
    "room_id": 816,
    "good_sql": "SELECT DISTINCT location, lat, lng FROM dataroom_eval_bird.formula_1.circuits WHERE country = 'Austria'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 980,
    "room_id": 817,
    "good_sql": "SELECT raceId FROM dataroom_eval_bird.formula_1.results GROUP BY raceId ORDER BY COUNT(time IS NOT NULL) DESC LIMIT 1",
    "complexity": "Aggregation"
  },
  {
    "query_id": 981,
    "room_id": 818,
    "good_sql": "SELECT T2.driverRef, T2.nationality, T2.dob FROM dataroom_eval_bird.formula_1.qualifying AS T1 INNER JOIN dataroom_eval_bird.formula_1.drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 23 AND T1.q2 IS NOT NULL",
    "complexity": "Single Join"
  },
  {
    "query_id": 982,
    "room_id": 819,
    "good_sql": "SELECT T3.year, T3.name, T3.date, T3.time FROM dataroom_eval_bird.formula_1.qualifying AS T1 INNER JOIN dataroom_eval_bird.formula_1.drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN dataroom_eval_bird.formula_1.races AS T3 ON T1.raceId = T3.raceId WHERE T1.driverId = (SELECT driverId FROM dataroom_eval_bird.formula_1.drivers ORDER BY dob DESC LIMIT 1) ORDER BY T3.date ASC LIMIT 1",
    "complexity": "Single Join, Subqueries"
  },
  {
    "query_id": 983,
    "room_id": 820,
    "good_sql": "SELECT COUNT(T1.driverId) FROM dataroom_eval_bird.formula_1.drivers AS T1 INNER JOIN dataroom_eval_bird.formula_1.results AS T2 ON T1.driverId = T2.driverId INNER JOIN dataroom_eval_bird.formula_1.status AS T3 ON T2.statusId = T3.statusId WHERE T3.status = 2 AND T1.nationality = 'American'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 984,
    "room_id": 821,
    "good_sql": "SELECT T1.url FROM dataroom_eval_bird.formula_1.constructors AS T1 INNER JOIN dataroom_eval_bird.formula_1.constructorstandings AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'Italian' ORDER BY T2.points DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 985,
    "room_id": 822,
    "good_sql": "SELECT T1.url FROM dataroom_eval_bird.formula_1.constructors AS T1 INNER JOIN dataroom_eval_bird.formula_1.constructorstandings AS T2 ON T1.constructorId = T2.constructorId ORDER BY T2.wins DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 986,
    "room_id": 823,
    "good_sql": "SELECT T1.driverId FROM dataroom_eval_bird.formula_1.laptimes AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'French Grand Prix' AND T1.lap = 3 ORDER BY T1.time DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 987,
    "room_id": 824,
    "good_sql": "SELECT T1.milliseconds FROM dataroom_eval_bird.formula_1.laptimes AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T1.raceId = T2.raceId WHERE T1.lap = 1 ORDER BY T1.time LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 988,
    "room_id": 825,
    "good_sql": "SELECT AVG(T1.fastestLapTime) FROM dataroom_eval_bird.formula_1.results AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T1.raceId = T2.raceId WHERE T1.rank < 11 AND T2.year = 2006 AND T2.name = 'United States GrAND Prix'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 989,
    "room_id": 826,
    "good_sql": "SELECT T2.forename, T2.surname FROM dataroom_eval_bird.formula_1.pitstops AS T1 INNER JOIN dataroom_eval_bird.formula_1.drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.nationality = 'German' AND DATE_FORMAT(CAST(T2.dob AS TIMESTAMP), 'yyyy') BETWEEN '1980' AND '1985' GROUP BY T2.forename, T2.surname ORDER BY AVG(T1.duration) LIMIT 5",
    "complexity": "Single Join, Aggregation"
  },
  {
    "query_id": 990,
    "room_id": 827,
    "good_sql": "SELECT T1.time FROM dataroom_eval_bird.formula_1.results AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Canadian Grand Prix' AND T2.year = 2008 AND T1.time LIKE '_:%:__.___'",
    "complexity": "Single Join"
  },
  {
    "query_id": 991,
    "room_id": 828,
    "good_sql": "SELECT T3.constructorRef, T3.url FROM dataroom_eval_bird.formula_1.results AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T1.raceId = T2.raceId INNER JOIN dataroom_eval_bird.formula_1.constructors AS T3 ON T1.constructorId = T3.constructorId WHERE T2.name = 'Singapore Grand Prix' AND T2.year = 2009 AND T1.time LIKE '_:%:__.___'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 992,
    "room_id": 829,
    "good_sql": "SELECT forename, surname, dob FROM dataroom_eval_bird.formula_1.drivers WHERE nationality = 'Austrian' AND DATE_FORMAT(CAST(dob AS TIMESTAMP), 'yyyy') BETWEEN '1981' AND '1991'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 993,
    "room_id": 830,
    "good_sql": "SELECT forename, surname, url, dob FROM dataroom_eval_bird.formula_1.drivers WHERE nationality = 'German' AND DATE_FORMAT(CAST(dob AS TIMESTAMP), 'yyyy') BETWEEN '1971' AND '1985' ORDER BY dob DESC",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 994,
    "room_id": 831,
    "good_sql": "SELECT country, lat, lng FROM dataroom_eval_bird.formula_1.circuits WHERE name = 'Hungaroring'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 995,
    "room_id": 832,
    "good_sql": "SELECT SUM(T1.points), T2.name, ANY_VALUE(T2.nationality) FROM dataroom_eval_bird.formula_1.constructorresults AS T1 INNER JOIN dataroom_eval_bird.formula_1.constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN dataroom_eval_bird.formula_1.races AS T3 ON T3.raceid = T1.raceid WHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 GROUP BY T2.name ORDER BY SUM(T1.points) DESC LIMIT 1",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 996,
    "room_id": 833,
    "good_sql": "SELECT AVG(T2.points) FROM dataroom_eval_bird.formula_1.drivers AS T1 INNER JOIN dataroom_eval_bird.formula_1.driverstandings AS T2 ON T1.driverId = T2.driverId INNER JOIN dataroom_eval_bird.formula_1.races AS T3 ON T3.raceId = T2.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T3.name = 'Turkish Grand Prix'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 997,
    "room_id": 834,
    "good_sql": "SELECT CAST(SUM(CASE WHEN year BETWEEN 2000 AND 2010 THEN 1 ELSE 0 END) AS REAL) / 10 FROM dataroom_eval_bird.formula_1.races WHERE date BETWEEN '2000-01-01' AND '2010-12-31'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 998,
    "room_id": 835,
    "good_sql": "SELECT nationality FROM dataroom_eval_bird.formula_1.drivers GROUP BY nationality ORDER BY COUNT(driverId) DESC LIMIT 1",
    "complexity": "Aggregation"
  },
  {
    "query_id": 999,
    "room_id": 836,
    "good_sql": "SELECT SUM(CASE WHEN points = 91 THEN wins ELSE 0 END) FROM dataroom_eval_bird.formula_1.driverstandings",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1000,
    "room_id": 837,
    "good_sql": "SELECT T1.name FROM dataroom_eval_bird.formula_1.races AS T1 INNER JOIN dataroom_eval_bird.formula_1.results AS T2 ON T1.raceId = T2.raceId WHERE T2.fastestLapTime IS NOT NULL ORDER BY T2.fastestLapTime ASC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1001,
    "room_id": 838,
    "good_sql": "SELECT T1.location FROM dataroom_eval_bird.formula_1.circuits AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T1.circuitId = T2.circuitId ORDER BY T2.date DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1002,
    "room_id": 839,
    "good_sql": "SELECT T2.forename, T2.surname FROM dataroom_eval_bird.formula_1.qualifying AS T1 INNER JOIN dataroom_eval_bird.formula_1.drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN dataroom_eval_bird.formula_1.races AS T3 ON T1.raceid = T3.raceid WHERE q3 IS NOT NULL AND T3.year = 2008 AND T3.circuitId IN (SELECT circuitId FROM dataroom_eval_bird.formula_1.circuits WHERE name = 'Marina Bay Street Circuit') ORDER BY CAST(SUBSTRING(q3, 1, INSTR(q3, ':') - 1) AS INT) * 60 + CAST(SUBSTRING(q3, INSTR(q3, ':') + 1, INSTR(q3, '.') - INSTR(q3, ':') - 1) AS REAL) + CAST(SUBSTRING(q3, INSTR(q3, '.') + 1) AS REAL) / 1000 ASC LIMIT 1",
    "complexity": "Multiple Joins, Subqueries"
  },
  {
    "query_id": 1003,
    "room_id": 840,
    "good_sql": "SELECT T1.forename, T1.surname, T1.nationality, T3.name FROM dataroom_eval_bird.formula_1.drivers AS T1 INNER JOIN dataroom_eval_bird.formula_1.driverstandings AS T2 ON T1.driverId = T2.driverId INNER JOIN dataroom_eval_bird.formula_1.races AS T3 ON T2.raceId = T3.raceId ORDER BY T1.dob DESC LIMIT 1",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1004,
    "room_id": 841,
    "good_sql": "SELECT COUNT(T1.driverId) FROM dataroom_eval_bird.formula_1.results AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T1.raceId = T2.raceId INNER JOIN dataroom_eval_bird.formula_1.status AS T3 ON T1.statusId = T3.statusId WHERE T3.statusId = 3 AND T2.name = 'Canadian Grand Prix' GROUP BY T1.driverId ORDER BY COUNT(T1.driverId) DESC LIMIT 1",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 1005,
    "room_id": 842,
    "good_sql": "SELECT wins_sum\nFROM (\n    SELECT SUM(T1.wins) AS wins_sum, T2.forename, T2.surname, T2.dob\n    FROM dataroom_eval_bird.formula_1.driverstandings AS T1\n    INNER JOIN dataroom_eval_bird.formula_1.drivers AS T2 ON T1.driverId = T2.driverId\n    GROUP BY T2.forename, T2.surname, T2.dob\n    ORDER BY T2.dob ASC\n    LIMIT 1\n) AS subquery",
    "complexity": "Aggregation, Single Join, Subqueries"
  },
  {
    "query_id": 1006,
    "room_id": 843,
    "good_sql": "SELECT duration FROM dataroom_eval_bird.formula_1.pitstops ORDER BY duration DESC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1007,
    "room_id": 724,
    "good_sql": "SELECT time FROM dataroom_eval_bird.formula_1.laptimes ORDER BY (CASE WHEN INSTR(time, ':') != INSTR(SUBSTRING(time, INSTR(time, ':') + 1), ':') + INSTR(time, ':') THEN CAST(SUBSTRING(time, 1, INSTR(time, ':') - 1) AS REAL) * 3600 ELSE 0 END) + (CAST(SUBSTRING(time, INSTR(time, ':') - 2 * CASE WHEN INSTR(time, ':') = INSTR(SUBSTRING(time, INSTR(time, ':') + 1), ':') + INSTR(time, ':') THEN 1 ELSE 0 END, INSTR(time, ':') - 1) AS REAL) * 60) + (CAST(SUBSTRING(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL)) + (CAST(SUBSTRING(time, INSTR(time, '.') + 1) AS REAL) / 1000) ASC LIMIT 1",
    "complexity": "Other"
  },
  {
    "query_id": 1008,
    "room_id": 844,
    "good_sql": "SELECT T1.duration FROM dataroom_eval_bird.formula_1.pitstops AS T1 INNER JOIN dataroom_eval_bird.formula_1.drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' ORDER BY T1.duration DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1009,
    "room_id": 724,
    "good_sql": "SELECT T1.lap FROM dataroom_eval_bird.formula_1.pitstops AS T1 INNER JOIN dataroom_eval_bird.formula_1.drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN dataroom_eval_bird.formula_1.races AS T3 ON T1.raceId = T3.raceId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T3.year = 2011 AND T3.name = 'Australian Grand Prix'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1010,
    "room_id": 845,
    "good_sql": "SELECT T1.duration FROM dataroom_eval_bird.formula_1.pitstops AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2011 AND T2.name = 'Australian Grand Prix'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1011,
    "room_id": 846,
    "good_sql": "SELECT T1.time FROM dataroom_eval_bird.formula_1.laptimes AS T1 INNER JOIN dataroom_eval_bird.formula_1.drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1012,
    "room_id": 847,
    "good_sql": "WITH lap_times_in_seconds AS (SELECT driverId, (CASE WHEN INSTR(time, ':') != INSTR(SUBSTRING(time, INSTR(time, ':') + 1), ':') + INSTR(time, ':') THEN CAST(SUBSTRING(time, 1, INSTR(time, ':') - 1) AS REAL) * 3600 ELSE 0 END) + (CAST(SUBSTRING(time, INSTR(time, ':') - 2 * (CASE WHEN INSTR(time, ':') = INSTR(SUBSTRING(time, INSTR(time, ':') + 1), ':') + INSTR(time, ':') THEN 1 ELSE 0 END), INSTR(time, ':') - 1) AS REAL) * 60) + (CAST(SUBSTRING(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL)) + (CAST(SUBSTRING(time, INSTR(time, '.') + 1) AS REAL) / 1000) AS time_in_seconds FROM dataroom_eval_bird.formula_1.laptimes) SELECT T2.forename, T2.surname FROM (SELECT driverId, MIN(time_in_seconds) AS min_time_in_seconds FROM lap_times_in_seconds GROUP BY driverId) AS T1 INNER JOIN dataroom_eval_bird.formula_1.drivers AS T2 ON T1.driverId = T2.driverId ORDER BY T1.min_time_in_seconds ASC LIMIT 1",
    "complexity": "Subqueries, Aggregation, Single Join"
  },
  {
    "query_id": 1013,
    "room_id": 848,
    "good_sql": "SELECT T1.position FROM dataroom_eval_bird.formula_1.laptimes AS T1 INNER JOIN dataroom_eval_bird.formula_1.drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' ORDER BY T1.time ASC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1014,
    "room_id": 849,
    "good_sql": "WITH fastest_lap_times AS (SELECT T1.raceId, T1.fastestLapTime FROM dataroom_eval_bird.formula_1.results AS T1 WHERE T1.FastestLapTime IS NOT NULL) SELECT MIN(fastest_lap_times.fastestLapTime) AS lap_record FROM fastest_lap_times INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON fastest_lap_times.raceId = T2.raceId INNER JOIN dataroom_eval_bird.formula_1.circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T2.name = 'Austrian Grand Prix'",
    "complexity": "Subqueries, Multiple Joins, Aggregation"
  },
  {
    "query_id": 1015,
    "room_id": 849,
    "good_sql": "WITH fastest_lap_times AS (SELECT T1.raceId, T1.FastestLapTime, (CAST(SUBSTRING(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTRING(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTRING(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) AS time_in_seconds FROM dataroom_eval_bird.formula_1.results AS T1 WHERE T1.FastestLapTime IS NOT NULL) SELECT T1.FastestLapTime AS lap_record FROM dataroom_eval_bird.formula_1.results AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T1.raceId = T2.raceId INNER JOIN dataroom_eval_bird.formula_1.circuits AS T3 ON T2.circuitId = T3.circuitId INNER JOIN (SELECT MIN(fastest_lap_times.time_in_seconds) AS min_time_in_seconds FROM fastest_lap_times INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON fastest_lap_times.raceId = T2.raceId INNER JOIN dataroom_eval_bird.formula_1.circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.country = 'Italy') AS T4 ON (CAST(SUBSTRING(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTRING(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTRING(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) = T4.min_time_in_seconds LIMIT 1",
    "complexity": "Multiple Joins, Subqueries"
  },
  {
    "query_id": 1016,
    "room_id": 849,
    "good_sql": "WITH fastest_lap_times AS (SELECT T1.raceId, T1.FastestLapTime, (CAST(SUBSTRING(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTRING(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTRING(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) AS time_in_seconds FROM dataroom_eval_bird.formula_1.results AS T1 WHERE T1.FastestLapTime IS NOT NULL) SELECT T2.name FROM dataroom_eval_bird.formula_1.races AS T2 INNER JOIN dataroom_eval_bird.formula_1.circuits AS T3 ON T2.circuitId = T3.circuitId INNER JOIN dataroom_eval_bird.formula_1.results AS T1 ON T2.raceId = T1.raceId INNER JOIN (SELECT MIN(fastest_lap_times.time_in_seconds) AS min_time_in_seconds FROM fastest_lap_times INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON fastest_lap_times.raceId = T2.raceId INNER JOIN dataroom_eval_bird.formula_1.circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T2.name = 'Austrian Grand Prix') AS T4 ON (CAST(SUBSTRING(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTRING(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTRING(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) = T4.min_time_in_seconds WHERE T2.name = 'Austrian Grand Prix'",
    "complexity": "Multiple Joins, Subqueries"
  },
  {
    "query_id": 1017,
    "room_id": 850,
    "good_sql": "WITH fastest_lap_times AS (SELECT T1.raceId, T1.driverId, T1.FastestLapTime, (CAST(SUBSTRING(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTRING(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTRING(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) AS time_in_seconds FROM dataroom_eval_bird.formula_1.results AS T1 WHERE T1.FastestLapTime IS NOT NULL), lap_record_race AS (SELECT T1.raceId, T1.driverId FROM dataroom_eval_bird.formula_1.results AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T1.raceId = T2.raceId INNER JOIN dataroom_eval_bird.formula_1.circuits AS T3 ON T2.circuitId = T3.circuitId INNER JOIN (SELECT MIN(fastest_lap_times.time_in_seconds) AS min_time_in_seconds FROM fastest_lap_times INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON fastest_lap_times.raceId = T2.raceId INNER JOIN dataroom_eval_bird.formula_1.circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T2.name = 'Austrian Grand Prix') AS T4 ON (CAST(SUBSTRING(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTRING(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTRING(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) = T4.min_time_in_seconds WHERE T2.name = 'Austrian Grand Prix') SELECT T4.duration FROM lap_record_race INNER JOIN dataroom_eval_bird.formula_1.pitstops AS T4 ON lap_record_race.raceId = T4.raceId AND lap_record_race.driverId = T4.driverId",
    "complexity": "Subqueries, Multiple Joins"
  },
  {
    "query_id": 1018,
    "room_id": 851,
    "good_sql": "SELECT T3.lat, T3.lng FROM dataroom_eval_bird.formula_1.laptimes AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T1.raceId = T2.raceId INNER JOIN dataroom_eval_bird.formula_1.circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T1.time = '1:29.488'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1019,
    "room_id": 852,
    "good_sql": "SELECT AVG(milliseconds) FROM dataroom_eval_bird.formula_1.pitstops AS T1 INNER JOIN dataroom_eval_bird.formula_1.drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1020,
    "room_id": 853,
    "good_sql": "SELECT CAST(SUM(T1.milliseconds) AS REAL) / COUNT(T1.lap) FROM dataroom_eval_bird.formula_1.laptimes AS T1 INNER JOIN dataroom_eval_bird.formula_1.races AS T2 ON T1.raceId = T2.raceId INNER JOIN dataroom_eval_bird.formula_1.circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.country = 'Italy'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 1021,
    "room_id": 854,
    "good_sql": "SELECT player_api_id FROM dataroom_eval_bird.european_football_2.player_Attributes ORDER BY overall_rating DESC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1022,
    "room_id": 855,
    "good_sql": "SELECT player_name FROM dataroom_eval_bird.european_football_2.player ORDER BY height DESC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1023,
    "room_id": 856,
    "good_sql": "SELECT preferred_foot FROM dataroom_eval_bird.european_football_2.player_Attributes WHERE potential IS NOT NULL ORDER BY potential ASC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1024,
    "room_id": 857,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.european_football_2.player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND defensive_work_rate = 'low'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1025,
    "room_id": 858,
    "good_sql": "SELECT id FROM dataroom_eval_bird.european_football_2.player_Attributes ORDER BY crossing DESC LIMIT 5",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1026,
    "room_id": 859,
    "good_sql": "SELECT t2.name FROM dataroom_eval_bird.european_football_2.match AS t1 INNER JOIN dataroom_eval_bird.european_football_2.league AS t2 ON t1.league_id = t2.id WHERE t1.season = '2015/2016' GROUP BY t2.name ORDER BY SUM(t1.home_team_goal + t1.away_team_goal) DESC LIMIT 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1027,
    "room_id": 860,
    "good_sql": "SELECT ANY_VALUE(teamDetails.team_long_name) AS team_long_name FROM dataroom_eval_bird.european_football_2.match AS matchData INNER JOIN dataroom_eval_bird.european_football_2.team AS teamDetails ON matchData.home_team_api_id = teamDetails.team_api_id WHERE matchData.season = '2015/2016' AND matchData.home_team_goal - matchData.away_team_goal < 0 GROUP BY matchData.home_team_api_id ORDER BY COUNT(*) ASC LIMIT 1",
    "complexity": "Single Join, Aggregation"
  },
  {
    "query_id": 1028,
    "room_id": 861,
    "good_sql": "SELECT t2.player_name FROM dataroom_eval_bird.european_football_2.player_Attributes AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player AS t2 ON t1.id = t2.id ORDER BY t1.penalties DESC LIMIT 10",
    "complexity": "Single Join"
  },
  {
    "query_id": 1029,
    "room_id": 862,
    "good_sql": "SELECT ANY_VALUE(teamInfo.team_long_name) AS team_long_name FROM dataroom_eval_bird.european_football_2.league AS leagueData INNER JOIN dataroom_eval_bird.european_football_2.match AS matchData ON leagueData.id = matchData.league_id INNER JOIN dataroom_eval_bird.european_football_2.team AS teamInfo ON matchData.away_team_api_id = teamInfo.team_api_id WHERE leagueData.name = 'Scotland Premier League' AND matchData.season = '2009/2010' AND matchData.away_team_goal - matchData.home_team_goal > 0 GROUP BY matchData.away_team_api_id ORDER BY COUNT(*) DESC LIMIT 1",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 1030,
    "room_id": 863,
    "good_sql": "SELECT t1.buildUpPlaySpeed FROM dataroom_eval_bird.european_football_2.team_attributes AS t1 INNER JOIN dataroom_eval_bird.european_football_2.team AS t2 ON t1.team_api_id = t2.team_api_id ORDER BY t1.buildUpPlayDribbling ASC LIMIT 4",
    "complexity": "Single Join"
  },
  {
    "query_id": 1031,
    "room_id": 864,
    "good_sql": "SELECT t2.name FROM dataroom_eval_bird.european_football_2.match AS t1 INNER JOIN dataroom_eval_bird.european_football_2.league AS t2 ON t1.league_id = t2.id WHERE t1.season = '2015/2016' AND t1.home_team_goal = t1.away_team_goal GROUP BY t2.name ORDER BY COUNT(t1.id) DESC LIMIT 1",
    "complexity": "Single Join, Aggregation"
  },
  {
    "query_id": 1032,
    "room_id": 865,
    "good_sql": "SELECT DATEDIFF(DAY, TO_DATE(T2.birthday), CURRENT_DATE) AS age FROM dataroom_eval_bird.european_football_2.player_Attributes AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTRING(t1.`date`, 1, 10) BETWEEN '2013-01-01' AND '2015-12-31' AND t1.sprint_speed >= 97",
    "complexity": "Single Join"
  },
  {
    "query_id": 1033,
    "room_id": 866,
    "good_sql": "SELECT t2.name, COUNT(t1.id) FROM dataroom_eval_bird.european_football_2.match AS t1 INNER JOIN dataroom_eval_bird.european_football_2.league AS t2 ON t1.league_id = t2.id GROUP BY t2.name ORDER BY COUNT(t1.id) DESC LIMIT 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1034,
    "room_id": 867,
    "good_sql": "SELECT SUM(height) / COUNT(id) FROM dataroom_eval_bird.european_football_2.player WHERE SUBSTRING(birthday, 1, 4) BETWEEN '1990' AND '1995'",
    "complexity": "Aggregation, Subqueries"
  },
  {
    "query_id": 1035,
    "room_id": 868,
    "good_sql": "SELECT player_api_id FROM dataroom_eval_bird.european_football_2.player_Attributes WHERE SUBSTRING(`date`, 1, 4) = '2010' ORDER BY overall_rating DESC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1036,
    "room_id": 869,
    "good_sql": "SELECT DISTINCT team_fifa_api_id FROM dataroom_eval_bird.european_football_2.team_attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1037,
    "room_id": 870,
    "good_sql": "SELECT DISTINCT t4.team_long_name FROM dataroom_eval_bird.european_football_2.team_attributes AS t3 INNER JOIN dataroom_eval_bird.european_football_2.team AS t4 ON t3.team_api_id = t4.team_api_id WHERE SUBSTRING(t3.`date`, 1, 4) = '2012' AND t3.buildUpPlayPassing > (SELECT CAST(SUM(t2.buildUpPlayPassing) AS REAL) / COUNT(t1.id) FROM dataroom_eval_bird.european_football_2.team AS t1 INNER JOIN dataroom_eval_bird.european_football_2.team_attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE SUBSTRING(t2.`date`, 1, 4) = '2012')",
    "complexity": "Subqueries, Single Join"
  },
  {
    "query_id": 1038,
    "room_id": 871,
    "good_sql": "SELECT CAST(COUNT(CASE WHEN t2.preferred_foot = 'left' THEN t1.id ELSE NULL END) AS REAL) * 100 / COUNT(t1.id) AS percent FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTRING(t1.birthday, 1, 4) BETWEEN '1987' AND '1992'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1039,
    "room_id": 872,
    "good_sql": "SELECT t1.name, SUM(t2.home_team_goal) + SUM(t2.away_team_goal) FROM dataroom_eval_bird.european_football_2.league AS t1 INNER JOIN dataroom_eval_bird.european_football_2.match AS t2 ON t1.id = t2.league_id GROUP BY t1.name ORDER BY SUM(t2.home_team_goal) + SUM(t2.away_team_goal) ASC LIMIT 5",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1040,
    "room_id": 873,
    "good_sql": "SELECT CAST(SUM(t2.long_shots) AS REAL) / COUNT(t2.`date`) FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Ahmed Samir Farag'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1041,
    "room_id": 874,
    "good_sql": "SELECT ANY_VALUE(t1.player_name) AS player_name FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.height > 180 GROUP BY t1.id ORDER BY CAST(SUM(t2.heading_accuracy) AS REAL) / COUNT(t2.`player_fifa_api_id`) DESC LIMIT 10",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1042,
    "room_id": 875,
    "good_sql": "SELECT t3.team_long_name FROM dataroom_eval_bird.european_football_2.team AS t3 INNER JOIN dataroom_eval_bird.european_football_2.team_attributes AS t4 ON t3.team_api_id = t4.team_api_id WHERE t4.buildUpPlayDribblingClass = 'Normal' AND t4.chanceCreationPassing < (SELECT CAST(SUM(t2.chanceCreationPassing) AS REAL) / COUNT(t1.id) FROM dataroom_eval_bird.european_football_2.team AS t1 INNER JOIN dataroom_eval_bird.european_football_2.team_attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlayDribblingClass = 'Normal' AND SUBSTRING(t2.`date`, 1, 4) = '2014') ORDER BY t4.chanceCreationPassing DESC",
    "complexity": "Single Join, Subqueries"
  },
  {
    "query_id": 1043,
    "room_id": 876,
    "good_sql": "SELECT t1.name FROM dataroom_eval_bird.european_football_2.league AS t1 INNER JOIN dataroom_eval_bird.european_football_2.match AS t2 ON t1.id = t2.league_id WHERE t2.season = '2009/2010' GROUP BY t1.name HAVING (CAST(SUM(t2.home_team_goal) AS REAL) / COUNT(DISTINCT t2.id)) - (CAST(SUM(t2.away_team_goal) AS REAL) / COUNT(DISTINCT t2.id)) > 0",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1044,
    "room_id": 877,
    "good_sql": "SELECT team_short_name FROM dataroom_eval_bird.european_football_2.team WHERE team_long_name = 'Queens Park Rangers'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1045,
    "room_id": 878,
    "good_sql": "SELECT player_name FROM dataroom_eval_bird.european_football_2.player WHERE SUBSTRING(birthday, 1, 7) = '1970-10'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1046,
    "room_id": 879,
    "good_sql": "SELECT DISTINCT t2.attacking_work_rate FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Franco Zennaro'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1047,
    "room_id": 880,
    "good_sql": "SELECT DISTINCT t2.buildUpPlayPositioningClass FROM dataroom_eval_bird.european_football_2.team AS t1 INNER JOIN dataroom_eval_bird.european_football_2.team_attributes AS t2 ON t1.team_fifa_api_id = t2.team_fifa_api_id WHERE t1.team_long_name = 'ADO Den Haag'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1048,
    "room_id": 881,
    "good_sql": "SELECT t2.heading_accuracy FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Francois Affolter' AND SUBSTRING(t2.`date`, 1, 10) = '2014-09-18'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1049,
    "room_id": 882,
    "good_sql": "SELECT t2.overall_rating FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Gabriel Tamas' AND SUBSTRING(t2.`date`, 1, 4) = '2011'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1050,
    "room_id": 883,
    "good_sql": "SELECT COUNT(t2.id) FROM dataroom_eval_bird.european_football_2.league AS t1 INNER JOIN dataroom_eval_bird.european_football_2.match AS t2 ON t1.id = t2.league_id WHERE t2.season = '2015/2016' AND t1.name = 'Scotland Premier League'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1051,
    "room_id": 884,
    "good_sql": "SELECT t2.preferred_foot FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id ORDER BY t1.birthday DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1052,
    "room_id": 885,
    "good_sql": "SELECT DISTINCT(t1.player_name) FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.potential = (SELECT MAX(potential) FROM dataroom_eval_bird.european_football_2.player_Attributes) ",
    "complexity": "Single Join, Subqueries"
  },
  {
    "query_id": 1053,
    "room_id": 886,
    "good_sql": "SELECT COUNT(DISTINCT t1.id) FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.weight < 130 AND t2.preferred_foot = 'left'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1054,
    "room_id": 887,
    "good_sql": "SELECT DISTINCT t1.team_short_name FROM dataroom_eval_bird.european_football_2.team AS t1 INNER JOIN dataroom_eval_bird.european_football_2.team_attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.chanceCreationPassingClass = 'Risky'",
    "complexity": "Basic SQL, Single Join"
  },
  {
    "query_id": 1055,
    "room_id": 879,
    "good_sql": "SELECT DISTINCT t2.defensive_work_rate FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'David Wilson'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1056,
    "room_id": 888,
    "good_sql": "SELECT t1.birthday FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id ORDER BY t2.overall_rating DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1057,
    "room_id": 889,
    "good_sql": "SELECT t2.name FROM dataroom_eval_bird.european_football_2.country AS t1 INNER JOIN dataroom_eval_bird.european_football_2.league AS t2 ON t1.id = t2.country_id WHERE t1.name = 'Netherlands'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1058,
    "room_id": 890,
    "good_sql": "SELECT CAST(SUM(t2.home_team_goal) AS REAL) / COUNT(t2.id) FROM dataroom_eval_bird.european_football_2.country AS t1 INNER JOIN dataroom_eval_bird.european_football_2.match AS t2 ON t1.id = t2.country_id WHERE t1.name = 'Poland' AND t2.season = '2010/2011'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1059,
    "room_id": 891,
    "good_sql": "SELECT A FROM (SELECT AVG(finishing) AS result, 'Max' AS A FROM dataroom_eval_bird.european_football_2.player AS T1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height = (SELECT MAX(height) FROM dataroom_eval_bird.european_football_2.player) UNION SELECT AVG(finishing) AS result, 'Min' AS A FROM dataroom_eval_bird.european_football_2.player AS T1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height = (SELECT MIN(height) FROM dataroom_eval_bird.european_football_2.player)) ORDER BY result DESC LIMIT 1",
    "complexity": "Subqueries, Single Join, Set options"
  },
  {
    "query_id": 1060,
    "room_id": 892,
    "good_sql": "SELECT player_name FROM dataroom_eval_bird.european_football_2.player WHERE height > 180",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1061,
    "room_id": 893,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.european_football_2.player WHERE DATE_FORMAT(CAST(birthday AS TIMESTAMP), 'yyyy') > '1990'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1062,
    "room_id": 894,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.european_football_2.player WHERE weight > 170 AND player_name LIKE 'Adam%'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1063,
    "room_id": 895,
    "good_sql": "SELECT DISTINCT t1.player_name FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.overall_rating > 80 AND SUBSTRING(t2.`date`, 1, 4) BETWEEN '2008' AND '2010'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1064,
    "room_id": 896,
    "good_sql": "SELECT t2.potential FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Aaron Doran'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1065,
    "room_id": 897,
    "good_sql": "SELECT DISTINCT t1.id, t1.player_name FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.preferred_foot = 'left'",
    "complexity": "Basic SQL, Single Join"
  },
  {
    "query_id": 1066,
    "room_id": 894,
    "good_sql": "SELECT DISTINCT t1.team_long_name FROM dataroom_eval_bird.european_football_2.team AS t1 INNER JOIN dataroom_eval_bird.european_football_2.team_attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlaySpeedClass = 'Fast'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1067,
    "room_id": 898,
    "good_sql": "SELECT DISTINCT t2.buildUpPlayPassingClass FROM dataroom_eval_bird.european_football_2.team AS t1 INNER JOIN dataroom_eval_bird.european_football_2.team_attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_short_name = 'CLB'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1068,
    "room_id": 899,
    "good_sql": "SELECT DISTINCT t1.team_short_name FROM dataroom_eval_bird.european_football_2.team AS t1 INNER JOIN dataroom_eval_bird.european_football_2.team_attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlayPassing > 70",
    "complexity": "Single Join"
  },
  {
    "query_id": 1069,
    "room_id": 900,
    "good_sql": "SELECT CAST(SUM(t2.overall_rating) AS REAL) / COUNT(t2.id) FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.height > 170 AND SUBSTRING(t2.`date`, 1, 4) BETWEEN '2010' AND '2015'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1070,
    "room_id": 901,
    "good_sql": "SELECT player_name FROM dataroom_eval_bird.european_football_2.player ORDER BY height ASC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1071,
    "room_id": 902,
    "good_sql": "SELECT t1.name FROM dataroom_eval_bird.european_football_2.country AS t1 INNER JOIN dataroom_eval_bird.european_football_2.league AS t2 ON t1.id = t2.country_id WHERE t2.name = 'Italy Serie A'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1072,
    "room_id": 903,
    "good_sql": "SELECT DISTINCT t1.team_short_name FROM dataroom_eval_bird.european_football_2.team AS t1 INNER JOIN dataroom_eval_bird.european_football_2.team_attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlaySpeed = 31 AND t2.buildUpPlayDribbling = 53 AND t2.buildUpPlayPassing = 32",
    "complexity": "Single Join"
  },
  {
    "query_id": 1073,
    "room_id": 904,
    "good_sql": "SELECT CAST(SUM(t2.overall_rating) AS REAL) / COUNT(t2.id) FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Aaron Doran'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1074,
    "room_id": 905,
    "good_sql": "SELECT COUNT(t2.id) FROM dataroom_eval_bird.european_football_2.league AS t1 INNER JOIN dataroom_eval_bird.european_football_2.match AS t2 ON t1.id = t2.league_id WHERE t1.name = 'Germany 1. Bundesliga' AND SUBSTRING(t2.`date`, 1, 7) BETWEEN '2008-08' AND '2008-10'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1075,
    "room_id": 906,
    "good_sql": "SELECT t1.team_short_name FROM dataroom_eval_bird.european_football_2.team AS t1 INNER JOIN dataroom_eval_bird.european_football_2.match AS t2 ON t1.team_api_id = t2.home_team_api_id WHERE t2.home_team_goal = 10",
    "complexity": "Single Join"
  },
  {
    "query_id": 1076,
    "room_id": 907,
    "good_sql": "SELECT t1.player_name FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.potential = '61' ORDER BY t2.balance DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1077,
    "room_id": 908,
    "good_sql": "SELECT CAST(SUM(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.id ELSE NULL END) - CAST(SUM(CASE WHEN t1.player_name = 'Aaron Appindangoye' THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'Aaron Appindangoye' THEN t2.id ELSE NULL END) FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1078,
    "room_id": 909,
    "good_sql": "SELECT team_long_name FROM dataroom_eval_bird.european_football_2.team WHERE team_short_name = 'GEN'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1079,
    "room_id": 910,
    "good_sql": "SELECT player_name FROM dataroom_eval_bird.european_football_2.player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY birthday ASC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1080,
    "room_id": 855,
    "good_sql": "SELECT player_name FROM dataroom_eval_bird.european_football_2.player ORDER BY height DESC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1081,
    "room_id": 911,
    "good_sql": "SELECT COUNT(player_api_id) FROM dataroom_eval_bird.european_football_2.player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1082,
    "room_id": 912,
    "good_sql": "SELECT t1.name FROM dataroom_eval_bird.european_football_2.country AS t1 INNER JOIN dataroom_eval_bird.european_football_2.league AS t2 ON t1.id = t2.country_id WHERE t2.name = 'Belgium Jupiler League'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1083,
    "room_id": 913,
    "good_sql": "SELECT t2.name FROM dataroom_eval_bird.european_football_2.country AS t1 INNER JOIN dataroom_eval_bird.european_football_2.league AS t2 ON t1.id = t2.country_id WHERE t1.name = 'Germany'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1084,
    "room_id": 914,
    "good_sql": "SELECT t1.player_name FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id ORDER BY t2.overall_rating DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1085,
    "room_id": 915,
    "good_sql": "SELECT COUNT(DISTINCT t1.player_name) FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTRING(t1.birthday, 1, 4) < '1986' AND t2.defensive_work_rate = 'high'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1086,
    "room_id": 916,
    "good_sql": "SELECT t1.player_name, t2.crossing FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ORDER BY t2.crossing DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1087,
    "room_id": 879,
    "good_sql": "SELECT t2.heading_accuracy FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Ariel Borysiuk'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1088,
    "room_id": 917,
    "good_sql": "SELECT COUNT(DISTINCT t1.id) FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.height > 180 AND t2.volleys > 70",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1089,
    "room_id": 918,
    "good_sql": "SELECT DISTINCT t1.player_name FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.volleys > 70 AND t2.dribbling > 70",
    "complexity": "Single Join"
  },
  {
    "query_id": 1090,
    "room_id": 919,
    "good_sql": "SELECT COUNT(t2.id) FROM dataroom_eval_bird.european_football_2.country AS t1 INNER JOIN dataroom_eval_bird.european_football_2.match AS t2 ON t1.id = t2.country_id WHERE t1.name = 'Belgium' AND t2.season = '2008/2009'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1091,
    "room_id": 920,
    "good_sql": "SELECT t2.long_passing FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id ORDER BY t1.birthday ASC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1092,
    "room_id": 921,
    "good_sql": "SELECT COUNT(t2.id) FROM dataroom_eval_bird.european_football_2.league AS t1 INNER JOIN dataroom_eval_bird.european_football_2.match AS t2 ON t1.id = t2.league_id WHERE t1.name = 'Belgium Jupiler League' AND SUBSTRING(t2.`date`, 1, 4) = '2009'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1093,
    "room_id": 922,
    "good_sql": "SELECT t1.name FROM dataroom_eval_bird.european_football_2.league AS t1 INNER JOIN dataroom_eval_bird.european_football_2.match AS t2 ON t1.id = t2.league_id WHERE t2.season = '2008/2009' GROUP BY t1.name ORDER BY COUNT(t2.id) DESC LIMIT 1",
    "complexity": "Single Join, Aggregation"
  },
  {
    "query_id": 1094,
    "room_id": 923,
    "good_sql": "SELECT SUM(t2.overall_rating) / COUNT(t1.id) FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTRING(t1.birthday, 1, 4) < '1986'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1095,
    "room_id": 924,
    "good_sql": "SELECT (SUM(CASE WHEN t1.player_name = 'Ariel Borysiuk' THEN t2.overall_rating ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating ELSE 0 END) FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1096,
    "room_id": 925,
    "good_sql": "SELECT CAST(SUM(t2.buildUpPlaySpeed) AS REAL) / COUNT(t2.id) FROM dataroom_eval_bird.european_football_2.team AS t1 INNER JOIN dataroom_eval_bird.european_football_2.team_attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'Heart of Midlothian'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1097,
    "room_id": 926,
    "good_sql": "SELECT CAST(SUM(t2.overall_rating) AS REAL) / COUNT(t2.id) FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Pietro Marino'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1098,
    "room_id": 927,
    "good_sql": "SELECT SUM(t2.crossing) FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Aaron Lennox'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1099,
    "room_id": 928,
    "good_sql": "SELECT t2.chanceCreationPassing, t2.chanceCreationPassingClass FROM dataroom_eval_bird.european_football_2.team AS t1 INNER JOIN dataroom_eval_bird.european_football_2.team_attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'Ajax' ORDER BY t2.chanceCreationPassing DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1100,
    "room_id": 929,
    "good_sql": "SELECT DISTINCT t2.preferred_foot FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Abdou Diallo'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1101,
    "room_id": 930,
    "good_sql": "SELECT MAX(t2.overall_rating) FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Dorlan Pabon'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1102,
    "room_id": 931,
    "good_sql": "SELECT CAST(SUM(T1.away_team_goal) AS REAL) / COUNT(T1.id) FROM dataroom_eval_bird.european_football_2.match AS T1 INNER JOIN dataroom_eval_bird.european_football_2.team AS T2 ON T1.away_team_api_id = T2.team_api_id INNER JOIN dataroom_eval_bird.european_football_2.country AS T3 ON T1.country_id = T3.id WHERE T2.team_long_name = 'Parma' AND T3.name = 'Italy'",
    "complexity": "Multiple Joins, Aggregation"
  },
  {
    "query_id": 1103,
    "room_id": 932,
    "good_sql": "SELECT t1.player_name FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTRING(t2.`date`, 1, 10) = '2016-06-23' AND t2.overall_rating = 77 ORDER BY t1.birthday ASC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1104,
    "room_id": 933,
    "good_sql": "SELECT t2.overall_rating FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTRING(t2.`date`, 1, 10) = '2016-02-04' AND t1.player_name = 'Aaron Mooy'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1105,
    "room_id": 934,
    "good_sql": "SELECT t2.potential FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTRING(t2.`date`, 1, 10) = '2010-08-30' AND t1.player_name = 'Francesco Parravicini'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1106,
    "room_id": 935,
    "good_sql": "SELECT t2.attacking_work_rate FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTRING(t2.`date`, 1, 10) = '2015-05-01' AND t1.player_name = 'Francesco Migliore'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1107,
    "room_id": 936,
    "good_sql": "SELECT t2.defensive_work_rate FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE SUBSTRING(t2.`date`, 1, 10) = '2013-02-22' AND t1.player_name = 'Kevin Berigaud'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1108,
    "room_id": 937,
    "good_sql": "SELECT `date` FROM ( SELECT t2.crossing, t2.`date` FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE t1.player_name = 'Kevin Constant' ORDER BY t2.crossing DESC) ORDER BY date DESC LIMIT 1",
    "complexity": "Subqueries,Single Join"
  },
  {
    "query_id": 1109,
    "room_id": 938,
    "good_sql": "SELECT t2.buildUpPlaySpeedClass FROM dataroom_eval_bird.european_football_2.team AS t1 INNER JOIN dataroom_eval_bird.european_football_2.team_attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'Willem II' AND SUBSTRING(t2.`date`, 1, 10) = '2011-02-22'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1110,
    "room_id": 939,
    "good_sql": "SELECT t2.buildUpPlayDribblingClass FROM dataroom_eval_bird.european_football_2.team AS t1 INNER JOIN dataroom_eval_bird.european_football_2.team_attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_short_name = 'LEI' AND SUBSTRING(t2.`date`, 1, 10) = '2015-09-10'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1111,
    "room_id": 940,
    "good_sql": "SELECT t2.buildUpPlayPassingClass FROM dataroom_eval_bird.european_football_2.team AS t1 INNER JOIN dataroom_eval_bird.european_football_2.team_attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'FC Lorient' AND SUBSTRING(t2.`date`, 1, 10) = '2010-02-22'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1112,
    "room_id": 941,
    "good_sql": "SELECT t2.chanceCreationPassingClass FROM dataroom_eval_bird.european_football_2.team AS t1 INNER JOIN dataroom_eval_bird.european_football_2.team_attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'PEC Zwolle' AND SUBSTRING(t2.`date`, 1, 10) = '2013-09-20'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1113,
    "room_id": 942,
    "good_sql": "SELECT t2.chanceCreationCrossingClass FROM dataroom_eval_bird.european_football_2.team AS t1 INNER JOIN dataroom_eval_bird.european_football_2.team_attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'Hull City' AND SUBSTRING(t2.`date`, 1, 10) = '2010-02-22'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1114,
    "room_id": 943,
    "good_sql": "SELECT t2.chanceCreationShootingClass FROM dataroom_eval_bird.european_football_2.team AS t1 INNER JOIN dataroom_eval_bird.european_football_2.team_attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'Hannover 96' AND SUBSTRING(t2.`date`, 1, 10) = '2015-09-10'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1115,
    "room_id": 944,
    "good_sql": "SELECT CAST(SUM(t2.overall_rating) AS REAL) / COUNT(t2.id) FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE t1.player_name = 'Marko Arnautovic' AND SUBSTRING(t2.`date`, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1116,
    "room_id": 945,
    "good_sql": "SELECT (SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Jordan Bowery' THEN t2.overall_rating ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating ELSE 0 END) AS LvsJ_percent FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE SUBSTRING(t2.`date`, 1, 10) = '2013-07-12'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1117,
    "room_id": 946,
    "good_sql": "SELECT player_name FROM dataroom_eval_bird.european_football_2.player ORDER BY height DESC LIMIT 5",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1118,
    "room_id": 947,
    "good_sql": "SELECT player_api_id FROM dataroom_eval_bird.european_football_2.player ORDER BY weight DESC LIMIT 10",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1119,
    "room_id": 948,
    "good_sql": "SELECT player_name FROM dataroom_eval_bird.european_football_2.player WHERE CAST(DATEDIFF(DAY, TO_DATE(birthday), CURRENT_DATE) AS REAL) / 365 >= 35",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1120,
    "room_id": 949,
    "good_sql": "SELECT SUM(t2.home_team_goal) FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.match AS t2 ON t1.player_api_id = t2.away_player_9 WHERE t1.player_name = 'Aaron Lennon'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1121,
    "room_id": 950,
    "good_sql": "SELECT SUM(t2.away_team_goal) FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.match AS t2 ON t1.player_api_id = t2.away_player_5 WHERE t1.player_name IN ('Daan Smith', 'Filipe Ferreira')",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1122,
    "room_id": 951,
    "good_sql": "SELECT SUM(t2.home_team_goal) FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.match AS t2 ON t1.player_api_id = t2.away_player_1 WHERE DATEDIFF(DAY, TO_DATE(t1.birthday, 'yyyy-MM-dd'), CURRENT_DATE) < 30 * 365",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1123,
    "room_id": 952,
    "good_sql": "SELECT player_name \nFROM (\n  SELECT DISTINCT t1.player_name, t2.overall_rating \n  FROM dataroom_eval_bird.european_football_2.player AS t1 \n  INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 \n  ON t1.player_api_id = t2.player_api_id\n) AS subquery \nORDER BY subquery.overall_rating DESC \nLIMIT 10",
    "complexity": "Subqueries, Single Join"
  },
  {
    "query_id": 1124,
    "room_id": 953,
    "good_sql": "SELECT subquery.player_name FROM (\n    SELECT DISTINCT \n        t1.player_name, \n        t2.potential \n    FROM \n        dataroom_eval_bird.european_football_2.player AS t1 \n    INNER JOIN \n        dataroom_eval_bird.european_football_2.player_Attributes AS t2 \n    ON \n        t1.player_api_id = t2.player_api_id \n    ORDER BY \n        t2.potential DESC \n    LIMIT 1\n) AS subquery",
    "complexity": "Subqueries, Single Join"
  },
  {
    "query_id": 1125,
    "room_id": 954,
    "good_sql": "SELECT DISTINCT t1.player_name FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.attacking_work_rate = 'high'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1126,
    "room_id": 955,
    "good_sql": "SELECT subquery.player_name FROM (\n  SELECT DISTINCT t1.player_name, t1.birthday FROM dataroom_eval_bird.european_football_2.player AS t1 \n  INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id \n  WHERE t2.finishing = 1 \n  ORDER BY t1.birthday ASC \n  LIMIT 1 \n) AS subquery",
    "complexity": "Subqueries, Single Join"
  },
  {
    "query_id": 1127,
    "room_id": 956,
    "good_sql": "SELECT t3.player_name FROM dataroom_eval_bird.european_football_2.country AS t1 INNER JOIN dataroom_eval_bird.european_football_2.match AS t2 ON t1.id = t2.country_id INNER JOIN dataroom_eval_bird.european_football_2.player AS t3 ON t2.home_player_1 = t3.player_api_id WHERE t1.name = 'Belgium'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1128,
    "room_id": 957,
    "good_sql": "SELECT DISTINCT t4.name FROM dataroom_eval_bird.european_football_2.player_Attributes AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player AS t2 ON t1.player_api_id = t2.player_api_id INNER JOIN dataroom_eval_bird.european_football_2.match AS t3 ON t2.player_api_id = t3.home_player_8 INNER JOIN dataroom_eval_bird.european_football_2.country AS t4 ON t3.country_id = t4.id WHERE t1.vision > 89",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1129,
    "room_id": 958,
    "good_sql": "SELECT t1.name FROM dataroom_eval_bird.european_football_2.country AS t1 INNER JOIN dataroom_eval_bird.european_football_2.match AS t2 ON t1.id = t2.country_id INNER JOIN dataroom_eval_bird.european_football_2.player AS t3 ON t2.home_player_1 = t3.player_api_id GROUP BY t1.name ORDER BY AVG(t3.weight) DESC LIMIT 1",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 1130,
    "room_id": 959,
    "good_sql": "SELECT DISTINCT t1.team_long_name FROM dataroom_eval_bird.european_football_2.team AS t1 INNER JOIN dataroom_eval_bird.european_football_2.team_attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlaySpeedClass = 'Slow'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1131,
    "room_id": 960,
    "good_sql": "SELECT DISTINCT t1.team_short_name FROM dataroom_eval_bird.european_football_2.team AS t1 INNER JOIN dataroom_eval_bird.european_football_2.team_attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.chanceCreationPassingClass = 'Safe'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1132,
    "room_id": 961,
    "good_sql": "SELECT CAST(SUM(T1.height) AS REAL) / COUNT(T1.id) FROM dataroom_eval_bird.european_football_2.player AS T1 INNER JOIN dataroom_eval_bird.european_football_2.match AS T2 ON T1.id = T2.id INNER JOIN dataroom_eval_bird.european_football_2.country AS T3 ON T2.country_id = T3.ID WHERE T3.NAME = 'Italy'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 1133,
    "room_id": 962,
    "good_sql": "SELECT player_name FROM dataroom_eval_bird.european_football_2.player WHERE height > 180 ORDER BY player_name LIMIT 3",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1134,
    "room_id": 963,
    "good_sql": "SELECT COUNT(id) FROM dataroom_eval_bird.european_football_2.player WHERE birthday > '1990' AND player_name LIKE 'Aaron%'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1135,
    "room_id": 964,
    "good_sql": "SELECT SUM(CASE WHEN t1.id = 6 THEN t1.jumping ELSE 0 END) - SUM(CASE WHEN t1.id = 23 THEN t1.jumping ELSE 0 END) FROM dataroom_eval_bird.european_football_2.player_Attributes AS t1",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1136,
    "room_id": 965,
    "good_sql": "SELECT id FROM dataroom_eval_bird.european_football_2.player_Attributes WHERE preferred_foot = 'right' ORDER BY potential DESC LIMIT 3",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1137,
    "room_id": 966,
    "good_sql": "SELECT COUNT(t1.id) FROM dataroom_eval_bird.european_football_2.player_Attributes AS t1 WHERE t1.preferred_foot = 'left' AND t1.crossing = ( SELECT MAX(crossing) FROM dataroom_eval_bird.european_football_2.player_Attributes)",
    "complexity": "Aggregation, Subqueries"
  },
  {
    "query_id": 1138,
    "room_id": 967,
    "good_sql": "SELECT CAST(COUNT(CASE WHEN strength > 80 AND stamina > 80 THEN id ELSE NULL END) AS REAL) * 100 / COUNT(id) FROM dataroom_eval_bird.european_football_2.player_Attributes AS t",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1139,
    "room_id": 879,
    "good_sql": "SELECT name FROM dataroom_eval_bird.european_football_2.country WHERE id IN ( SELECT country_id FROM dataroom_eval_bird.european_football_2.league WHERE name = 'Poland Ekstraklasa' )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 1140,
    "room_id": 968,
    "good_sql": "SELECT t2.home_team_goal, t2.away_team_goal FROM dataroom_eval_bird.european_football_2.league AS t1 INNER JOIN dataroom_eval_bird.european_football_2.match AS t2 ON t1.id = t2.league_id WHERE t1.name = 'Belgium Jupiler League' AND SUBSTRING(t2.`date`, 1, 10) = '2008-09-24'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1141,
    "room_id": 969,
    "good_sql": "SELECT sprint_speed, agility, acceleration FROM dataroom_eval_bird.european_football_2.player_Attributes WHERE player_api_id IN ( SELECT player_api_id FROM dataroom_eval_bird.european_football_2.player WHERE player_name = 'Alexis Blin' )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 1142,
    "room_id": 970,
    "good_sql": "SELECT DISTINCT t1.buildUpPlaySpeedClass FROM dataroom_eval_bird.european_football_2.team_attributes AS t1 INNER JOIN dataroom_eval_bird.european_football_2.team AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.team_long_name = 'KSV Cercle Brugge'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1143,
    "room_id": 971,
    "good_sql": "SELECT COUNT(t2.id) FROM dataroom_eval_bird.european_football_2.league AS t1 INNER JOIN dataroom_eval_bird.european_football_2.match AS t2 ON t1.id = t2.league_id WHERE t1.name = 'Italy Serie A' AND t2.season = '2015/2016'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1144,
    "room_id": 972,
    "good_sql": "SELECT MAX(t2.home_team_goal) FROM dataroom_eval_bird.european_football_2.league AS t1 INNER JOIN dataroom_eval_bird.european_football_2.match AS t2 ON t1.id = t2.league_id WHERE t1.name = 'Netherlands Eredivisie'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1145,
    "room_id": 973,
    "good_sql": "SELECT id, finishing, curve FROM dataroom_eval_bird.european_football_2.player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM dataroom_eval_bird.european_football_2.player ORDER BY weight DESC LIMIT 1 ) LIMIT 1",
    "complexity": "Subqueries"
  },
  {
    "query_id": 1146,
    "room_id": 974,
    "good_sql": "SELECT t1.name FROM dataroom_eval_bird.european_football_2.league AS t1 INNER JOIN dataroom_eval_bird.european_football_2.match AS t2 ON t1.id = t2.league_id WHERE t2.season = '2015/2016' GROUP BY t1.name ORDER BY COUNT(t2.id) DESC LIMIT 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1147,
    "room_id": 975,
    "good_sql": "SELECT t2.team_long_name FROM dataroom_eval_bird.european_football_2.match AS t1 INNER JOIN dataroom_eval_bird.european_football_2.team AS t2 ON t1.away_team_api_id = t2.team_api_id ORDER BY t1.away_team_goal DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1148,
    "room_id": 976,
    "good_sql": "SELECT DISTINCT t1.player_name FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.overall_rating = ( SELECT MAX(overall_rating) FROM dataroom_eval_bird.european_football_2.player_Attributes)",
    "complexity": "Single Join, Subqueries"
  },
  {
    "query_id": 1149,
    "room_id": 977,
    "good_sql": "SELECT CAST(COUNT(CASE WHEN t2.overall_rating > 70 THEN t1.id ELSE NULL END) AS REAL) * 100 / COUNT(t1.id) AS percent FROM dataroom_eval_bird.european_football_2.player AS t1 INNER JOIN dataroom_eval_bird.european_football_2.player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.height < 180",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1150,
    "room_id": 978,
    "good_sql": "SELECT CAST(SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) FROM dataroom_eval_bird.thrombosis_prediction.patient WHERE SEX = 'M'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1151,
    "room_id": 979,
    "good_sql": "SELECT CAST(SUM(CASE WHEN DATE_FORMAT(CAST(Birthday AS TIMESTAMP), 'yyyy') > '1930' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM dataroom_eval_bird.thrombosis_prediction.patient WHERE SEX = 'F'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1152,
    "room_id": 980,
    "good_sql": "SELECT CAST(SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM dataroom_eval_bird.thrombosis_prediction.patient WHERE DATE_FORMAT(CAST(Birthday AS TIMESTAMP), 'yyyy') BETWEEN '1930' AND '1940'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1153,
    "room_id": 981,
    "good_sql": "SELECT SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) / SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) FROM dataroom_eval_bird.thrombosis_prediction.patient WHERE Diagnosis = 'SLE'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1154,
    "room_id": 982,
    "good_sql": "SELECT T1.Diagnosis, T2.Date FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ID = 30609",
    "complexity": "Single Join"
  },
  {
    "query_id": 1155,
    "room_id": 983,
    "good_sql": "SELECT T1.SEX, T1.Birthday, T2.`Examination Date`, T2.Symptoms FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = 163109",
    "complexity": "Single Join"
  },
  {
    "query_id": 1156,
    "room_id": 984,
    "good_sql": "SELECT DISTINCT T1.ID, T1.SEX, T1.Birthday FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH > 500",
    "complexity": "Single Join"
  },
  {
    "query_id": 1157,
    "room_id": 985,
    "good_sql": "SELECT DISTINCT T1.ID, DATE_FORMAT(CAST(CURRENT_TIMESTAMP() AS TIMESTAMP), 'yyyy') - DATE_FORMAT(CAST(T1.Birthday AS TIMESTAMP), 'yyyy') FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T2 ON T1.ID = T2.ID WHERE T2.RVVT = '+'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1158,
    "room_id": 986,
    "good_sql": "SELECT DISTINCT T1.ID, T1.SEX, T1.Diagnosis FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2",
    "complexity": "Single Join"
  },
  {
    "query_id": 1159,
    "room_id": 987,
    "good_sql": "SELECT DISTINCT T1.ID FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE DATE_FORMAT(CAST(T1.Birthday AS TIMESTAMP), 'yyyy') = '1937' AND T2.`T-CHO` >= 250",
    "complexity": "Single Join"
  },
  {
    "query_id": 1160,
    "room_id": 988,
    "good_sql": "SELECT DISTINCT T1.ID, T1.SEX, T1.Diagnosis FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALB < 3.5",
    "complexity": "Single Join"
  },
  {
    "query_id": 1161,
    "room_id": 989,
    "good_sql": "SELECT CAST(SUM(CASE WHEN T1.SEX = 'F' AND (T2.TP < 6.0 OR T2.TP > 8.5) THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1162,
    "room_id": 990,
    "good_sql": "SELECT AVG(T2.`aCL IgG`) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T2 ON T1.ID = T2.ID WHERE DATE_FORMAT(CAST(CURRENT_TIMESTAMP() AS TIMESTAMP), 'yyyy') - DATE_FORMAT(CAST(T1.Birthday AS TIMESTAMP), 'yyyy') >= 50 AND T1.Admission = '+'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1163,
    "room_id": 991,
    "good_sql": "SELECT COUNT(*) FROM dataroom_eval_bird.thrombosis_prediction.patient WHERE DATE_FORMAT(CAST(Description AS TIMESTAMP), 'yyyy') = '1997' AND SEX = 'F' AND Admission = '-'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1164,
    "room_id": 992,
    "good_sql": "SELECT MIN(DATE_FORMAT(CAST(`First Date` AS TIMESTAMP), 'yyyy') - DATE_FORMAT(CAST(Birthday AS TIMESTAMP), 'yyyy')) FROM dataroom_eval_bird.thrombosis_prediction.patient",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1165,
    "room_id": 993,
    "good_sql": "SELECT CAST(SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T2 ON T1.ID = T2.ID WHERE DATE_FORMAT(CAST(T2.`Examination Date` AS TIMESTAMP), 'yyyy') = '1997' AND T2.Thrombosis = 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1166,
    "room_id": 994,
    "good_sql": "SELECT DATE_FORMAT(CAST(MAX(T1.Birthday) AS TIMESTAMP), 'yyyy') - DATE_FORMAT(CAST(MIN(T1.Birthday) AS TIMESTAMP), 'yyyy') FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG >= 200",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1167,
    "room_id": 995,
    "good_sql": "SELECT T2.Symptoms, T1.Diagnosis FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T2 ON T1.ID = T2.ID WHERE T2.Symptoms IS NOT NULL ORDER BY T1.Birthday DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1168,
    "room_id": 996,
    "good_sql": "SELECT CAST(COUNT(T1.ID) AS REAL) / 12 FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE DATE_FORMAT(CAST(T2.Date AS TIMESTAMP), 'yyyy') = '1998' AND T1.SEX = 'M'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1169,
    "room_id": 997,
    "good_sql": "SELECT T1.Date, DATE_FORMAT(CAST(T2.`First Date` AS TIMESTAMP), 'yyyy') - DATE_FORMAT(CAST(T2.Birthday AS TIMESTAMP), 'yyyy') FROM dataroom_eval_bird.thrombosis_prediction.laboratory AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SJS' AND T2.Birthday IS NOT NULL ORDER BY T2.Birthday ASC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1170,
    "room_id": 998,
    "good_sql": "SELECT CAST(SUM(CASE WHEN T2.UA <= 8.0 AND T1.SEX = 'M' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.UA <= 6.5 AND T1.SEX = 'F' THEN 1 ELSE 0 END) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1171,
    "room_id": 999,
    "good_sql": "SELECT COUNT(DISTINCT T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '+' AND DATE_FORMAT(CAST(T2.`Examination Date` AS TIMESTAMP), 'yyyy') - DATE_FORMAT(CAST(T1.`First Date` AS TIMESTAMP), 'yyyy') >= 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1172,
    "room_id": 1000,
    "good_sql": "SELECT COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T2 ON T1.ID = T2.ID WHERE DATE_FORMAT(CAST(T2.`Examination Date` AS TIMESTAMP), 'yyyy') BETWEEN '1990' AND '1993' AND DATE_FORMAT(CAST(T2.`Examination Date` AS TIMESTAMP), 'yyyy') - DATE_FORMAT(CAST(T1.Birthday AS TIMESTAMP), 'yyyy') < '18'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1173,
    "room_id": 1001,
    "good_sql": "SELECT COUNT(DISTINCT T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`T-BIL` >= 2.0 AND T1.SEX = 'M'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1174,
    "room_id": 1002,
    "good_sql": "SELECT T2.Diagnosis FROM dataroom_eval_bird.thrombosis_prediction.examination AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.patient AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY T2.Diagnosis ORDER BY COUNT(T2.Diagnosis) DESC LIMIT 1",
    "complexity": "Single Join, Aggregation"
  },
  {
    "query_id": 1175,
    "room_id": 1003,
    "good_sql": "SELECT AVG('1999' - DATE_FORMAT(CAST(T2.Birthday AS TIMESTAMP), 'yyyy')) FROM dataroom_eval_bird.thrombosis_prediction.laboratory AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.patient AS T2 ON T1.ID = T2.ID WHERE T1.Date BETWEEN '1991-10-01' AND '1991-10-30'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1176,
    "room_id": 1004,
    "good_sql": "SELECT DATE_FORMAT(CAST(T2.Date AS TIMESTAMP), 'yyyy') - DATE_FORMAT(CAST(T1.Birthday AS TIMESTAMP), 'yyyy'), T1.Diagnosis FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID ORDER BY T2.HGB DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1177,
    "room_id": 1005,
    "good_sql": "SELECT ANA FROM dataroom_eval_bird.thrombosis_prediction.examination WHERE ID = 3605340 AND `Examination Date` = '1996-12-02'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1178,
    "room_id": 1006,
    "good_sql": "SELECT CASE WHEN `T-CHO` < 250 THEN 'Normal' ELSE 'Abnormal' END FROM dataroom_eval_bird.thrombosis_prediction.laboratory WHERE ID = 2927464 AND Date = '1995-09-04'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1179,
    "room_id": 1007,
    "good_sql": "SELECT SEX FROM dataroom_eval_bird.thrombosis_prediction.patient WHERE Diagnosis = 'AORTITIS' AND `First Date` IS NOT NULL ORDER BY `First Date` ASC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1180,
    "room_id": 1008,
    "good_sql": "SELECT `aCL IgA`, `aCL IgG`, `aCL IgM` FROM dataroom_eval_bird.thrombosis_prediction.examination WHERE ID IN ( SELECT ID FROM dataroom_eval_bird.thrombosis_prediction.patient WHERE Diagnosis = 'SLE' AND Description = '1994-02-19' ) AND `Examination Date` = '1993-11-12'",
    "complexity": "Subqueries"
  },
  {
    "query_id": 1181,
    "room_id": 1009,
    "good_sql": "SELECT T1.SEX FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE ABS(T2.GPT - 9.0) < 0.01 AND T2.Date = '1992-06-12'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1182,
    "room_id": 1010,
    "good_sql": "SELECT DATE_FORMAT(CAST(T2.Date AS TIMESTAMP), 'yyyy') - DATE_FORMAT(CAST(T1.Birthday AS TIMESTAMP), 'yyyy') FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE ABS(T2.UA - 8.4) < 0.01 AND T2.Date = '1991-10-21'",
    "good_sql_fixed": "SELECT STRFTIME('%Y', T2.Date) - STRFTIME('%Y', T1.Birthday) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE ABS(T2.UA - 8.4) < 0.01 AND T2.Date = '1991-10-21'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1183,
    "room_id": 1011,
    "good_sql": "SELECT COUNT(*) FROM dataroom_eval_bird.thrombosis_prediction.laboratory WHERE ID = (SELECT ID FROM dataroom_eval_bird.thrombosis_prediction.patient WHERE `First Date` = '1991-06-13' AND Diagnosis = 'SJS') AND DATE_FORMAT(CAST(Date AS TIMESTAMP), 'yyyy') = '1995'",
    "complexity": "Subqueries, Aggregation"
  },
  {
    "query_id": 1184,
    "room_id": 1012,
    "good_sql": "SELECT T1.Diagnosis FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = ( SELECT ID FROM dataroom_eval_bird.thrombosis_prediction.examination WHERE `Examination Date` = '1997-01-27' AND Diagnosis = 'SLE' ) AND T2.`Examination Date` = T1.`First Date`",
    "complexity": "Single Join, Subqueries"
  },
  {
    "query_id": 1185,
    "room_id": 1013,
    "good_sql": "SELECT T2.Symptoms FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1959-03-01' AND T2.`Examination Date` = '1993-09-27'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1186,
    "room_id": 1014,
    "good_sql": "SELECT CAST((SUM(CASE WHEN T2.Date LIKE '1981-11-%' THEN T2.`T-CHO` ELSE 0 END) - SUM(CASE WHEN T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END)) AS REAL) / SUM(CASE WHEN T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1959-02-18'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1187,
    "room_id": 1015,
    "good_sql": "SELECT ID FROM dataroom_eval_bird.thrombosis_prediction.examination WHERE `Examination Date` BETWEEN '1997-01-01' AND '1997-12-31' AND Diagnosis = 'Behcet'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1188,
    "room_id": 1016,
    "good_sql": "SELECT DISTINCT ID FROM dataroom_eval_bird.thrombosis_prediction.laboratory WHERE Date BETWEEN '1987-07-06' AND '1996-01-31' AND GPT > 30 AND ALB < 4",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1189,
    "room_id": 1017,
    "good_sql": "SELECT ID FROM dataroom_eval_bird.thrombosis_prediction.patient WHERE DATE_FORMAT(CAST(Birthday AS TIMESTAMP), 'yyyy') = '1964' AND SEX = 'F' AND Admission = '+'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1190,
    "room_id": 1018,
    "good_sql": "SELECT COUNT(*) FROM dataroom_eval_bird.thrombosis_prediction.examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S' AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM dataroom_eval_bird.thrombosis_prediction.examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S')",
    "complexity": "Aggregation, Subqueries"
  },
  {
    "query_id": 1191,
    "room_id": 1019,
    "good_sql": "SELECT CAST(SUM(CASE WHEN UA <= 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM dataroom_eval_bird.thrombosis_prediction.laboratory WHERE `U-PRO` > 0 AND `U-PRO` < 30",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1192,
    "room_id": 1020,
    "good_sql": "SELECT CAST(SUM(CASE WHEN Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM dataroom_eval_bird.thrombosis_prediction.patient WHERE DATE_FORMAT(CAST(`First Date` AS TIMESTAMP), 'yyyy') = '1981' AND SEX = 'M'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1193,
    "room_id": 1021,
    "good_sql": "SELECT DISTINCT T1.ID FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.`T-BIL` < 2.0 AND DATE_FORMAT(CAST(T2.Date AS TIMESTAMP), 'yyyy') = '1991' AND DATE_FORMAT(CAST(T2.Date AS TIMESTAMP), 'MM') = '10'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1194,
    "room_id": 1022,
    "good_sql": "SELECT COUNT(DISTINCT T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T2 ON T1.ID = T2.ID WHERE T2.`ANA Pattern` != 'P' AND DATE_FORMAT(CAST(T1.Birthday AS TIMESTAMP), 'yyyy') BETWEEN '1980' AND '1989' AND T1.SEX = 'F'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1195,
    "room_id": 1023,
    "good_sql": "SELECT T1.SEX FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T2 ON T1.ID = T2.ID INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T3 ON T3.ID = T2.ID WHERE T2.Diagnosis = 'PSS' AND T3.CRP = '2+' AND ABS(T3.CRE - 1.0) < 0.01 AND T3.LDH = 123",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1196,
    "room_id": 1024,
    "good_sql": "SELECT AVG(T2.ALB) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT > 400 AND T1.Diagnosis = 'SLE' AND T1.SEX = 'F'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1197,
    "room_id": 1025,
    "good_sql": "SELECT Symptoms FROM dataroom_eval_bird.thrombosis_prediction.examination WHERE Diagnosis = 'SLE' GROUP BY Symptoms ORDER BY COUNT(Symptoms) DESC LIMIT 1",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1198,
    "room_id": 1026,
    "good_sql": "SELECT `First Date`, Diagnosis FROM dataroom_eval_bird.thrombosis_prediction.patient WHERE ID = 48473",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1199,
    "room_id": 1027,
    "good_sql": "SELECT COUNT(ID) FROM dataroom_eval_bird.thrombosis_prediction.patient WHERE SEX = 'F' AND Diagnosis = 'APS'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1200,
    "room_id": 1028,
    "good_sql": "SELECT COUNT(ID) FROM dataroom_eval_bird.thrombosis_prediction.laboratory WHERE ALB <= 6.0 OR ALB >= 8.5 AND DATE_FORMAT(CAST(Date AS TIMESTAMP), 'yyyy') = '1997'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1201,
    "room_id": 1029,
    "good_sql": "SELECT CAST(SUM(CASE WHEN Diagnosis = 'SLE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM dataroom_eval_bird.thrombosis_prediction.examination WHERE Symptoms = 'thrombocytopenia'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1202,
    "room_id": 1030,
    "good_sql": "SELECT CAST(SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM dataroom_eval_bird.thrombosis_prediction.patient WHERE Diagnosis = 'RA' AND DATE_FORMAT(CAST(Birthday AS TIMESTAMP), 'yyyy') = '1980'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1203,
    "room_id": 1031,
    "good_sql": "SELECT COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'Behcet' AND T1.SEX = 'M' AND DATE_FORMAT(CAST(T2.`Examination Date` AS TIMESTAMP), 'yyyy') BETWEEN '1995' AND '1997' AND T1.Admission = '-'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1204,
    "room_id": 1032,
    "good_sql": "SELECT COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.WBC < 3.5 AND T1.SEX = 'F'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1205,
    "room_id": 1033,
    "good_sql": "SELECT DATE_FORMAT(CAST(T3.`Examination Date` AS TIMESTAMP), 'dd') - DATE_FORMAT(CAST(T1.`First Date` AS TIMESTAMP), 'dd') FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T3 ON T1.ID = T3.ID WHERE T1.ID = 821298",
    "complexity": "Single Join"
  },
  {
    "query_id": 1206,
    "room_id": 1034,
    "good_sql": "SELECT CASE WHEN (T1.SEX = 'F' AND T2.UA > 6.5) OR (T1.SEX = 'M' AND T2.UA < 8.0) THEN TRUE ELSE FALSE END FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ID = 57266",
    "complexity": "Single Join"
  },
  {
    "query_id": 1207,
    "room_id": 1035,
    "good_sql": "SELECT Date FROM dataroom_eval_bird.thrombosis_prediction.laboratory WHERE ID = 48473 AND GOT >= 60",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1208,
    "room_id": 1036,
    "good_sql": "SELECT DISTINCT T1.SEX, T1.Birthday FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT < 60 AND DATE_FORMAT(CAST(T2.Date AS TIMESTAMP), 'yyyy') = '1994'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1209,
    "room_id": 1037,
    "good_sql": "SELECT DISTINCT T1.ID FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GPT >= 60",
    "complexity": "Single Join"
  },
  {
    "query_id": 1210,
    "room_id": 1038,
    "good_sql": "SELECT DISTINCT Diagnosis\nFROM (\n    SELECT subquery.Diagnosis, subquery.Birthday\n    FROM (\n        SELECT T1.Diagnosis, T1.Birthday\n        FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1\n        INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 \n        ON T1.ID = T2.ID \n        WHERE T2.GPT > 60\n    ) AS subquery\n    ORDER BY subquery.Birthday ASC\n) AS result",
    "complexity": "Subqueries, Single Join"
  },
  {
    "query_id": 1211,
    "room_id": 1039,
    "good_sql": "SELECT AVG(LDH) FROM dataroom_eval_bird.thrombosis_prediction.laboratory WHERE LDH < 500",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1212,
    "room_id": 1040,
    "good_sql": "SELECT DISTINCT T1.ID, DATE_FORMAT(CAST(CURRENT_TIMESTAMP() AS TIMESTAMP), 'yyyy') - DATE_FORMAT(CAST(T1.Birthday AS TIMESTAMP), 'yyyy') FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH > 600 AND T2.LDH < 800",
    "complexity": "Single Join"
  },
  {
    "query_id": 1213,
    "room_id": 1041,
    "good_sql": "SELECT T1.Admission FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALP < 300",
    "complexity": "Single Join"
  },
  {
    "query_id": 1214,
    "room_id": 1042,
    "good_sql": "SELECT T1.ID , CASE WHEN T2.ALP < 300 THEN 'normal' ELSE 'abNormal' END FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1982-04-01'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1215,
    "room_id": 1043,
    "good_sql": "SELECT DISTINCT T1.ID, T1.SEX, T1.Birthday FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TP < 6.0",
    "complexity": "Single Join"
  },
  {
    "query_id": 1216,
    "room_id": 1044,
    "good_sql": "SELECT T2.TP - 8.5 FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.TP > 8.5",
    "complexity": "Basic SQL, Single Join"
  },
  {
    "query_id": 1217,
    "room_id": 1045,
    "good_sql": "SELECT ID_alias FROM (SELECT DISTINCT T1.ID AS ID_alias, T1.Birthday AS Birthday_alias FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND (T2.ALB <= 3.5 OR T2.ALB >= 5.5)) AS subquery ORDER BY Birthday_alias",
    "complexity": "Subqueries, Single Join"
  },
  {
    "query_id": 1218,
    "room_id": 1046,
    "good_sql": "SELECT CASE WHEN T2.ALB >= 3.5 AND T2.ALB <= 5.5 THEN 'normal' ELSE 'abnormal' END FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE DATE_FORMAT(CAST(T1.Birthday AS TIMESTAMP), 'yyyy') = '1982'",
    "complexity": "Basic SQL, Single Join"
  },
  {
    "query_id": 1219,
    "room_id": 1047,
    "good_sql": "SELECT CAST(SUM(CASE WHEN T2.UA > 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1220,
    "room_id": 1048,
    "good_sql": "SELECT AVG(T2.UA) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.UA > 6.5 AND T1.SEX = 'F') OR (T2.UA > 8.0 AND T1.SEX = 'M') AND T2.Date = ( SELECT MAX(Date) FROM dataroom_eval_bird.thrombosis_prediction.laboratory )",
    "complexity": "Aggregation, Single Join, Subqueries"
  },
  {
    "query_id": 1221,
    "room_id": 1049,
    "good_sql": "SELECT DISTINCT T1.ID, T1.SEX, T1.Birthday FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UN = 29",
    "complexity": "Single Join"
  },
  {
    "query_id": 1222,
    "room_id": 1050,
    "good_sql": "SELECT DISTINCT T1.ID, T1.SEX, T1.Birthday FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UN < 30 AND T1.Diagnosis = 'RA'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1223,
    "room_id": 1051,
    "good_sql": "SELECT COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5 AND T1.SEX = 'M'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1224,
    "room_id": 1052,
    "good_sql": "SELECT CASE WHEN SUM(CASE WHEN T1.SEX = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) THEN 'True' ELSE 'False' END FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1225,
    "room_id": 1053,
    "good_sql": "SELECT T2.`T-BIL`, T1.ID, T1.SEX, T1.Birthday FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID ORDER BY T2.`T-BIL` DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1226,
    "room_id": 1054,
    "good_sql": "SELECT DISTINCT CASE WHEN T1.SEX = 'F' THEN T1.ID END , CASE WHEN T1.SEX = 'M' THEN T1.ID END FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`T-BIL` >= 2.0",
    "complexity": "Single Join"
  },
  {
    "query_id": 1227,
    "room_id": 1055,
    "good_sql": "SELECT T1.ID, T2.`T-CHO` FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID ORDER BY T2.`T-CHO` DESC, T1.Birthday ASC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1228,
    "room_id": 1056,
    "good_sql": "SELECT AVG(DATE_FORMAT(CAST(CURRENT_TIMESTAMP() AS TIMESTAMP), 'yyyy') - DATE_FORMAT(CAST(T1.Birthday AS TIMESTAMP), 'yyyy')) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`T-CHO` >= 250 AND T1.SEX = 'M'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1229,
    "room_id": 1057,
    "good_sql": "SELECT T1.ID, T1.Diagnosis FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG > 300",
    "complexity": "Single Join"
  },
  {
    "query_id": 1230,
    "room_id": 1058,
    "good_sql": "SELECT COUNT(DISTINCT T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG >= 200 AND DATE_FORMAT(CAST(CURRENT_TIMESTAMP() AS TIMESTAMP), 'yyyy') - DATE_FORMAT(CAST(T1.Birthday AS TIMESTAMP), 'yyyy') > 50",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1231,
    "room_id": 1059,
    "good_sql": "SELECT DISTINCT T1.ID FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CPK < 250 AND T1.Admission = '-'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1232,
    "room_id": 1060,
    "good_sql": "SELECT COUNT(DISTINCT T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE DATE_FORMAT(CAST(T1.Birthday AS TIMESTAMP), 'yyyy') BETWEEN '1936' AND '1956' AND T1.SEX = 'M' AND T2.CPK >= 250",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1233,
    "room_id": 1061,
    "good_sql": "SELECT DISTINCT T1.ID, T1.SEX, DATE_FORMAT(CAST(CURRENT_TIMESTAMP() AS TIMESTAMP), 'yyyy') - DATE_FORMAT(CAST(T1.Birthday AS TIMESTAMP), 'yyyy') FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU >= 180 AND T2.`T-CHO` < 250",
    "complexity": "Single Join"
  },
  {
    "query_id": 1234,
    "room_id": 1062,
    "good_sql": "SELECT DISTINCT T1.ID, T2.GLU FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE DATE_FORMAT(CAST(T1.`First Date` AS TIMESTAMP), 'yyyy') = '1991' AND T2.GLU < 180",
    "complexity": "Single Join"
  },
  {
    "query_id": 1235,
    "room_id": 1063,
    "good_sql": "SELECT DISTINCT T1.ID, T1.SEX, ANY_VALUE(T1.Birthday) AS Birthday FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.WBC <= 3.5 OR T2.WBC >= 9.0 GROUP BY T1.SEX,T1.ID ORDER BY Birthday ASC",
    "complexity": "Single Join, Aggregation"
  },
  {
    "query_id": 1236,
    "room_id": 1064,
    "good_sql": "SELECT T1.Diagnosis, T1.ID, DATE_FORMAT(CAST(CURRENT_TIMESTAMP() AS TIMESTAMP), 'yyyy') - DATE_FORMAT(CAST(T1.Birthday AS TIMESTAMP), 'yyyy') FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RBC < 3.5",
    "complexity": "Basic SQL, Single Join"
  },
  {
    "query_id": 1237,
    "room_id": 1065,
    "good_sql": "SELECT DISTINCT T1.ID, T1.Admission FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND DATE_FORMAT(CAST(CURRENT_TIMESTAMP() AS TIMESTAMP), 'yyyy') - DATE_FORMAT(CAST(T1.Birthday AS TIMESTAMP), 'yyyy') >= 50",
    "complexity": "Single Join"
  },
  {
    "query_id": 1238,
    "room_id": 1066,
    "good_sql": "SELECT DISTINCT T1.ID, T1.SEX FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.HGB < 10 AND T1.Admission = '-'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1239,
    "room_id": 1067,
    "good_sql": "SELECT T1.ID, T1.SEX FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.HGB > 10 AND T2.HGB < 17 ORDER BY T1.Birthday ASC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1240,
    "room_id": 1068,
    "good_sql": "SELECT DISTINCT T1.ID, DATE_FORMAT(CAST(CURRENT_TIMESTAMP() AS TIMESTAMP), 'yyyy') - DATE_FORMAT(CAST(T1.Birthday AS TIMESTAMP), 'yyyy') FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ID IN (SELECT ID FROM dataroom_eval_bird.thrombosis_prediction.laboratory WHERE HCT >= 52 GROUP BY ID HAVING COUNT(ID) >= 2)",
    "complexity": "Single Join, Subqueries, Aggregation"
  },
  {
    "query_id": 1241,
    "room_id": 1069,
    "good_sql": "SELECT AVG(T2.HCT) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.HCT < 29 AND DATE_FORMAT(CAST(T2.Date AS TIMESTAMP), 'yyyy') = '1991'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1242,
    "room_id": 1070,
    "good_sql": "SELECT SUM(CASE WHEN T2.PLT < 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.PLT > 400 THEN 1 ELSE 0 END) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1243,
    "room_id": 1071,
    "good_sql": "SELECT DISTINCT T1.ID FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT BETWEEN 100 AND 400 AND DATE_FORMAT(CAST(T2.Date AS TIMESTAMP), 'yyyy') - DATE_FORMAT(CAST(T1.Birthday AS TIMESTAMP), 'yyyy') < 50 AND DATE_FORMAT(CAST(T2.Date AS TIMESTAMP), 'yyyy') = '1984'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1244,
    "room_id": 1072,
    "good_sql": "SELECT CAST(SUM(CASE WHEN T2.PT >= 14 AND T1.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE DATE_FORMAT(CAST(CURRENT_TIMESTAMP() AS TIMESTAMP), 'yyyy') - DATE_FORMAT(CAST(T1.Birthday AS TIMESTAMP), 'yyyy') > 55",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1245,
    "room_id": 1073,
    "good_sql": "SELECT T1.ID FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE DATE_FORMAT(CAST(T1.`First Date` AS TIMESTAMP), 'yyyy') > '1992' AND T2.PT < 14",
    "complexity": "Single Join"
  },
  {
    "query_id": 1246,
    "room_id": 1074,
    "good_sql": "SELECT COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.Date > '1997-01-01' AND T2.APTT >= 45",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1247,
    "room_id": 1075,
    "good_sql": "SELECT COUNT(DISTINCT T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T3 ON T3.ID = T2.ID WHERE T3.Thrombosis = 3 AND T2.APTT > 45",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 1248,
    "room_id": 1076,
    "good_sql": "SELECT COUNT(DISTINCT T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.FG <= 150 OR T2.FG >= 450 AND T2.WBC > 3.5 AND T2.WBC < 9.0 AND T1.SEX = 'M'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1249,
    "room_id": 1077,
    "good_sql": "SELECT COUNT(DISTINCT T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.FG <= 150 OR T2.FG >= 450 AND T1.Birthday > '1980-01-01'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1250,
    "room_id": 1078,
    "good_sql": "SELECT T1.Diagnosis FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`U-PRO` >= 30",
    "complexity": "Single Join"
  },
  {
    "query_id": 1251,
    "room_id": 1079,
    "good_sql": "SELECT DISTINCT T1.ID FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`U-PRO` > 0 AND T2.`U-PRO` < 30 AND T1.Diagnosis = 'SLE'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1252,
    "room_id": 1080,
    "good_sql": "SELECT COUNT(DISTINCT T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T3 ON T3.ID = T2.ID WHERE T2.IGG < 900 AND T3.Symptoms = 'abortion'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 1253,
    "room_id": 1081,
    "good_sql": "SELECT COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T3 ON T3.ID = T2.ID WHERE T2.IGG BETWEEN 900 AND 2000 AND T3.Symptoms IS NOT NULL",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 1254,
    "room_id": 1082,
    "good_sql": "SELECT patientData.Diagnosis FROM dataroom_eval_bird.thrombosis_prediction.patient AS patientData INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS labData ON patientData.ID = labData.ID WHERE labData.IGA BETWEEN 80 AND 500 ORDER BY labData.IGA DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1255,
    "room_id": 1083,
    "good_sql": "SELECT COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA BETWEEN 80 AND 500 AND T1.`First Date` > '1990-01-01'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1256,
    "room_id": 1084,
    "good_sql": "SELECT T1.Diagnosis FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE NOT T2.IGM BETWEEN 40 AND 400 GROUP BY T1.Diagnosis ORDER BY COUNT(T1.Diagnosis) DESC LIMIT 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1257,
    "room_id": 1085,
    "good_sql": "SELECT COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.CRP = '-' OR T2.CRP = '+-' OR T2.CRP < 1.0) AND T1.Description IS NULL",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1258,
    "room_id": 1086,
    "good_sql": "SELECT COUNT(DISTINCT T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.CRP != '-' AND T2.CRP != '+-') AND T2.CRP >= 1.0 AND DATE_FORMAT(CAST(CURRENT_DATE AS TIMESTAMP), 'yyyy') - DATE_FORMAT(CAST(T1.Birthday AS TIMESTAMP), 'yyyy') < '18'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1259,
    "room_id": 1087,
    "good_sql": "SELECT COUNT(DISTINCT T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T3 ON T3.ID = T2.ID WHERE (T2.RA = '-' OR T2.RA = '+-') AND T3.KCT = '+'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 1260,
    "room_id": 1088,
    "good_sql": "SELECT T1.Diagnosis \nFROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 \nINNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 \nON T1.ID = T2.ID \nWHERE (T2.RA = '-' OR T2.RA = '+-') \nAND T1.Birthday > '1959-01-01'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1261,
    "room_id": 1089,
    "good_sql": "SELECT T1.ID FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND DATE_FORMAT(CAST(CURRENT_DATE AS TIMESTAMP), 'yyyy') - DATE_FORMAT(CAST(T1.Birthday AS TIMESTAMP), 'yyyy') > 60",
    "complexity": "Single Join"
  },
  {
    "query_id": 1262,
    "room_id": 1090,
    "good_sql": "SELECT COUNT(DISTINCT T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.examination AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND T1.Thrombosis = 0",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1263,
    "room_id": 1091,
    "good_sql": "SELECT COUNT(DISTINCT T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.examination AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.C3 > 35 AND T1.`ANA Pattern` = 'P'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1264,
    "room_id": 1092,
    "good_sql": "SELECT ID FROM (\n  SELECT DISTINCT T1.ID, T2.`aCL IgA` FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 \n  INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T2 ON T1.ID = T2.ID \n  INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T3 ON T1.ID = T3.ID \n  WHERE (T3.HCT >= 52 OR T3.HCT <= 29) \n  ORDER BY T2.`aCL IgA` DESC \n  LIMIT 1\n) AS subquery",
    "complexity": "Subqueries, Multiple Joins"
  },
  {
    "query_id": 1265,
    "room_id": 1093,
    "good_sql": "SELECT COUNT(DISTINCT T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.C4 > 10 AND T1.Diagnosis = 'APS'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1266,
    "room_id": 1094,
    "good_sql": "SELECT COUNT(DISTINCT T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RNP = 'negative' OR T2.RNP = '0' AND T1.Admission = '+'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1267,
    "room_id": 1095,
    "good_sql": "SELECT T1.Birthday FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE NOT T2.RNP IN ('-', '+-') ORDER BY T1.Birthday DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1268,
    "room_id": 1096,
    "good_sql": "SELECT COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.examination AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SM IN ('negative','0') AND T1.Thrombosis = 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1269,
    "room_id": 1097,
    "good_sql": "SELECT T1.ID FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE NOT T2.SM IN ('negative', '0') ORDER BY T1.Birthday DESC LIMIT 3",
    "complexity": "Single Join"
  },
  {
    "query_id": 1270,
    "room_id": 1098,
    "good_sql": "SELECT T1.ID FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SC170 IN ('negative','0') AND T2.Date > '1997-01-01'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1271,
    "room_id": 1099,
    "good_sql": "SELECT COUNT(DISTINCT T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T3 ON T3.ID = T2.ID WHERE (T2.SC170 = '-' OR T2.SC170 = '+-') AND T1.SEX = 'M' AND T3.Symptoms = 'vertigo'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 1272,
    "room_id": 1100,
    "good_sql": "SELECT COUNT(DISTINCT T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA IN ('negative', '0') AND DATE_FORMAT(CAST(T2.Date AS TIMESTAMP), 'yyyy') < '1990'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1273,
    "room_id": 1101,
    "good_sql": "SELECT T1.ID FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T1.`First Date` IS NOT NULL AND NOT T2.SSA IN ('negative', '0') ORDER BY T1.`First Date` ASC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1274,
    "room_id": 1102,
    "good_sql": "SELECT COUNT(DISTINCT T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.SSB = 'negative' OR T2.SSB = '0') AND T1.Diagnosis = 'SLE'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1275,
    "room_id": 1103,
    "good_sql": "SELECT COUNT(DISTINCT T1.ID) \nFROM dataroom_eval_bird.thrombosis_prediction.examination AS T1 \nINNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 \nON T1.ID = T2.ID \nWHERE (T2.SSB = 'negative' OR T2.SSB = '0') \nAND T1.Symptoms IS NOT NULL",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1276,
    "room_id": 1104,
    "good_sql": "SELECT COUNT(DISTINCT T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CENTROMEA IN ('negative', '0') AND T2.SSB IN ('negative', '0') AND T1.SEX = 'M'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1277,
    "room_id": 1105,
    "good_sql": "SELECT DISTINCT(T1.Diagnosis) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.DNA >= 8",
    "complexity": "Single Join"
  },
  {
    "query_id": 1278,
    "room_id": 1106,
    "good_sql": "SELECT COUNT(DISTINCT T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.DNA < 8 AND T1.Description IS NULL",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1279,
    "room_id": 1107,
    "good_sql": "SELECT COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`DNA-II` >= 8 AND T1.Admission = '+'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1280,
    "room_id": 1108,
    "good_sql": "SELECT COUNT(CASE WHEN T1.Diagnosis LIKE '%SLE%' THEN T1.ID ELSE 0 END) / COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`GOT` >= 60",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1281,
    "room_id": 1109,
    "good_sql": "SELECT COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT < 60 AND T1.SEX = 'M'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1282,
    "room_id": 1110,
    "good_sql": "SELECT T1.Birthday FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT >= 60 ORDER BY T1.Birthday DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1283,
    "room_id": 1111,
    "good_sql": "SELECT T1.Birthday FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT < 60 ORDER BY T2.GPT DESC LIMIT 3",
    "complexity": "Single Join"
  },
  {
    "query_id": 1284,
    "room_id": 1112,
    "good_sql": "SELECT COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT < 60 AND T1.SEX = 'M'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1285,
    "room_id": 1113,
    "good_sql": "SELECT T1.`First Date` FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH < 500 ORDER BY T2.LDH DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1286,
    "room_id": 1114,
    "good_sql": "SELECT T1.`First Date` FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH >= 500 ORDER BY T1.`First Date` DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1287,
    "room_id": 1115,
    "good_sql": "SELECT COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALP >= 300 AND T1.Admission = '+'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1288,
    "room_id": 1116,
    "good_sql": "SELECT COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALP < 300 AND T1.Admission = '-'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1289,
    "room_id": 1117,
    "good_sql": "SELECT T1.Diagnosis FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TP < 6.0",
    "complexity": "Single Join"
  },
  {
    "query_id": 1290,
    "room_id": 1118,
    "good_sql": "SELECT COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SJS' AND T2.TP > 6.0 AND T2.TP < 8.5",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1291,
    "room_id": 1119,
    "good_sql": "SELECT Date FROM dataroom_eval_bird.thrombosis_prediction.laboratory WHERE ALB BETWEEN 3.5 AND 5.5 ORDER BY ALB DESC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1292,
    "room_id": 1120,
    "good_sql": "SELECT COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.ALB BETWEEN 3.5 AND 5.5 AND T2.TP BETWEEN 6.0 AND 8.5",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1293,
    "room_id": 1121,
    "good_sql": "SELECT T3.`aCL IgG`, T3.`aCL IgM`, T3.`aCL IgA` FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T3 ON T3.ID = T2.ID WHERE T1.SEX = 'F' AND T2.UA > 6.5 ORDER BY T2.UA DESC LIMIT 1",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1294,
    "room_id": 1122,
    "good_sql": "SELECT T2.ANA FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T2 ON T1.ID = T2.ID INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T3 ON T1.ID = T3.ID WHERE T3.CRE < 1.5 ORDER BY T2.ANA DESC LIMIT 1",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1295,
    "room_id": 1123,
    "good_sql": "SELECT T2.ID FROM dataroom_eval_bird.thrombosis_prediction.laboratory AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T2 ON T1.ID = T2.ID WHERE T1.CRE < 1.5 ORDER BY T2.`aCL IgA` DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1296,
    "room_id": 1124,
    "good_sql": "SELECT COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL` >= 2 AND T3.`ANA Pattern` LIKE '%P%'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 1297,
    "room_id": 1125,
    "good_sql": "SELECT T3.ANA FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL` < 2.0 ORDER BY T2.`T-BIL` DESC LIMIT 1",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1298,
    "room_id": 1126,
    "good_sql": "SELECT COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-CHO` >= 250 AND T3.KCT = '-'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 1299,
    "room_id": 1127,
    "good_sql": "SELECT COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T3 ON T1.ID = T3.ID WHERE T3.`ANA Pattern` = 'P' AND T2.`T-CHO` < 250",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 1300,
    "room_id": 1128,
    "good_sql": "SELECT COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.examination AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG < 200 AND T1.Symptoms IS NOT NULL",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1301,
    "room_id": 1129,
    "good_sql": "SELECT T1.Diagnosis FROM dataroom_eval_bird.thrombosis_prediction.examination AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG < 200 ORDER BY T2.TG DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1302,
    "room_id": 1130,
    "good_sql": "SELECT DISTINCT T1.ID FROM dataroom_eval_bird.thrombosis_prediction.laboratory AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 0 AND T1.CPK < 250",
    "complexity": "Single Join"
  },
  {
    "query_id": 1303,
    "room_id": 1131,
    "good_sql": "SELECT COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T3 ON T1.ID = T3.ID WHERE T2.CPK < 250 AND (T3.KCT = '+' OR T3.RVVT = '+' OR T3.LAC = '+')",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 1304,
    "room_id": 1132,
    "good_sql": "SELECT T1.Birthday FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU > 180 ORDER BY T1.Birthday ASC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1305,
    "room_id": 1133,
    "good_sql": "SELECT COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T3 ON T1.ID = T3.ID WHERE T2.GLU < 180 AND T3.Thrombosis = 0",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 1306,
    "room_id": 1134,
    "good_sql": "SELECT COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.WBC BETWEEN 3.5 AND 9 AND T1.Admission = '+'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1307,
    "room_id": 1135,
    "good_sql": "SELECT COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.WBC BETWEEN 3.5 AND 9",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1308,
    "room_id": 1136,
    "good_sql": "SELECT DISTINCT T1.ID FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.RBC <= 3.5 OR T2.RBC >= 6) AND T1.Admission = '-'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1309,
    "room_id": 1137,
    "good_sql": "SELECT COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT BETWEEN 100 AND 400 AND T1.Diagnosis IS NOT NULL",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1310,
    "room_id": 1138,
    "good_sql": "SELECT T2.PLT FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'MCTD' AND T2.PLT BETWEEN 100 AND 400",
    "complexity": "Single Join"
  },
  {
    "query_id": 1311,
    "room_id": 1139,
    "good_sql": "SELECT AVG(T2.PT) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PT < 14 AND T1.SEX = 'M'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1312,
    "room_id": 1140,
    "good_sql": "SELECT COUNT(T1.ID) FROM dataroom_eval_bird.thrombosis_prediction.patient AS T1 INNER JOIN dataroom_eval_bird.thrombosis_prediction.laboratory AS T2 ON T1.ID = T2.ID INNER JOIN dataroom_eval_bird.thrombosis_prediction.examination AS T3 ON T1.ID = T3.ID WHERE T2.PT < 14 AND T3.Thrombosis < 3 AND T3.Thrombosis > 0",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 1313,
    "room_id": 1141,
    "good_sql": "SELECT T2.major_name FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Angela' AND T1.last_name = 'Sanders'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1314,
    "room_id": 1142,
    "good_sql": "SELECT COUNT(T1.member_id) FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.college = 'College of Engineering'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1315,
    "room_id": 1143,
    "good_sql": "SELECT T1.first_name, T1.last_name FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Art and Design Department'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1316,
    "room_id": 1144,
    "good_sql": "SELECT COUNT(T1.event_id) FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Womens Soccer'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1317,
    "room_id": 1145,
    "good_sql": "SELECT T3.phone FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN dataroom_eval_bird.student_club.member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.event_name = 'Womens Soccer'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1318,
    "room_id": 1146,
    "good_sql": "SELECT COUNT(T1.event_id) FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN dataroom_eval_bird.student_club.member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.event_name = 'Womens Soccer' AND T3.t_shirt_size = 'Medium'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 1319,
    "room_id": 1147,
    "good_sql": "SELECT T1.event_name FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.attendance AS T2 ON T1.event_id = T2.link_to_event GROUP BY T1.event_name ORDER BY COUNT(T2.link_to_event) DESC LIMIT 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1320,
    "room_id": 1148,
    "good_sql": "SELECT T2.college FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position ILIKE 'vice president'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1321,
    "room_id": 1142,
    "good_sql": "SELECT T1.event_name FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN dataroom_eval_bird.student_club.member AS T3 ON T2.link_to_member = T3.member_id WHERE T3.first_name = 'Maya' AND T3.last_name = 'Mclean'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1322,
    "room_id": 1149,
    "good_sql": "SELECT COUNT(T1.event_id) FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN dataroom_eval_bird.student_club.member AS T3 ON T2.link_to_member = T3.member_id WHERE T3.first_name = 'Sacha' AND T3.last_name = 'Harrison' AND SUBSTRING(T1.event_date, 1, 4) = '2019'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 1323,
    "room_id": 1150,
    "good_sql": "SELECT COUNT(T1.event_id) FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.type = 'Meeting' GROUP BY T1.type HAVING COUNT(T2.link_to_event) > 10",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1324,
    "room_id": 1151,
    "good_sql": "SELECT ANY_VALUE(T1.event_name) AS event_name FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.attendance AS T2 ON T1.event_id = T2.link_to_event GROUP BY T1.event_id HAVING COUNT(T2.link_to_event) > 20",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1325,
    "room_id": 1152,
    "good_sql": "SELECT CAST(COUNT(T2.link_to_event) AS REAL) / COUNT(DISTINCT T2.link_to_event) FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.attendance AS T2 ON T1.event_id = T2.link_to_event WHERE SUBSTRING(T1.event_date, 1, 4) = '2020' AND T1.type = 'Meeting'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1326,
    "room_id": 1153,
    "good_sql": "SELECT expense_description FROM dataroom_eval_bird.student_club.expense ORDER BY cost DESC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1327,
    "room_id": 1154,
    "good_sql": "SELECT COUNT(T1.member_id) FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1328,
    "room_id": 1155,
    "good_sql": "SELECT T1.first_name, T1.last_name FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN dataroom_eval_bird.student_club.event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Laugh Out Loud'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1329,
    "room_id": 1156,
    "good_sql": "SELECT T1.last_name FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Law and Constitutional Studies'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1330,
    "room_id": 1142,
    "good_sql": "SELECT T2.county FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sherri' AND T1.last_name = 'Ramsey'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1331,
    "room_id": 1142,
    "good_sql": "SELECT T2.college FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Tyler' AND T1.last_name = 'Hewitt'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1332,
    "room_id": 1157,
    "good_sql": "SELECT T2.amount FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.position = 'Vice President'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1333,
    "room_id": 1158,
    "good_sql": "SELECT T2.spent FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'September Meeting' AND T2.category = 'Food' AND SUBSTRING(T1.event_date, 6, 2) = '09'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1334,
    "room_id": 1159,
    "good_sql": "SELECT T2.city, T2.state FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.position = 'President'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1335,
    "room_id": 1160,
    "good_sql": "SELECT T1.first_name, T1.last_name FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Illinois'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1336,
    "room_id": 1161,
    "good_sql": "SELECT T2.spent FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'September Meeting' AND T2.category = 'Advertisement' AND SUBSTRING(T1.event_date, 6, 2) = '09'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1337,
    "room_id": 1142,
    "good_sql": "SELECT T2.department FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.last_name = 'Pierce' OR T1.last_name = 'Guidi'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1338,
    "room_id": 1162,
    "good_sql": "SELECT SUM(T2.amount) FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'October Speaker'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1339,
    "room_id": 1163,
    "good_sql": "SELECT T3.approved FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN dataroom_eval_bird.student_club.expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T1.event_name = 'October Meeting' AND T1.event_date LIKE '2019-10-08%'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1340,
    "room_id": 1164,
    "good_sql": "SELECT AVG(T2.cost) FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.last_name = 'Allen' AND T1.first_name = 'Elijah' AND (SUBSTRING(T2.expense_date, 6, 2) = '09' OR SUBSTRING(T2.expense_date, 6, 2) = '10')",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1341,
    "room_id": 1165,
    "good_sql": "SELECT SUM(CASE WHEN SUBSTRING(T1.event_date, 1, 4) = '2019' THEN T2.spent ELSE 0 END) - SUM(CASE WHEN SUBSTRING(T1.event_date, 1, 4) = '2020' THEN T2.spent ELSE 0 END) AS num FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.event_id = T2.link_to_event",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1342,
    "room_id": 1166,
    "good_sql": "SELECT location FROM dataroom_eval_bird.student_club.event WHERE event_name = 'Spring Budget Review'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1343,
    "room_id": 1167,
    "good_sql": "SELECT cost FROM dataroom_eval_bird.student_club.expense WHERE expense_description = 'Posters' AND expense_date = '2019-09-04'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1344,
    "room_id": 1168,
    "good_sql": "SELECT remaining FROM dataroom_eval_bird.student_club.budget WHERE category = 'Food' AND amount = ( SELECT MAX(amount) FROM dataroom_eval_bird.student_club.budget WHERE category = 'Food' )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 1345,
    "room_id": 1169,
    "good_sql": "SELECT notes FROM dataroom_eval_bird.student_club.income WHERE source = 'Fundraising' AND date_received = '2019-09-14'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1346,
    "room_id": 1142,
    "good_sql": "SELECT COUNT(major_name) FROM dataroom_eval_bird.student_club.major WHERE college = 'College of Humanities and Social Sciences'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1347,
    "room_id": 1142,
    "good_sql": "SELECT phone FROM dataroom_eval_bird.student_club.member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1348,
    "room_id": 1170,
    "good_sql": "SELECT T2.county FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Adela' AND T1.last_name = 'OGallagher'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1349,
    "room_id": 1171,
    "good_sql": "SELECT COUNT(T2.event_id) FROM dataroom_eval_bird.student_club.budget AS T1 INNER JOIN dataroom_eval_bird.student_club.event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'November Meeting' AND T1.remaining < 0",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1350,
    "room_id": 1172,
    "good_sql": "SELECT SUM(T1.amount) FROM dataroom_eval_bird.student_club.budget AS T1 INNER JOIN dataroom_eval_bird.student_club.event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'September Speaker'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1351,
    "room_id": 1173,
    "good_sql": "SELECT T1.event_status FROM dataroom_eval_bird.student_club.budget AS T1 INNER JOIN dataroom_eval_bird.student_club.expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description = 'Post Cards, Posters' AND T2.expense_date = '2019-08-20'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1352,
    "room_id": 1141,
    "good_sql": "SELECT T2.major_name FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Brent' AND T1.last_name = 'Thomason'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1353,
    "room_id": 1174,
    "good_sql": "SELECT COUNT(T1.member_id) FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Human Development AND Family Studies' AND T1.t_shirt_size = 'Large'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1354,
    "room_id": 1142,
    "good_sql": "SELECT T2.type FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Christof' AND T1.last_name = 'Nielson'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1355,
    "room_id": 1175,
    "good_sql": "SELECT T2.major_name FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'Vice President'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1356,
    "room_id": 1176,
    "good_sql": "SELECT T2.state FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1357,
    "room_id": 1177,
    "good_sql": "SELECT T2.department FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'President'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1358,
    "room_id": 1178,
    "good_sql": "SELECT T2.date_received FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Connor' AND T1.last_name = 'Hilton' AND T2.source = 'Dues'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1359,
    "room_id": 1179,
    "good_sql": "SELECT T1.first_name, T1.last_name FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.source = 'Dues' ORDER BY T2.date_received LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1360,
    "room_id": 1180,
    "good_sql": "SELECT CAST(SUM(CASE WHEN T2.event_name = 'Yearly Kickoff' THEN T1.amount ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.event_name = 'October Meeting' THEN T1.amount ELSE 0 END) FROM dataroom_eval_bird.student_club.budget AS T1 INNER JOIN dataroom_eval_bird.student_club.event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T2.type = 'Meeting'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1361,
    "room_id": 1181,
    "good_sql": "SELECT CAST(SUM(CASE WHEN T1.category = 'Parking' THEN T1.amount ELSE 0 END) AS REAL) * 100 / SUM(T1.amount) FROM dataroom_eval_bird.student_club.budget AS T1 INNER JOIN dataroom_eval_bird.student_club.event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'November Speaker'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1362,
    "room_id": 1182,
    "good_sql": "SELECT SUM(cost) FROM dataroom_eval_bird.student_club.expense WHERE expense_description = 'Pizza'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1363,
    "room_id": 1183,
    "good_sql": "SELECT COUNT(city) FROM dataroom_eval_bird.student_club.zip_code WHERE county = 'Orange County' AND state = 'Virginia'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1364,
    "room_id": 1142,
    "good_sql": "SELECT department FROM dataroom_eval_bird.student_club.major WHERE college = 'College of Humanities and Social Sciences'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1365,
    "room_id": 1184,
    "good_sql": "SELECT T2.city, T2.county, T2.state FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Amy' AND T1.last_name = 'Firth'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1366,
    "room_id": 1185,
    "good_sql": "SELECT T2.expense_description FROM dataroom_eval_bird.student_club.budget AS T1 INNER JOIN dataroom_eval_bird.student_club.expense AS T2 ON T1.budget_id = T2.link_to_budget ORDER BY T1.remaining LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1367,
    "room_id": 1186,
    "good_sql": "SELECT DISTINCT T3.member_id FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN dataroom_eval_bird.student_club.member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.event_name = 'October Meeting'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1368,
    "room_id": 1187,
    "good_sql": "SELECT ANY_VALUE(T2.college) AS college FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.major AS T2 ON T1.link_to_major = T2.major_id GROUP BY T2.major_id ORDER BY COUNT(T2.college) DESC LIMIT 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1369,
    "room_id": 1188,
    "good_sql": "SELECT T2.major_name FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = '809-555-3360'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1370,
    "room_id": 1189,
    "good_sql": "SELECT T2.event_name FROM dataroom_eval_bird.student_club.budget AS T1 INNER JOIN dataroom_eval_bird.student_club.event AS T2 ON T1.link_to_event = T2.event_id ORDER BY T1.amount DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1371,
    "room_id": 1190,
    "good_sql": "SELECT T2.expense_id, T2.expense_description FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.position = 'Vice President'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1372,
    "room_id": 1191,
    "good_sql": "SELECT COUNT(T2.link_to_member) FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Womens Soccer'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1373,
    "room_id": 1192,
    "good_sql": "SELECT T2.date_received FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Casey' AND T1.last_name = 'Mason'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1374,
    "room_id": 1142,
    "good_sql": "SELECT COUNT(T2.member_id) FROM dataroom_eval_bird.student_club.zip_code AS T1 INNER JOIN dataroom_eval_bird.student_club.member AS T2 ON T1.zip_code = T2.zip WHERE T1.state = 'Maryland'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1375,
    "room_id": 1142,
    "good_sql": "SELECT COUNT(T2.link_to_event) FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.attendance AS T2 ON T1.member_id = T2.link_to_member WHERE T1.phone = '954-555-6240'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1376,
    "room_id": 1193,
    "good_sql": "SELECT T1.first_name, T1.last_name FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'School of Applied Sciences, Technology and Education'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1377,
    "room_id": 1194,
    "good_sql": "SELECT T2.event_name FROM dataroom_eval_bird.student_club.budget AS T1 INNER JOIN dataroom_eval_bird.student_club.event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.status = 'Closed' ORDER BY T1.spent / T1.amount DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1378,
    "room_id": 1177,
    "good_sql": "SELECT COUNT(member_id) FROM dataroom_eval_bird.student_club.member WHERE position = 'President'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1379,
    "room_id": 1195,
    "good_sql": "SELECT MAX(spent) FROM dataroom_eval_bird.student_club.budget",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1380,
    "room_id": 1196,
    "good_sql": "SELECT COUNT(event_id) FROM dataroom_eval_bird.student_club.event WHERE type = 'Meeting' AND SUBSTRING(event_date, 1, 4) = '2020'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1381,
    "room_id": 1197,
    "good_sql": "SELECT SUM(spent) FROM dataroom_eval_bird.student_club.budget WHERE category = 'Food'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1382,
    "room_id": 1198,
    "good_sql": "SELECT ANY_VALUE(T1.first_name) AS first_name, ANY_VALUE(T1.last_name) AS last_name FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.attendance AS T2 ON T1.member_id = T2.link_to_member GROUP BY T2.link_to_member HAVING COUNT(T2.link_to_event) > 7",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1383,
    "room_id": 1199,
    "good_sql": "SELECT T2.first_name, T2.last_name FROM dataroom_eval_bird.student_club.major AS T1 INNER JOIN dataroom_eval_bird.student_club.member AS T2 ON T1.major_id = T2.link_to_major INNER JOIN dataroom_eval_bird.student_club.attendance AS T3 ON T2.member_id = T3.link_to_member INNER JOIN dataroom_eval_bird.student_club.event AS T4 ON T3.link_to_event = T4.event_id WHERE T4.event_name = 'Community Theater' AND T1.major_name = 'Interior Design'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1384,
    "room_id": 1200,
    "good_sql": "SELECT T1.first_name, T1.last_name FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Georgetown' AND T2.state = 'South Carolina'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1385,
    "room_id": 1201,
    "good_sql": "SELECT T2.amount FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Grant' AND T1.last_name = 'Gilmour'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1386,
    "room_id": 1202,
    "good_sql": "SELECT T1.first_name, T1.last_name FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.amount > 40",
    "complexity": "Single Join"
  },
  {
    "query_id": 1387,
    "room_id": 1203,
    "good_sql": "SELECT SUM(T3.cost) FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN dataroom_eval_bird.student_club.expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T1.event_name = 'Yearly Kickoff'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 1388,
    "room_id": 1204,
    "good_sql": "SELECT T4.first_name, T4.last_name FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN dataroom_eval_bird.student_club.expense AS T3 ON T2.budget_id = T3.link_to_budget INNER JOIN dataroom_eval_bird.student_club.member AS T4 ON T3.link_to_member = T4.member_id WHERE T1.event_name = 'Yearly Kickoff'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1389,
    "room_id": 1205,
    "good_sql": "SELECT T1.first_name, T1.last_name, T2.source FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.income AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.first_name, T1.last_name, T2.source ORDER BY SUM(T2.amount) DESC LIMIT 1",
    "complexity": "Single Join, Aggregation"
  },
  {
    "query_id": 1390,
    "room_id": 1206,
    "good_sql": "SELECT T1.event_name FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN dataroom_eval_bird.student_club.expense AS T3 ON T2.budget_id = T3.link_to_budget ORDER BY T3.cost LIMIT 1",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1391,
    "room_id": 1207,
    "good_sql": "SELECT CAST(SUM(CASE WHEN T1.event_name = 'Yearly Kickoff' THEN T3.cost ELSE 0 END) AS REAL) * 100 / SUM(T3.cost) FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN dataroom_eval_bird.student_club.expense AS T3 ON T2.budget_id = T3.link_to_budget",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 1392,
    "room_id": 1208,
    "good_sql": "SELECT SUM(CASE WHEN major_name = 'Finance' THEN 1 ELSE 0 END) / SUM(CASE WHEN major_name = 'Physics' THEN 1 ELSE 0 END) AS ratio FROM dataroom_eval_bird.student_club.major",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1393,
    "room_id": 1209,
    "good_sql": "SELECT source FROM dataroom_eval_bird.student_club.income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' ORDER BY source DESC LIMIT 1",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1394,
    "room_id": 1210,
    "good_sql": "SELECT first_name, last_name, email FROM dataroom_eval_bird.student_club.member WHERE position = 'Secretary'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1395,
    "room_id": 1211,
    "good_sql": "SELECT COUNT(T2.member_id) FROM dataroom_eval_bird.student_club.major AS T1 INNER JOIN dataroom_eval_bird.student_club.member AS T2 ON T1.major_id = T2.link_to_major WHERE T1.major_name = 'Physics Teaching'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1396,
    "room_id": 1212,
    "good_sql": "SELECT COUNT(T2.link_to_member) FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Community Theater' AND SUBSTRING(T1.event_date, 1, 4) = '2019'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1397,
    "room_id": 1213,
    "good_sql": "SELECT COUNT(T3.link_to_event), ANY_VALUE(T1.major_name) AS major_name \nFROM dataroom_eval_bird.student_club.major AS T1 \nINNER JOIN dataroom_eval_bird.student_club.member AS T2 ON T1.major_id = T2.link_to_major \nINNER JOIN dataroom_eval_bird.student_club.attendance AS T3 ON T2.member_id = T3.link_to_member \nWHERE T2.first_name = 'Luisa' AND T2.last_name = 'Guidi'\nGROUP BY NULL",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 1398,
    "room_id": 1214,
    "good_sql": "SELECT SUM(spent) / COUNT(spent) FROM dataroom_eval_bird.student_club.budget WHERE category = 'Food' AND event_status = 'Closed'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1399,
    "room_id": 1215,
    "good_sql": "SELECT T2.event_name FROM dataroom_eval_bird.student_club.budget AS T1 INNER JOIN dataroom_eval_bird.student_club.event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' ORDER BY T1.spent DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1400,
    "room_id": 1216,
    "good_sql": "SELECT CASE WHEN T3.event_name = 'Womens Soccer' THEN 'YES' END AS result FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN dataroom_eval_bird.student_club.event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.first_name = 'Maya' AND T1.last_name = 'Mclean'",
    "complexity": "Single Join, Multiple Joins"
  },
  {
    "query_id": 1401,
    "room_id": 1217,
    "good_sql": "SELECT CAST(SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(type) FROM dataroom_eval_bird.student_club.event WHERE SUBSTRING(event_date, 1, 4) = '2019'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1402,
    "room_id": 1218,
    "good_sql": "SELECT T3.cost FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN dataroom_eval_bird.student_club.expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T1.event_name = 'September Speaker' AND T3.expense_description = 'Posters'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1403,
    "room_id": 1219,
    "good_sql": "SELECT t_shirt_size FROM dataroom_eval_bird.student_club.member GROUP BY t_shirt_size ORDER BY COUNT(t_shirt_size) DESC LIMIT 1",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1404,
    "room_id": 1220,
    "good_sql": "SELECT T2.event_name FROM dataroom_eval_bird.student_club.budget AS T1 INNER JOIN dataroom_eval_bird.student_club.event AS T2 ON T2.event_id = T1.link_to_event WHERE T1.event_status = 'Closed' AND T1.remaining < 0 ORDER BY T1.remaining LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1405,
    "room_id": 1221,
    "good_sql": "SELECT ANY_VALUE(T1.type), SUM(T3.cost)\nFROM dataroom_eval_bird.student_club.event AS T1\nINNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.event_id = T2.link_to_event\nINNER JOIN dataroom_eval_bird.student_club.expense AS T3 ON T2.budget_id = T3.link_to_budget\nWHERE T1.event_name = 'October Meeting'\nGROUP BY NULL",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 1406,
    "room_id": 1222,
    "good_sql": "SELECT SUM(T2.amount), ANY_VALUE(T2.category) AS category FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'April Speaker' GROUP BY NULL ORDER BY SUM(T2.amount)",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1407,
    "room_id": 1223,
    "good_sql": "SELECT budget_id FROM dataroom_eval_bird.student_club.budget WHERE category = 'Food' AND amount = ( SELECT MAX(amount) FROM dataroom_eval_bird.student_club.budget )",
    "complexity": "Subqueries"
  },
  {
    "query_id": 1408,
    "room_id": 1224,
    "good_sql": "SELECT budget_id FROM dataroom_eval_bird.student_club.budget WHERE category = 'Advertisement' ORDER BY amount DESC LIMIT 3",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1409,
    "room_id": 1225,
    "good_sql": "SELECT SUM(cost) FROM dataroom_eval_bird.student_club.expense WHERE expense_description = 'Parking'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1410,
    "room_id": 1226,
    "good_sql": "SELECT SUM(cost) FROM dataroom_eval_bird.student_club.expense WHERE expense_date = '2019-08-20'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1411,
    "room_id": 1227,
    "good_sql": "SELECT ANY_VALUE(T1.first_name) AS first_name, ANY_VALUE(T1.last_name) AS last_name, SUM(T2.cost) AS total_cost\nFROM dataroom_eval_bird.student_club.member AS T1\nINNER JOIN dataroom_eval_bird.student_club.expense AS T2\nON T1.member_id = T2.link_to_member\nWHERE T1.member_id = 'rec4BLdZHS2Blfp4v'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1412,
    "room_id": 1228,
    "good_sql": "SELECT T2.expense_description FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1413,
    "room_id": 1229,
    "good_sql": "SELECT T2.expense_description FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.t_shirt_size = 'X-Large'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1414,
    "room_id": 1230,
    "good_sql": "SELECT T1.zip FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost < 50",
    "complexity": "Single Join"
  },
  {
    "query_id": 1415,
    "room_id": 1231,
    "good_sql": "SELECT T1.major_name FROM dataroom_eval_bird.student_club.major AS T1 INNER JOIN dataroom_eval_bird.student_club.member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Phillip' AND T2.last_name = 'Cullen'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1416,
    "room_id": 1232,
    "good_sql": "SELECT T2.position FROM dataroom_eval_bird.student_club.major AS T1 INNER JOIN dataroom_eval_bird.student_club.member AS T2 ON T1.major_id = T2.link_to_major WHERE T1.major_name = 'Business'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1417,
    "room_id": 1233,
    "good_sql": "SELECT COUNT(T2.member_id) FROM dataroom_eval_bird.student_club.major AS T1 INNER JOIN dataroom_eval_bird.student_club.member AS T2 ON T1.major_id = T2.link_to_major WHERE T1.major_name = 'Business' AND T2.t_shirt_size = 'Medium'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1418,
    "room_id": 1234,
    "good_sql": "SELECT T1.type FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.remaining > 30",
    "complexity": "Single Join"
  },
  {
    "query_id": 1419,
    "room_id": 1235,
    "good_sql": "SELECT T2.category FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = 'MU 215'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1420,
    "room_id": 1236,
    "good_sql": "SELECT T2.category FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_date = '2020-03-24T12:00:00'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1421,
    "room_id": 1237,
    "good_sql": "SELECT T1.major_name FROM dataroom_eval_bird.student_club.major AS T1 INNER JOIN dataroom_eval_bird.student_club.member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.position = 'Vice President'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1422,
    "room_id": 1238,
    "good_sql": "SELECT CAST(SUM(CASE WHEN T2.major_name = 'Mathematics' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.member_id) FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.major AS T2 ON T2.major_id = T1.link_to_major WHERE T1.position = 'Member'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1423,
    "room_id": 1239,
    "good_sql": "SELECT T2.category FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = 'MU 215'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1424,
    "room_id": 1240,
    "good_sql": "SELECT COUNT(income_id) FROM dataroom_eval_bird.student_club.income WHERE amount = 50",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1425,
    "room_id": 1241,
    "good_sql": "SELECT COUNT(member_id) FROM dataroom_eval_bird.student_club.member WHERE position = 'Member' AND t_shirt_size = 'X-Large'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1426,
    "room_id": 1142,
    "good_sql": "SELECT COUNT(major_id) FROM dataroom_eval_bird.student_club.major WHERE department = 'School of Applied Sciences, Technology AND Education' AND college = 'College of Agriculture AND Applied Sciences'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1427,
    "room_id": 1242,
    "good_sql": "SELECT T2.last_name, T1.department, T1.college FROM dataroom_eval_bird.student_club.major AS T1 INNER JOIN dataroom_eval_bird.student_club.member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.position = 'Member' AND T1.major_name = 'Environmental Engineering'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1428,
    "room_id": 1243,
    "good_sql": "SELECT DISTINCT T2.category, T1.type FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = 'MU 215' AND T2.spent = 0 AND T1.type = 'Guest Speaker'",
    "complexity": "Basic SQL, Single Join"
  },
  {
    "query_id": 1429,
    "room_id": 1244,
    "good_sql": "SELECT city, state FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.major AS T2 ON T2.major_id = T1.link_to_major INNER JOIN dataroom_eval_bird.student_club.zip_code AS T3 ON T3.zip_code = T1.zip WHERE department = 'Electrical and Computer Engineering Department' AND position = 'Member'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1430,
    "room_id": 1245,
    "good_sql": "SELECT T2.event_name FROM dataroom_eval_bird.student_club.attendance AS T1 INNER JOIN dataroom_eval_bird.student_club.event AS T2 ON T2.event_id = T1.link_to_event INNER JOIN dataroom_eval_bird.student_club.member AS T3 ON T1.link_to_member = T3.member_id WHERE T3.position = 'Vice President' AND T2.location = '900 E. Washington St.' AND T2.type = 'Social'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1431,
    "room_id": 1246,
    "good_sql": "SELECT T1.last_name, T1.position FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.expense_date = '2019-09-10' AND T2.expense_description = 'Pizza'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1432,
    "room_id": 1247,
    "good_sql": "SELECT T3.last_name FROM dataroom_eval_bird.student_club.attendance AS T1 INNER JOIN dataroom_eval_bird.student_club.event AS T2 ON T2.event_id = T1.link_to_event INNER JOIN dataroom_eval_bird.student_club.member AS T3 ON T1.link_to_member = T3.member_id WHERE T2.event_name = 'Womens Soccer' AND T3.position = 'Member'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1433,
    "room_id": 1248,
    "good_sql": "SELECT CAST(SUM(CASE WHEN T2.amount = 50 THEN 1.0 ELSE 0 END) AS REAL) * 100 / COUNT(T2.income_id) FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.position = 'Member' AND T1.t_shirt_size = 'Medium'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1434,
    "room_id": 1249,
    "good_sql": "SELECT DISTINCT county FROM dataroom_eval_bird.student_club.zip_code WHERE type = 'PO Box' AND county IS NOT NULL",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1435,
    "room_id": 1249,
    "good_sql": "SELECT zip_code FROM dataroom_eval_bird.student_club.zip_code WHERE type = 'PO Box' AND county = 'San Juan Municipio' AND state = 'Puerto Rico'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1436,
    "room_id": 1250,
    "good_sql": "SELECT DISTINCT event_name FROM dataroom_eval_bird.student_club.event WHERE type = 'Game' AND DATE(SUBSTRING(event_date, 1, 10)) BETWEEN '2019-03-15' AND '2020-03-20' AND status = 'Closed'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1437,
    "room_id": 1251,
    "good_sql": "SELECT DISTINCT T3.link_to_event FROM dataroom_eval_bird.student_club.expense AS T1 INNER JOIN dataroom_eval_bird.student_club.member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN dataroom_eval_bird.student_club.attendance AS T3 ON T2.member_id = T3.link_to_member WHERE T1.cost > 50",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1438,
    "room_id": 1252,
    "good_sql": "SELECT DISTINCT T1.link_to_member, T3.link_to_event FROM dataroom_eval_bird.student_club.expense AS T1 INNER JOIN dataroom_eval_bird.student_club.member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN dataroom_eval_bird.student_club.attendance AS T3 ON T2.member_id = T3.link_to_member WHERE DATE(SUBSTRING(T1.expense_date, 1, 10)) BETWEEN '2019-01-10' AND '2019-11-19' AND T1.approved = 'true'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1439,
    "room_id": 1142,
    "good_sql": "SELECT T2.college FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.major AS T2 ON T2.major_id = T1.link_to_major WHERE T1.link_to_major = 'rec1N0upiVLy5esTO' AND T1.first_name = 'Katy'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1440,
    "room_id": 1253,
    "good_sql": "SELECT T1.phone FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.major AS T2 ON T2.major_id = T1.link_to_major WHERE T2.major_name = 'Business' AND T2.college = 'College of Agriculture and Applied Sciences'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1441,
    "room_id": 1254,
    "good_sql": "SELECT DISTINCT T1.email FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.expense AS T2 ON T1.member_id = T2.link_to_member WHERE DATE(SUBSTRING(T2.expense_date, 1, 10)) BETWEEN '2019-09-10' AND '2019-11-19' AND T2.cost > 20",
    "complexity": "Single Join"
  },
  {
    "query_id": 1442,
    "room_id": 1255,
    "good_sql": "SELECT COUNT(T1.member_id) FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.major AS T2 ON T2.major_id = T1.link_to_major WHERE T1.position = 'Member' AND T2.major_name LIKE '%Education%' AND T2.college = 'College of Education & Human Services'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1443,
    "room_id": 1256,
    "good_sql": "SELECT CAST(SUM(CASE WHEN remaining < 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(budget_id) FROM dataroom_eval_bird.student_club.budget",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1444,
    "room_id": 1257,
    "good_sql": "SELECT event_id, location, status FROM dataroom_eval_bird.student_club.event WHERE DATE(SUBSTRING(event_date, 1, 10)) BETWEEN '2019-11-01' AND '2020-03-31'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1445,
    "room_id": 1258,
    "good_sql": "SELECT expense_description FROM dataroom_eval_bird.student_club.expense GROUP BY expense_description HAVING AVG(cost) > 50",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1446,
    "room_id": 1259,
    "good_sql": "SELECT first_name, last_name FROM dataroom_eval_bird.student_club.member WHERE t_shirt_size = 'X-Large'",
    "complexity": "Basic SQL"
  },
  {
    "query_id": 1447,
    "room_id": 1260,
    "good_sql": "SELECT CAST(SUM(CASE WHEN type = 'PO box' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(zip_code) FROM dataroom_eval_bird.student_club.zip_code",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1448,
    "room_id": 1261,
    "good_sql": "SELECT DISTINCT T1.event_name, T1.location FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.remaining > 0",
    "complexity": "Single Join"
  },
  {
    "query_id": 1449,
    "room_id": 1262,
    "good_sql": "SELECT T1.event_name, T1.event_date FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN dataroom_eval_bird.student_club.expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.expense_description = 'Pizza' AND T3.cost > 50 AND T3.cost < 100",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1450,
    "room_id": 1263,
    "good_sql": "SELECT DISTINCT T1.first_name, T1.last_name, T2.major_name FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.major AS T2 ON T2.major_id = T1.link_to_major INNER JOIN dataroom_eval_bird.student_club.expense AS T3 ON T1.member_id = T3.link_to_member WHERE T3.cost > 100",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1451,
    "room_id": 1264,
    "good_sql": "SELECT DISTINCT T3.city, T3.county FROM dataroom_eval_bird.student_club.income AS T1 INNER JOIN dataroom_eval_bird.student_club.member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN dataroom_eval_bird.student_club.zip_code AS T3 ON T3.zip_code = T2.zip WHERE T1.amount > 40",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1452,
    "room_id": 1265,
    "good_sql": "SELECT subquery.member_id FROM (SELECT T2.member_id, SUM(T1.cost) AS total_cost FROM dataroom_eval_bird.student_club.expense AS T1 INNER JOIN dataroom_eval_bird.student_club.member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN dataroom_eval_bird.student_club.budget AS T3 ON T1.link_to_budget = T3.budget_id INNER JOIN dataroom_eval_bird.student_club.event AS T4 ON T3.link_to_event = T4.event_id GROUP BY T2.member_id HAVING COUNT(DISTINCT T4.event_id) > 1 ORDER BY total_cost DESC LIMIT 1) AS subquery",
    "complexity": "Subqueries, Multiple Joins, Aggregation"
  },
  {
    "query_id": 1453,
    "room_id": 1266,
    "good_sql": "SELECT AVG(T1.cost) FROM dataroom_eval_bird.student_club.expense AS T1 INNER JOIN dataroom_eval_bird.student_club.member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position != 'Member'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1454,
    "room_id": 1267,
    "good_sql": "SELECT T1.event_name FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN dataroom_eval_bird.student_club.expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T2.category = 'Parking' AND T3.cost < (SELECT AVG(cost) FROM dataroom_eval_bird.student_club.expense)",
    "complexity": "Multiple Joins, Subqueries"
  },
  {
    "query_id": 1455,
    "room_id": 1268,
    "good_sql": "SELECT SUM(CASE WHEN T1.type = 'Game' THEN T3.cost ELSE 0 END) * 100 / SUM(T3.cost) FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN dataroom_eval_bird.student_club.expense AS T3 ON T2.budget_id = T3.link_to_budget",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 1456,
    "room_id": 1269,
    "good_sql": "SELECT T2.budget_id FROM dataroom_eval_bird.student_club.expense AS T1 INNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T1.expense_description = 'Water, chips, cookies' ORDER BY T1.cost DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1457,
    "room_id": 1270,
    "good_sql": "SELECT T3.first_name, T3.last_name FROM dataroom_eval_bird.student_club.expense AS T1 INNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN dataroom_eval_bird.student_club.member AS T3 ON T1.link_to_member = T3.member_id ORDER BY T2.spent DESC LIMIT 5",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1458,
    "room_id": 1271,
    "good_sql": "SELECT DISTINCT T3.first_name, T3.last_name, T3.phone FROM dataroom_eval_bird.student_club.expense AS T1 INNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN dataroom_eval_bird.student_club.member AS T3 ON T3.member_id = T1.link_to_member WHERE T1.cost > ( SELECT AVG(T1.cost) FROM dataroom_eval_bird.student_club.expense AS T1 INNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN dataroom_eval_bird.student_club.member AS T3 ON T3.member_id = T1.link_to_member )",
    "complexity": "Multiple Joins, Subqueries"
  },
  {
    "query_id": 1459,
    "room_id": 1272,
    "good_sql": "SELECT CAST((SUM(CASE WHEN T2.state = 'Maine' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.state = 'Vermont' THEN 1 ELSE 0 END)) AS REAL) * 100 / COUNT(T1.member_id) AS diff FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.zip_code AS T2 ON T2.zip_code = T1.zip",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1460,
    "room_id": 1273,
    "good_sql": "SELECT T2.major_name, T2.department FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.major AS T2 ON T2.major_id = T1.link_to_major WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Gerke'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1461,
    "room_id": 1274,
    "good_sql": "SELECT T2.first_name, T2.last_name, T1.cost FROM dataroom_eval_bird.student_club.expense AS T1 INNER JOIN dataroom_eval_bird.student_club.member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Water, Veggie tray, supplies'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1462,
    "room_id": 1275,
    "good_sql": "SELECT T1.last_name, T1.phone FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.major AS T2 ON T2.major_id = T1.link_to_major WHERE T2.major_name = 'Elementary Education'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1463,
    "room_id": 1276,
    "good_sql": "SELECT T2.category, T2.amount FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'January Speaker'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1464,
    "room_id": 1277,
    "good_sql": "SELECT T1.event_name FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Food'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1465,
    "room_id": 1278,
    "good_sql": "SELECT DISTINCT T3.first_name, T3.last_name, T4.amount FROM dataroom_eval_bird.student_club.event AS T1 INNER JOIN dataroom_eval_bird.student_club.attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN dataroom_eval_bird.student_club.member AS T3 ON T3.member_id = T2.link_to_member INNER JOIN dataroom_eval_bird.student_club.income AS T4 ON T4.link_to_member = T3.member_id WHERE T4.date_received = '2019-09-09'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1466,
    "room_id": 1279,
    "good_sql": "SELECT DISTINCT T2.category FROM dataroom_eval_bird.student_club.expense AS T1 INNER JOIN dataroom_eval_bird.student_club.budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T1.expense_description = 'Posters'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1467,
    "room_id": 1227,
    "good_sql": "SELECT T1.first_name, T1.last_name, college FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.major AS T2 ON T2.major_id = T1.link_to_major WHERE T1.position = 'Secretary'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1468,
    "room_id": 1280,
    "good_sql": "SELECT SUM(T1.spent), ANY_VALUE(T2.event_name)\nFROM dataroom_eval_bird.student_club.budget AS T1\nINNER JOIN dataroom_eval_bird.student_club.event AS T2 ON T1.link_to_event = T2.event_id\nWHERE T1.category = 'Speaker Gifts'\nGROUP BY NULL",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1469,
    "room_id": 1281,
    "good_sql": "SELECT T2.city FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.zip_code AS T2 ON T2.zip_code = T1.zip WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Gerke'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1470,
    "room_id": 1282,
    "good_sql": "SELECT T1.first_name, T1.last_name, T1.position FROM dataroom_eval_bird.student_club.member AS T1 INNER JOIN dataroom_eval_bird.student_club.zip_code AS T2 ON T2.zip_code = T1.zip WHERE T2.city = 'Lincolnton' AND T2.state = 'North Carolina' AND T2.zip_code = 28092",
    "complexity": "Single Join"
  },
  {
    "query_id": 1471,
    "room_id": 1283,
    "good_sql": "SELECT COUNT(GasStationID) FROM dataroom_eval_bird.debit_card_specializing.gasstations WHERE Country = 'CZE' AND Segment = 'Premium'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1472,
    "room_id": 1284,
    "good_sql": "SELECT CAST(SUM(IF(Currency = 'EUR', 1, 0)) AS REAL) / SUM(IF(Currency = 'CZK', 1, 0)) FROM dataroom_eval_bird.debit_card_specializing.customers",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1473,
    "room_id": 1285,
    "good_sql": "SELECT T1.CustomerID FROM dataroom_eval_bird.debit_card_specializing.customers AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T2.date BETWEEN 201201 AND 201212 GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) ASC LIMIT 1",
    "complexity": "Single Join, Aggregation"
  },
  {
    "query_id": 1474,
    "room_id": 1286,
    "good_sql": "SELECT AVG(T2.Consumption) / 12 FROM dataroom_eval_bird.debit_card_specializing.customers AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE SUBSTRING(T2.Date, 1, 4) = '2013' AND T1.Segment = 'SME'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1475,
    "room_id": 1287,
    "good_sql": "SELECT T1.CustomerID FROM dataroom_eval_bird.debit_card_specializing.customers AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Date BETWEEN 201101 AND 201112 GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) DESC LIMIT 1",
    "complexity": "Single Join, Aggregation"
  },
  {
    "query_id": 1476,
    "room_id": 1285,
    "good_sql": "SELECT COUNT(*) FROM ( SELECT T2.CustomerID FROM dataroom_eval_bird.debit_card_specializing.customers AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' AND SUBSTRING(T2.Date, 1, 4) = '2012' GROUP BY T2.CustomerID HAVING SUM(T2.Consumption) < 30000 ) AS t1",
    "complexity": "Aggregation, Single Join, Subqueries"
  },
  {
    "query_id": 1477,
    "room_id": 1288,
    "good_sql": "SELECT SUM(IF(T1.Currency = 'CZK', T2.Consumption, 0)) - SUM(IF(T1.Currency = 'EUR', T2.Consumption, 0)) FROM dataroom_eval_bird.debit_card_specializing.customers AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE SUBSTRING(T2.Date, 1, 4) = '2012'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1478,
    "room_id": 1283,
    "good_sql": "SELECT SUBSTRING(T2.Date, 1, 4) FROM dataroom_eval_bird.debit_card_specializing.customers AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' GROUP BY SUBSTRING(T2.Date, 1, 4) ORDER BY SUM(T2.Consumption) DESC LIMIT 1",
    "complexity": "Single Join, Aggregation"
  },
  {
    "query_id": 1479,
    "room_id": 1283,
    "good_sql": "SELECT T1.Segment FROM dataroom_eval_bird.debit_card_specializing.customers AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.yearmonth AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.Segment ORDER BY SUM(T2.Consumption) ASC LIMIT 1",
    "complexity": "Single Join, Aggregation"
  },
  {
    "query_id": 1480,
    "room_id": 1289,
    "good_sql": "SELECT SUBSTRING(T2.Date, 1, 4) FROM dataroom_eval_bird.debit_card_specializing.customers AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' GROUP BY SUBSTRING(T2.Date, 1, 4) ORDER BY SUM(T2.Consumption) DESC LIMIT 1",
    "complexity": "Single Join, Aggregation"
  },
  {
    "query_id": 1481,
    "room_id": 1290,
    "good_sql": "SELECT SUBSTRING(T2.Date, 5, 2) FROM dataroom_eval_bird.debit_card_specializing.customers AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE SUBSTRING(T2.Date, 1, 4) = '2013' AND T1.Segment = 'SME' GROUP BY SUBSTRING(T2.Date, 5, 2) ORDER BY SUM(T2.Consumption) DESC LIMIT 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1482,
    "room_id": 1291,
    "good_sql": "SELECT CAST(SUM(IF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID), CAST(SUM(IF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID), CAST(SUM(IF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) FROM dataroom_eval_bird.debit_card_specializing.customers AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Consumption = (SELECT MIN(Consumption) FROM dataroom_eval_bird.debit_card_specializing.yearmonth) AND T2.Date BETWEEN 201301 AND 201312",
    "complexity": "Aggregation, Single Join, Subqueries"
  },
  {
    "query_id": 1483,
    "room_id": 1292,
    "good_sql": "SELECT CAST((SUM(IF(T1.Segment = 'SME' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0))) AS REAL) * 100 / SUM(IF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0)), CAST(SUM(IF(T1.Segment = 'LAM' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) AS REAL) * 100 / SUM(IF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)), CAST(SUM(IF(T1.Segment = 'KAM' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) AS REAL) * 100 / SUM(IF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) FROM dataroom_eval_bird.debit_card_specializing.customers AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.yearmonth AS T2 ON T1.CustomerID = T2.CustomerID",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1484,
    "room_id": 1293,
    "good_sql": "SELECT SUM(Consumption) FROM dataroom_eval_bird.debit_card_specializing.yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1485,
    "room_id": 1294,
    "good_sql": "SELECT SUM(IF(Country = 'CZE', 1, 0)) - SUM(IF(Country = 'SVK', 1, 0)) FROM dataroom_eval_bird.debit_card_specializing.gasstations WHERE Segment = 'Discount'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1486,
    "room_id": 1295,
    "good_sql": "SELECT SUM(IF(CustomerID = 7, Consumption, 0)) - SUM(IF(CustomerID = 5, Consumption, 0)) FROM dataroom_eval_bird.debit_card_specializing.yearmonth WHERE Date = '201304'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1487,
    "room_id": 1296,
    "good_sql": "SELECT SUM(CAST(Currency = 'CZK' AS INT)) - SUM(CAST(Currency = 'EUR' AS INT)) FROM dataroom_eval_bird.debit_card_specializing.customers WHERE Segment = 'SME'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1488,
    "room_id": 1297,
    "good_sql": "SELECT T1.CustomerID FROM dataroom_eval_bird.debit_card_specializing.customers AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T2.Date = '201310' AND T1.Currency = 'EUR' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) DESC LIMIT 1",
    "complexity": "Single Join, Aggregation"
  },
  {
    "query_id": 1489,
    "room_id": 1283,
    "good_sql": "SELECT T2.CustomerID, SUM(T2.Consumption) FROM dataroom_eval_bird.debit_card_specializing.customers AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' GROUP BY T2.CustomerID ORDER BY SUM(T2.Consumption) DESC LIMIT 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1490,
    "room_id": 1298,
    "good_sql": "SELECT SUM(T2.Consumption) FROM dataroom_eval_bird.debit_card_specializing.customers AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '201305' AND T1.Segment = 'KAM'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1491,
    "room_id": 1299,
    "good_sql": "SELECT CAST(SUM(IF(T2.Consumption > 46.73, 1, 0)) AS REAL) * 100 / COUNT(T1.CustomerID) FROM dataroom_eval_bird.debit_card_specializing.customers AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1492,
    "room_id": 1283,
    "good_sql": "SELECT Country , ( SELECT COUNT(GasStationID) FROM dataroom_eval_bird.debit_card_specializing.gasstations WHERE Segment = 'Value for money' ) FROM dataroom_eval_bird.debit_card_specializing.gasstations WHERE Segment = 'Value for money' GROUP BY Country ORDER BY COUNT(GasStationID) DESC LIMIT 1",
    "complexity": "Aggregation, Subqueries"
  },
  {
    "query_id": 1493,
    "room_id": 1300,
    "good_sql": "SELECT SUM(CAST(Currency = 'EUR' AS REAL)) * 100 / COUNT(CustomerID) FROM dataroom_eval_bird.debit_card_specializing.customers WHERE Segment = 'KAM'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1494,
    "room_id": 1301,
    "good_sql": "SELECT CAST(SUM(IF(Consumption > 528.3, 1, 0)) AS REAL) * 100 / COUNT(CustomerID) FROM dataroom_eval_bird.debit_card_specializing.yearmonth WHERE Date = '201202'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1495,
    "room_id": 1302,
    "good_sql": "SELECT CAST(SUM(IF(Segment = 'Premium', 1, 0)) AS REAL) * 100 / COUNT(GasStationID) FROM dataroom_eval_bird.debit_card_specializing.gasstations WHERE Country = 'SVK'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1496,
    "room_id": 1303,
    "good_sql": "SELECT T1.CustomerID FROM dataroom_eval_bird.debit_card_specializing.customers AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '201309' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) DESC LIMIT 1",
    "complexity": "Single Join, Aggregation"
  },
  {
    "query_id": 1497,
    "room_id": 1303,
    "good_sql": "SELECT ANY_VALUE(T1.Segment) AS Segment FROM dataroom_eval_bird.debit_card_specializing.customers AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '201309' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) ASC LIMIT 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1498,
    "room_id": 1304,
    "good_sql": "SELECT T1.CustomerID FROM dataroom_eval_bird.debit_card_specializing.customers AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '201206' AND T1.Segment = 'SME' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) ASC LIMIT 1",
    "complexity": "Single Join, Aggregation"
  },
  {
    "query_id": 1499,
    "room_id": 1305,
    "good_sql": "SELECT SUM(Consumption) FROM dataroom_eval_bird.debit_card_specializing.yearmonth WHERE SUBSTRING(Date, 1, 4) = '2012' GROUP BY SUBSTRING(Date, 5, 2) ORDER BY SUM(Consumption) DESC LIMIT 1",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1500,
    "room_id": 1306,
    "good_sql": "SELECT SUM(T2.Consumption) / 12 AS MonthlyConsumption FROM dataroom_eval_bird.debit_card_specializing.customers AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' GROUP BY T1.CustomerID ORDER BY MonthlyConsumption DESC LIMIT 1",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1501,
    "room_id": 1307,
    "good_sql": "SELECT T3.Description FROM dataroom_eval_bird.debit_card_specializing.transactions_1k AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.yearmonth AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN dataroom_eval_bird.debit_card_specializing.products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Date = '201309'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1502,
    "room_id": 1308,
    "good_sql": "SELECT T2.Country FROM dataroom_eval_bird.debit_card_specializing.transactions_1k AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN dataroom_eval_bird.debit_card_specializing.yearmonth AS T3 ON T1.CustomerID = T3.CustomerID WHERE T3.Date = '201306'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1503,
    "room_id": 1283,
    "good_sql": "SELECT DISTINCT T3.ChainID FROM dataroom_eval_bird.debit_card_specializing.transactions_1k AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN dataroom_eval_bird.debit_card_specializing.gasstations AS T3 ON T1.GasStationID = T3.GasStationID WHERE T2.Currency = 'EUR'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1504,
    "room_id": 1283,
    "good_sql": "SELECT DISTINCT T1.ProductID, T3.Description FROM dataroom_eval_bird.debit_card_specializing.transactions_1k AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN dataroom_eval_bird.debit_card_specializing.products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Currency = 'EUR'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1505,
    "room_id": 1309,
    "good_sql": "SELECT AVG(Amount) FROM dataroom_eval_bird.debit_card_specializing.transactions_1k WHERE Date LIKE '2012-01%'",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1506,
    "room_id": 1283,
    "good_sql": "SELECT COUNT(*) FROM dataroom_eval_bird.debit_card_specializing.yearmonth AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' AND T1.Consumption > 1000.00",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1507,
    "room_id": 1310,
    "good_sql": "SELECT T3.Description FROM dataroom_eval_bird.debit_card_specializing.transactions_1k AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN dataroom_eval_bird.debit_card_specializing.products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Country = 'CZE'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1508,
    "room_id": 1283,
    "good_sql": "SELECT DISTINCT T1.Time FROM dataroom_eval_bird.debit_card_specializing.transactions_1k AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11",
    "complexity": "Single Join"
  },
  {
    "query_id": 1509,
    "room_id": 1311,
    "good_sql": "SELECT COUNT(T1.TransactionID) FROM dataroom_eval_bird.debit_card_specializing.transactions_1k AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' AND T1.Price > 1000",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1510,
    "room_id": 1311,
    "good_sql": "SELECT COUNT(T1.TransactionID) FROM dataroom_eval_bird.debit_card_specializing.transactions_1k AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' AND DATE_FORMAT(CAST(T1.Date AS TIMESTAMP), 'yyyy') >= '2012'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1511,
    "room_id": 1311,
    "good_sql": "SELECT AVG(T1.Price) FROM dataroom_eval_bird.debit_card_specializing.transactions_1k AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1512,
    "room_id": 1283,
    "good_sql": "SELECT AVG(T1.Price) FROM dataroom_eval_bird.debit_card_specializing.transactions_1k AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN dataroom_eval_bird.debit_card_specializing.customers AS T3 ON T1.CustomerID = T3.CustomerID WHERE T3.Currency = 'EUR'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 1513,
    "room_id": 1312,
    "good_sql": "SELECT CustomerID FROM dataroom_eval_bird.debit_card_specializing.transactions_1k WHERE Date = '2012-08-25' GROUP BY CustomerID ORDER BY SUM(Price) DESC LIMIT 1",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1514,
    "room_id": 1312,
    "good_sql": "SELECT T2.Country FROM dataroom_eval_bird.debit_card_specializing.transactions_1k AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-25' ORDER BY T1.Time DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1515,
    "room_id": 1313,
    "good_sql": "SELECT T3.Currency FROM dataroom_eval_bird.debit_card_specializing.transactions_1k AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN dataroom_eval_bird.debit_card_specializing.customers AS T3 ON T1.CustomerID = T3.CustomerID WHERE T1.Date = '2012-08-24' AND T1.Time = '16:25:00'",
    "complexity": "Multiple Joins"
  },
  {
    "query_id": 1516,
    "room_id": 1314,
    "good_sql": "SELECT T2.Segment FROM dataroom_eval_bird.debit_card_specializing.transactions_1k AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.date = '2012-08-23' AND T1.time = '21:20:00'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1517,
    "room_id": 1315,
    "good_sql": "SELECT COUNT(T1.TransactionID) FROM dataroom_eval_bird.debit_card_specializing.transactions_1k AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-26' AND T1.Time < '13:00:00' AND T2.Currency = 'EUR'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1518,
    "room_id": 1283,
    "good_sql": "SELECT T2.Segment FROM dataroom_eval_bird.debit_card_specializing.transactions_1k AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.customers AS T2 ON T1.CustomerID = T2.CustomerID ORDER BY Date ASC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1519,
    "room_id": 1316,
    "good_sql": "SELECT T2.Country FROM dataroom_eval_bird.debit_card_specializing.transactions_1k AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1520,
    "room_id": 1314,
    "good_sql": "SELECT T1.ProductID FROM dataroom_eval_bird.debit_card_specializing.transactions_1k AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-23' AND T1.Time = '21:20:00'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1521,
    "room_id": 1317,
    "good_sql": "SELECT T1.CustomerID, T2.Date, T2.Consumption FROM dataroom_eval_bird.debit_card_specializing.transactions_1k AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-24' AND ABS(T1.Price - 124.05) < 0.01 AND T2.Date = '201201'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1522,
    "room_id": 1318,
    "good_sql": "SELECT COUNT(T1.TransactionID) FROM dataroom_eval_bird.debit_card_specializing.transactions_1k AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-26' AND T1.Time BETWEEN '08:00:00' AND '09:00:00' AND T2.Country = 'CZE'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1523,
    "room_id": 1319,
    "good_sql": "SELECT T2.Currency FROM dataroom_eval_bird.debit_card_specializing.yearmonth AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '201306' AND ABS(T1.Consumption - 214582.17) < 0.01",
    "complexity": "Single Join"
  },
  {
    "query_id": 1524,
    "room_id": 1283,
    "good_sql": "SELECT T2.Country FROM dataroom_eval_bird.debit_card_specializing.transactions_1k AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.CardID = '667467'",
    "complexity": "Single Join"
  },
  {
    "query_id": 1525,
    "room_id": 1313,
    "good_sql": "SELECT T2.Country FROM dataroom_eval_bird.debit_card_specializing.transactions_1k AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND ABS(T1.Price - 548.4) < 0.01",
    "complexity": "Single Join"
  },
  {
    "query_id": 1526,
    "room_id": 1312,
    "good_sql": "SELECT CAST(SUM(IF(T2.Currency = 'EUR', 1, 0)) AS REAL) * 100 / COUNT(T1.CustomerID) FROM dataroom_eval_bird.debit_card_specializing.transactions_1k AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-25'",
    "complexity": "Aggregation, Single Join"
  },
  {
    "query_id": 1527,
    "room_id": 1320,
    "good_sql": "SELECT CAST(SUM(IF(SUBSTRING(Date, 1, 4) = '2012', Consumption, 0)) - SUM(IF(SUBSTRING(Date, 1, 4) = '2013', Consumption, 0)) AS REAL) / SUM(IF(SUBSTRING(Date, 1, 4) = '2012', Consumption, 0)) FROM dataroom_eval_bird.debit_card_specializing.yearmonth WHERE CustomerID = (SELECT T1.CustomerID FROM dataroom_eval_bird.debit_card_specializing.transactions_1k AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-25' AND ABS(T1.Price - 634.8) < 0.01)",
    "complexity": "Subqueries, Single Join, Aggregation"
  },
  {
    "query_id": 1528,
    "room_id": 1283,
    "good_sql": "SELECT GasStationID FROM dataroom_eval_bird.debit_card_specializing.transactions_1k GROUP BY GasStationID ORDER BY SUM(Price) DESC LIMIT 1",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1529,
    "room_id": 1283,
    "good_sql": "SELECT CAST(SUM(IF(Country = 'SVK' AND Segment = 'Premium', 1, 0)) AS REAL) * 100 / SUM(IF(Country = 'SVK', 1, 0)) FROM dataroom_eval_bird.debit_card_specializing.gasstations",
    "complexity": "Aggregation"
  },
  {
    "query_id": 1530,
    "room_id": 1321,
    "good_sql": "SELECT SUM(T1.Price), SUM(IF(T3.Date = '201201', T1.Price, 0)) FROM dataroom_eval_bird.debit_card_specializing.transactions_1k AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN dataroom_eval_bird.debit_card_specializing.yearmonth AS T3 ON T1.CustomerID = T3.CustomerID WHERE T1.CustomerID = '38508'",
    "complexity": "Aggregation, Multiple Joins"
  },
  {
    "query_id": 1531,
    "room_id": 1322,
    "good_sql": "SELECT T2.Description FROM dataroom_eval_bird.debit_card_specializing.transactions_1k AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.products AS T2 ON T1.ProductID = T2.ProductID ORDER BY T1.Amount DESC LIMIT 5",
    "complexity": "Single Join"
  },
  {
    "query_id": 1532,
    "room_id": 1323,
    "good_sql": "SELECT T2.CustomerID, SUM(T2.Price / T2.Amount), T1.Currency FROM dataroom_eval_bird.debit_card_specializing.customers AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.CustomerID = ( SELECT CustomerID FROM dataroom_eval_bird.debit_card_specializing.yearmonth ORDER BY Consumption DESC LIMIT 1 ) GROUP BY T2.CustomerID, T1.Currency",
    "complexity": "Aggregation, Single Join, Subqueries"
  },
  {
    "query_id": 1533,
    "room_id": 1283,
    "good_sql": "SELECT T2.Country FROM dataroom_eval_bird.debit_card_specializing.transactions_1k AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.ProductID = 2 ORDER BY T1.Price DESC LIMIT 1",
    "complexity": "Single Join"
  },
  {
    "query_id": 1534,
    "room_id": 1324,
    "good_sql": "SELECT T2.Consumption FROM dataroom_eval_bird.debit_card_specializing.transactions_1k AS T1 INNER JOIN dataroom_eval_bird.debit_card_specializing.yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Price / T1.Amount > 29.00 AND T1.ProductID = 5 AND T2.Date = '201208'",
    "complexity": "Single Join"
  }
]