[
  {
    "room_id": 1,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Eligible free rate for K-12 = `Free Meal Count (K-12)` / `Enrollment (K-12)`",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 2,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Eligible free rates for students aged 5-17 = `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 3,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Charter schools refers to `Charter School (Y/N)` = 1 in the table fprm",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 4,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [{ "content": "", "type": "TEXT_INSTRUCTION" }]
  },
  {
    "room_id": 5,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Charter schools refers to `Charter School (Y/N)` = 1 in the frpm",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 6,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Exclusively virtual refers to Virtual = 'F'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 7,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Magnet schools or offer a magnet program means that Magnet = 1",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 8,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Total enrollment can be represented by `Enrollment (K-12)` + `Enrollment (Ages 5-17)`",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 9,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Excellence rate = NumGE1500 / NumTstTakr; Eligible free rates for students aged 5-17 = `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 10,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Excellence rate = NumGE1500 / NumTstTakr",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 11,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Diffrence in enrollement = `Enrollment (K-12)` - `Enrollment (Ages 5-17)`",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 12,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Average of average math = sum(average math scores) / count(schools).",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 13,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Full communication address should include Zip, Street, City, State",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 14,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Communication number refers to phone number.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 15,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Difference between K-12 enrollment and 15-17 enrollment can be computed by `Enrollment (K-12)` - `Enrollment (Ages 5-17)`",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 16,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "K-12 means First-through-twelfth-grade",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 17,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "K-12 refers to students in grades 1 through 12.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 18,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "K-12 refers to students in grades 1 through 12; Eligible free rate for K-12 = `Free Meal Count (K-12)` / `Enrollment (K-12)`",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 19,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "grades 1-12 means K-12; Eligible free or reduced price meal rate for K-12 = `FRPM Count (K-12)` / `Enrollment (K-12)`",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 20,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Charted school means `Charter School (Y/N)` = 1 in the table frpm; Students enrolled in grades 1 through 12 refers to `Enrollment (K-12)`",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 21,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "full name means first name, last name; There are at most 3 administrators for each school; SAT Scores are greater or equal to 1500 refers to NumGE1500",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 22,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Execellence Rate = NumGE1500 / NumTstTakr; complete address has Street, City, State, Zip code",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 23,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "between 1/1/1980 and 12/31/1980 means the year = 1980",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 24,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Fresno Unified is a name of district;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 25,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Exclusively virtual refers to Virtual = 'F'.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 26,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Average score for all subjects can be computed by AvgScrMath + AvgScrRead + AvgScrWrite",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 27,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Usually, administrators manage the school stuff.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 28,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "State Special Schools refers to DOC = 31; Grades 1 through 12 means K-12",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 29,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Elementary School District refers to DOC = 52; Monthly average number of schools that opened in 2018 = count(schools that opened in 1980) / 12",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 30,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Elementary School District refers to DOC = 52; Unified School District refers to DOC = 54.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 31,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Closure date and closed date are synonyms; 'Closed' was mentioned in schools.StatusType.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 32,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Postal street and mailing street are synonyms.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 33,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Total SAT scores can be computed by AvgScrRead + AvgScrMath + AvgScrWrite",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 34,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Ratio = count(schools in Colusa) / count(schools in Humboldt)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 35,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Virtual = 'P' means partially virtual; Charter schools refers to Charter = 1 in the table schools",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 36,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Elementary School District refers to DOC = 52; Chartered schools refer to Charter = 1 in the table schools",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 37,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "non-chartered schools refer to schools whose Charter = 0; K-12 means grades 1 through 12; percent of eligible free rate for K-12 = `Free Meal Count (K-12)` * 100 / `Enrollment (K-12)`",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 38,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Chartered schools refer to Charter = 1 in the table schools; Full name refers to first name, last name",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 39,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Ratio in percentage = (count(locally funded schools in Santa Clara) / count(all funding type schools in Santa Clara) * 100%",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 40,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Directly funded schools refers to FundingType = 'Directly Funded'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 41,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Youth Authority Facilities (CEA) refers to SOC = 11; 1980s = years between 1980 and 1989",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 42,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "State Special Schools means that SOC = 31.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 43,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "When magent is equal to 0 in the database, it means ths school doesn't offer a magnet program.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 44,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "State Special School means EdOpsCode = 'SSS'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 45,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "District Special Education Consortia School refers to EdOpsCode = 'SPECON'.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 46,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "High school can be represented as EILCode = 'HS'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 47,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Percent (%) Eligible FRPM (Ages 5-17) can be acquired by `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)` * 100%",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 48,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "'Does not offer physical building' means Virtual = F in the database.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 49,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "State of California refers to state = 'CA'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 50,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Kindergarten to 8th grade refers to K-8; 'Offers a magnet program' means Magnet = 1.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 51,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Percent (%) Eligible Free (K-12) = `Free Meal Count (K-12)` / `Enrollment (K-12)` * 100%",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 52,
    "tables": [
      "dataroom_eval_bird.california_schools.schools",
      "dataroom_eval_bird.california_schools.satscores",
      "dataroom_eval_bird.california_schools.frpm"
    ],
    "instructions": [
      {
        "content": "Intermediate/Middle Schools refers to SOC = 62; Unified School refers to DOC = 54; years between 2009 and 2010 can refer to 'between 1/1/2009 to 12/31/2010'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 53,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "A3 contains the data of region; 'POPLATEK PO OBRATU' represents for 'issuance after transaction'.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 54,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "A3 contains the data of region",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 55,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "A12 refers to unemploymant rate 1995; A13 refers to unemploymant rate 1996",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 56,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "A11 refers to average salary; Female mapps to gender = 'F'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 57,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Male means that gender = 'M'; A3 refers to region; A11 pertains to average salary.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 58,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Female means gender = 'F'; A11 refers to average salary; Gap = highest average salary - lowest average salary; If the person A's birthdate > B's birthdate, it means that person B is order than person A.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 59,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "If the person A's birthdate < B's birthdate, it means that person B is younger than person A; A11 refers to average salary",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 60,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "'POPLATEK TYDNE' stands for weekly issuance",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 61,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "'POPLATEK PO OBRATU' stands for issuance after transaction",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 62,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Loan validity more than 12 months refers to duration > 12",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 63,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Customers refer to clients; Female refers to gender = 'F'; Names of districts appear in column A2",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 64,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [{ "content": "", "type": "TEXT_INSTRUCTION" }]
  },
  {
    "room_id": 65,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Earlier birthdate refers to older age; A11 refers to average salary",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 66,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "A2 has region names; Woman and female share the same meaning; female refers to gender = 'F'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 67,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "A2 refers to district name; Litomerice is one of district names.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 68,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Female refers to gender = 'F'; A2 refers to district names",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 69,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      { "content": "A3 stands for region names", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 70,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Percentage of the male clients = DIVIDE(COUNT(male clients), COUNT(clients)) * 100%; Male refers to gender = 'M', A3 is the region name. A4 contains the information about inhabitants.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 71,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Increase rate of his/her account balance = [(balance of date A - balance of date B) / balance of Date B] * 100%",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 72,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Loan paid with no issue means contract finished, no problems; status = 'A' means contract finished, no problems; Percentage of accounts by condition = [(total(amount) & condition) / (total amount)] * 100%",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 73,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Status = 'C' stands for running contract, ok so far; Percentage of accounts by condition = [(total(amount) & condition) / (total amount)] * 100%.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 74,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Records about district names could be found in A2; A3 contains the information about regions. 'POPLATEK PO OBRATU' stands for issuance after transaction",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 75,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Accounts holder refers to the person who own this account.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 76,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "A2 refers to the names of districts.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 77,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "A2, A3 contains the information about district and region respectively.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 78,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "A2 contains district names and A3 contains region names.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 79,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "A3 refers to regions; A11 refers to average salary",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 80,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Unemployment increment rate in percentage = [(unemployment rate 2016 - unemployment rate 2015) / unemployment rate 2015] * 100%; unemployment rate 2015 appears in the A12; unemployment rate 2016 appears in the A13; Loan contracts which are still running where client are in debt can be presented as status = 'D'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 81,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "A2 contains the information about district.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 82,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "'POPLATEK MESICNE' stands for monthly issuance",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 83,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "A2 refers to districts; Female refers to gender = 'F'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 84,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Non-credit card withdraws refers to type = 'VYDAJ'; January 1996 can be found by date LIKE '1996-01%' in the database; A2 means district names",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 85,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "A3 contains the region names; South Bohemia is one of region names.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 86,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "A3 refers to district names; Active loan refers to running contracts; Status = 'C' stands for running contract, OK so far; Status = 'D' stands for running contract, client in debt",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 87,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      { "content": "Male refers to gender = 'M'", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 88,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "A2 refers to district names; A13 refers to unemploymant rate in 1996",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 89,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "A16 stands for no. of committed crimes 1996",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 90,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Negative balance means balance < 0; Operation = 'VYBER KARTOU' stands for credit card withdraw. Frequency = 'POPLATEK MESICNE' stands for monthly issurance",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 91,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Frequency = 'POPLATEK MESICNE' stands for monthly issurance",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 92,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Status = 'C' stands for running contract, OK so far; Status = 'D' stands for running contract, client in debt",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 93,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Male refers to gender = 'M'; A15 stands for no. of commited crimes 1995",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 94,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "High-level credit cards refers to the cards with the gold type.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 95,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      { "content": "A2 refers to district name", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 96,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "k_symbol = 'SIPO' refers to household payment",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 97,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Operation = 'VYBER KARTOU' refers to credit card withdrawn",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 98,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Operation = 'VYBER KARTOU' refers to credit card withdrawal",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 99,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      { "content": "Female refers to gender = 'F'", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 100,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Female refers to gender = 'F'; A3 contains the region 'south Bohemia'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 101,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "District refers to column A2; when the account type = 'OWNER', it's eligible for loans",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 102,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "A11 represents the average salary; Salary and income share the similar meanings; when the account type = 'OWNER', it's eligible for loans",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 103,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "A3 contains the region names; North Bohemia is a region.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 104,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "A2 refers to district name; type = 'VYDAJ' stands for withdrawal transactions",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 105,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "A3 refers to region names; A15 stands for the average number of crimes commited in 1995.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 106,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "when the account type = 'OWNER', it's eligible for loan",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 107,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "District data appears in the A2; Male means that gender = 'M'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 108,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Percent of Gold = [ count(type = 'gold' and issued date < 1998) / count(all cards)] * 100%",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 109,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "A15 contains information about number of committed crimes in 1995",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 110,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "operation = 'VYBER' refers to withdrawal in cash",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 111,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "frequency = 'POPLATEK TYDNE' stands for weekly issuance",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 112,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      { "content": "A3 refers to region", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 113,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "status = 'A' refers to loan contracts finished with no problems",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 114,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "After 1996 means date > = '1997-01-01",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 115,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Female refers to gender = 'F'; Woman and female are closed; Average salary can be found in A11",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 116,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Growth rate = (sum of amount_1997 - sum of amount_1996) / (sum of amount_1996) * 100%; Male refers to gender = 'M'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 117,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Operation = 'VYBER KARTOU' means credit card withdrawals",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 118,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Difference in no. of committed crimes between 2 regions = Total no. of committed crimes in 1996 in North Bohemia - Total no. of committed crimes in 1996 in East Bohemia. A3 refers to region. Data about no. of committed crimes 1996 appears in A16",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 119,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "k_symbol refers to the purpose of payments",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 120,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Frequency = 'POPLATEK PO OBRATU' stands for issuance after transaction",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 121,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Man and male refers to gender = 'M'; 'SIPO' stands for household payment",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 122,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Female refers to gender = 'F'; Percentage of female clients in Prague branch = count[female clients with accounts in Prague branch / count(clients with accounts in Prague branch)] * 100%; A3 may contain information about Prague",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 123,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Percentage of male clients = [count(male clients who requested weekly statements / count(clients who requested weekly statements)] * 100%; Male means gender = 'M'; 'POPLATEK TYDNE' stands for weekly issuance",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 124,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Frequency = 'POPLATEK TYDNE' refers to weekly issuance",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 125,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Female refers to 'F' in the gender; A11 contains information about average salary",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 126,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "East Bohemia appears in the column A3, which refers to the region.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 127,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Frequency = 'POPLATEK TYDNE' referes to weekly statement",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 128,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "status = 'C' stands for running contract, OK so far; status = 'D' stands for running contract, client in debt. 'POPLATEK PO OBRATU' stands for issuance after transaction",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 129,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "Only the owner accounts have the right to issue permanent orders or apply for loans",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 130,
    "tables": [
      "dataroom_eval_bird.financial.loan",
      "dataroom_eval_bird.financial.client",
      "dataroom_eval_bird.financial.district",
      "dataroom_eval_bird.financial.trans",
      "dataroom_eval_bird.financial.account",
      "dataroom_eval_bird.financial.card",
      "dataroom_eval_bird.financial.order",
      "dataroom_eval_bird.financial.disp"
    ],
    "instructions": [
      {
        "content": "When type is gold, the credit card is high-level",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 131,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "most common bond type refers MAX(COUNT(bond_type))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 132,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "non-carcinogenic molecules refers to label = '-'; chlorine atoms refers to element = 'cl'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 133,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "single-bonded molecules refers to bond_type = '-' ; average number of oxygen atom = AVG(element = 'o')",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 134,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "carcinogenic molecules refers to label = '+'; single-bonded refers to bond_type = '-'; average = DIVIDE(SUM(bond_type = '-'), COUNT(atom_id))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 135,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "non-carcinogenic refers to label = '-'; sodium atoms refers to element = 'na'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 136,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "triple-bonded molecules refers to bond_type = '#'; carcinogenic refers to label = '+'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 137,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "carbon refers to element = 'c'; double-bond molecules refers to bond_type = ' = '; percentage = DIVIDE(SUM(element = 'c'), COUNT(atom_id))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 138,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "triple type bonds refers to bond_type = '#'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 139,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "atoms with no bromine refers to element ! = 'br'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 140,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "first 100 molecules in number order refers to molecule_id between 'TR000' and 'TR099'; label = '+' means molecules are carcinogenic",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 141,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "silicon refers to element = 'si';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 142,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "TR004_8_9 bond atoms refers to bond_id = 'TR004_8_9'; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 143,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "double type bond refers to bond_type = ' = '; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 144,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "with hydrogen refers to element = 'h'; label most numerous in atoms refers to MAX(COUNT(label)); label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 145,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "type of bond refers to bond_type; Tellurium refers to element = 'te'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 146,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "single type bond refers to bond_type = '-';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 147,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "label = '-' means molecules are non-carcinogenic",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 148,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "label = '-' means molecules are non-carcinogenic; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 149,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "type of bond refers to bond_type; between the atoms TR004_8 and TR004_20 refers to atom_id between atom_id = 'TR004_8' and atom_id = 'TR004_20';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 150,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "tin refers to element ! = 'sn'; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 151,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "with iodine element refer to element = 'i'; with sulfur element refers to element = 's'; single type bond refers to bond_type = '-';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 152,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "triple bond refers to bond_type = '#';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 153,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "TR181 molecule refers to molecule_id = 'TR181'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 154,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "label = '+' mean molecules are carcinogenic; contain fluorine refers to element = 'f'; percentage = DIVIDE(SUM(element = 'f'), COUNT(molecule_id)) as percent where label = '+'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 155,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "label = '+' mean molecules are carcinogenic; triple bond refers to bond_type = '#'; percentage = DIVIDE(SUM(bond_type = '#'), COUNT(bond_id)) as percent where label = '+'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 156,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "TR000 is the molecule id; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 157,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "TR001 is the molecule id; TR001_2_6 is the bond id",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 158,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "label = '+' means molecules are carcinogenic; label = '-' means molecules are non-carcinogenic; difference = SUBTRACT(SUM(label = '+'), SUM(label = '-'))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 159,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      { "content": "TR_000_2_5 is the bond id", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 160,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "TR000_2 is the atom id; atom ID 2 refers to atom_id2",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 161,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "double bond refers to bond_type = ' = ';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 162,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "double bond refers to bond_type = ' = '; TR008 is the molecule id; percentage = DIVIDE(SUM(bond_type = ' = '), COUNT(bond_id)) as percent where molecule_id = 'TR008'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 163,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "label = '+' mean molecules are carcinogenic; percentage = DIVIDE(SUM(label = '+'), COUNT(molecule_id)) as percent",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 164,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "hydrogen refers to element = 'h'; TR206 is the molecule id; percentage = DIVIDE(SUM(element = 'h'), COUNT(atom_id)) as percent where molecule_id = 'TR206'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 165,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "type of bond refers to bond_type; TR000 is the molecule id",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 166,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "TR060 is the molecule id; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 167,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "TR018 is the molecule id; majority of the bond found refers to MAX(COUNT(bond_type)); label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 168,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "label = '-' means molecules are not carcinogenic; single type bond refers to bond_type = '-'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 169,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      { "content": "TR006 is the molecule id", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 170,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "TR009 is the molecule id; molecule_id = 'TR009' means the bond_id LIKE 'TR009_%'; involved atom 12 refers to atom_id = 'TR009_12' or atom_id2 = 'TR009_12'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 171,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "label = '+' mean molecules are carcinogenic; have bromine element refers to element = 'br'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 172,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#'; atoms refer to atom_id or atom_id2",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 173,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "TR001_10 is the atom id; label = '+' mean molecules are carcinogenic",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 174,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "connections refers to bond_id; atom 19 refers to atom_id like 'TR%_19';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 175,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "TR004 is the molecule id; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 176,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "atoms from 21 to 25 refers to SUBSTRING(atom_id, 7, 2) between 21 and 25; label = '+' mean molecules are carcinogenic",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 177,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "have phosphorus as atom elements refers to element = 'p'; have nitrogen as atom elements refers to element = 'n'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 178,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "double bond refers to bond_type = ' = '; label = '+' mean molecules are carcinogenic",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 179,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "atoms with the element iodine refers to element = 'i'; average = DIVIDE(COUND(bond_id), COUNT(atom_id)) where element = 'i'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 180,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "bond ID of atom 45 refers to SUBSTR(atom_id, 7, 2) + 0 = 45; double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 181,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium; atoms cannot bond with other atoms means atom_id NOT in connected table;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 182,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "TR447 is the molecule id; triple bond refers to bond_type = '#';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 183,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "TR144_8_19 is the bond id; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 184,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "label = '+' mean molecules are carcinogenic; double bond refers to bond_type = ' = ';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 185,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "label = '+' mean molecules are carcinogenic",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 186,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "atom that has the element lead refers to atom_id where element = 'pb'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 187,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "triple bond refers to bond_type = '#'; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 188,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "DIVIDE(COUNT(bond_id), COUNT(atom_id where MAX(COUNT(atom_id)) ))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 189,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "single bond refers to bond_type = '-'; label = '+' mean molecules are carcinogenic; proportion = DIVIDE(SUM(label = '+'), COUNT(bond_id)) where bond_type = '-'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 190,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "consisting of element carbon and hydrogen refers to element in('c', 'h')",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 191,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "element sulfur refers to element = 's'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 192,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "element Tin refers to element = 'sn'; double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 193,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "single bond refers to bond_type = '-';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 194,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "triple bond refers to bond_type = '#'; phosphorus refers to element = 'p'; bromine refers to element = 'br'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 195,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "label = '-' means molecules are non-carcinogenic; single bond refers to bond_type = '-';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 196,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "element chlorine refers to element = 'cl'; single bond refers to bond_type = '-'; percentage = DIVIDE(SUM(element = 'cl'), COUNT(atom_id)) as percent where bond_type = '-'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 197,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "TR000, TR001 and TR002 are molecule id; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 198,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 199,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 200,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "iodine refers to element = 'i'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 201,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "calcium refers to element = 'ca'; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic; MAX(label)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 202,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "chlorine refers to element = 'cl'; carbon refers to element = 'c'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 203,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "carbon refers to element = 'c'; triple bond refers to bond_type = '#'; label = '-' means molecules are non-carcinogenic",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 204,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "chlorine refers to element = 'cl'; label = '+' mean molecules are carcinogenic; percentage = DIVIDE(SUM(element = 'pb'); COUNT(molecule_id)) as percentage where label = '+'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 205,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      { "content": "TR001 is the molecule id", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 206,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "first atom refers to atom_id; second atom refers to atom_id2; triple bond refers to bond_type = '#';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 207,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 208,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "triple bond refers to bond_type = '#'; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 209,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "label = '+' means molecules are carcinogenic; 4th atom of each molecule refers to substr(atom_id, 7, 1) = 4; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 210,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "hydrogen refers to element = 'h'; ratio = DIVIDE(SUM(element = 'h'), count(element)) where molecule_id = 'TR006' ; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 211,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "calcium refers to element = 'ca'; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 212,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "Tellurium refers to element = 'te'; double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 213,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium; TR001_10_11 is the bond id; molecule id refers to SUBSTR(bond_id, 1, 5); atom 1 refers to SUBSTR(bond_id, 7, 2); atom 2 refers to SUBSTR(bond_id, 10, 2)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 214,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "TR047 is the molecule id; double bond refers to bond_type = ' = '; percentage = DIVIDE(SUM(bond_type = ' = '), COUNT(all bond_id)) as percent where molecule_id = 'TR047'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 215,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "label = '+' mean molecules are carcinogenic;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 216,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "carbon refers to element = 'c'; between TR010 to TR050 refers to substr(molecule_id, 3, 3)>10 AND substr(molecule_id, 3, 3) < 50",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 217,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "label = '+' mean molecules are carcinogenic; hydrogen refers to element = h'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 218,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [{ "content": "", "type": "TEXT_INSTRUCTION" }]
  },
  {
    "room_id": 219,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "label = '-' means molecules are non-carcinogenic; carbon refers to element = 'c'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 220,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "hydrogen refers to element = 'h'; label = '+' mean molecules are carcinogenic; percentage = DIVIDE(SUM(label = '+' and element = 'h'), COUNT(molecule_id)) * 100.0",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 221,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      { "content": "TR186 is a molecule id", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 222,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic; double bond refers to bond_type = ' = ';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 223,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "label = '+' mean molecules are carcinogenic; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 224,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "chlorine refers to element = 'cl'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 225,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "double bond refers to bond_type = ' = '; label = '+' mean molecules are carcinogenic;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 226,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "double bond refers to bond_type = ' = '; bond_type ! = ' = '; sulphur refers to element = 's'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 227,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "label = '+' mean molecules are carcinogenic; percentage = DIVIDE(SUM(label = '+' and element = 'cl'), COUNT(molecule_id)) as percentage",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 228,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "type of bond refers to bond_type; double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 229,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "atom with ID refers to atom_id; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 230,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "single bond refers to bond_type = '-'; percentage = DIVIDE(SUM(bond_type = '-'), COUNT(bond_id)) as percentage",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 231,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "nitrogen refers to element = 'n'; label = '+' mean molecules are carcinogenic;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 232,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "sulphur refers to element - 's'; double bond refers to bond_type = ' = ';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 233,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "label = '-' means molecules are non-carcinogenic; molecules consisted more than 5 atoms refers to COUNT(molecule_id) > 5",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 234,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "double bond refers to bond_type = '='; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 235,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "label = '+' mean molecules are carcinogenic; molecule that have the highest number of atoms consisted in in refers to MAX(COUNT(atom.molecule_id))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 236,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "hydrogen refers to element = 'h'; label = '+' mean molecules are carcinogenic; triple bond refers to bond_type = '#'; percentage = DIVIDE(SUM(label = '+'), COUNT(molecule_id)) * 100.0 where element = 'h' AND bond_type = '#';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 237,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "single bond refers to bond_type = '-'; molecules between TR004 to TR010 refers molecule_id BETWEEN 'TR004' and 'TR010';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 238,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "carbon refers to element = 'c'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 239,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "oxygen refers to element = 'o'; double bond refers to bond_type = ' = ';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 240,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "triple bond refers to bond_type = '#'; label = '-' means molecules are non-carcinogenic",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 241,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium; double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 242,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "carbon refers to element = 'c'; double bond refers to bond_type = ' = ';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 243,
    "tables": [
      "dataroom_eval_bird.toxicology.bond",
      "dataroom_eval_bird.toxicology.molecule",
      "dataroom_eval_bird.toxicology.atom",
      "dataroom_eval_bird.toxicology.connected"
    ],
    "instructions": [
      {
        "content": "label = '+' mean molecules are carcinogenic; oxygen refers to element = 'o'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 244,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "poweful foils refers to cardKingdomFoilId = cardKingdomId AND cardKingdomId is not null",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 245,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "borderless' refers to borderColor; poweful foils refers to cardKingdomFoilId paired with cardKingdomId AND cardKingdomId is not null",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 246,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "more converted mana for the face refers to Max(faceConvertedManaCost);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 247,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "below 100 on EDHRec refers to EDHRec <100; with 2015 frame style refers to frameVersion = 2015;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 248,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "mythic rarity printing refers to rarity = 'mythic'; card banned refers to status = 'Banned'; in gladiator format refers to format = 'gladiator';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 249,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Artifact type of cards refers to types = 'Artifact'; card does not have multiple faces on the same card refers to side is NULL'; vintage play format refers to format = 'vintage';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 250,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "unknown power refers to power = '*' or POWER IS NULL; commander play format refers to format = 'commander'; legal for commander play format refers to format = 'commander' where status = 'Legal'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 251,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "cards have missing or degraded properties and value refers to hasContentWarning = 1; 'Stephen Daniele' is artist;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 252,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Sublime Epiphany' is name of cards; number 74s refers to number = '74s'; information refers to text;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 253,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "with the most ruling information refers to Max(count(rulings.uuid)); the card is the promotional printing refers to isPromo = 1;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 254,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "annul refers to name = 'annul'; numbered 29 refers to number = '29';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 255,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      { "content": "Japanese' is the language;", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 256,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Chinese Simplified' is the language; percentage = Divide(Sum(id where language = 'Chinese Simplified'), Count(id)) *100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 257,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Italian translation refers to language = 'Italian'; total number of card per set refers to totalSetSize;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 258,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      { "content": "Aaron Boyd' is artist;", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 259,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Angel of Mercy' is the name of card;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 260,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "infinite power refers to power = '*';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 261,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "card Duress refers to name = 'Duress'; type of promotion refers to promoTypes;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 262,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Ancestor's Chosen' is the name of card;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 263,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Ancestor's Chosen' is the name of card; type of the card as originally printed refers to originaltype;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 264,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "restricted refers to status = 'restricted'; have text boxes refers to is Textless = 0;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 265,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Ancestor's Chosen' is the name of card; description about the ruling refers to text;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 266,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "restricted refers to status = 'restricted'; found in the starter deck refers to isStarter = 1;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 267,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Cloudchaser Eagle is the name of card;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 268,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Benalish Knight' is the name of card;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 269,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Benalish Knight' is the name of card; rule of playing card refers to format;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 270,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Phyrexian' is the language; name of artists refers to artist;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 271,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "borderless card refers to borderColor = 'borderless'; percentage = Divide(Count (id) where borderColor = 'borderless', Count(id)) *100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 272,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "German' is the language; reprinted refers to isReprint = 1;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 273,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "borderless card refers to borderColor = 'borderless'; 'Russian' is the language;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 274,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Story Spotlight card refers to isStorySpotlight = 1; French is the language; Percentage = Divide(Count(id) where language = 'French' and isStorySpotlight = 1, Count(id) where isStorySpotlight = 1)*100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 275,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [{ "content": "", "type": "TEXT_INSTRUCTION" }]
  },
  {
    "room_id": 276,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "black border card refers to borderColor = black; available on mtgo refers to availability = mtgo;\n\nadd quotes for string = 'black' and = 'mtgo'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 277,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "converted mana cost of 0 refers to covertedManaCost = 0;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 278,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "subtype other than Angel refers to subtypes is not 'Angel';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 279,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Incredibly powerful refers to both cardKingdomFoilId and cardKingdomId IS NOT Null;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 280,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "duel deck a refers to duelDeck = a;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 281,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Chinese Simplified' is the language;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 282,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "available in paper refers to availability = 'paper'; 'Japanese is the language;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 283,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "banned card refers to status = 'Banned'; white border refers to borderColor = 'white';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 284,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "legacy card refers to format = 'legacy'; foreign language refers to language in foreign_data",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 285,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Beacon of Immortality' is the name of card;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 286,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "future frame version refers to frameVersion = 'future'; legility status refers to status = 'legal';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 287,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "set OGW refers to setCode = 'OGW';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 288,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "set 10E refers to setCode = '10E'; converted mana of 5 refers to convertedManaCost = 5;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 289,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Creature - Elf is the originalType;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 290,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "ID 1-20 refers to id BETWEEN 1 and 20;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 291,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Artifact card refers to originalType = 'Artifact'; black color refers to colors = 'B'; foreign language refers to language in foreign_data",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 292,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "uncommon refers to rarity = 'uncommon';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 293,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "John Avon refer to artist; foil poweful foils refers to cardKingdomId and cardKingdomFoildId is NOT NULL \n",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 294,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "white bordered cards refer to borderColor = 'white'; powerful cards refers to cardKingdomFoilId = cardKingdomId AND cardKingdomId is not null (replace)\n\n",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 295,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "UDON refer to artist; availabe in mtgo refers to availability = 'mtgo'; starting maximum hand size of -1 refers to hand = -1",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 296,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "sensitive content warning refer to hasContentWarning = 1; available on paper refer to availability = 'paper' 1993 refer to frameVersion",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 297,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "available in paper refers to availability = 'paper'; available in mtgo refers to availability = 'mtgo; frameVersion = 2003;borderColor = 'black'\n",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 298,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "unconverted mana refer to manaCost; Rob Alexander refer to artist",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 299,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "all types refer to subtypes and supertypes\n\navailble in arena refers to availability = 'arena'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 300,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Spanish refer to language; set code refers to setCode",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 301,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "maximun hand size of +3 refer to hand = +3; legendary frame effect cards refer to frameEffects = 'legendary'; percentage refer to DIVIDE(COUNT(hand = '+3'), COUNT(id)) from cards where frameEffects = 'legendary'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 302,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Story Spotlight cards that do not have a text box refers to isStorylight = 1 and isTextless = 1; Percentage refer to DIVIDE(SUM(count(id) where isStorylight = 1), SUM(count(id))) * 100\n\n",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 303,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Spanish refer to language; Percentage refer to DIVIDE(SUM(ID where language = 'Spanish'), COUNT(id))*100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 304,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "set refer to setCode; number of cards refers to baseSetSize; baseSetsize = 309\n\n",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 305,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Commander block refer to block = 'Commander'; sets refer to setCode; Portuguese refer to language = 'Portuguese (Brasil)'\n\n",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 306,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "legal status refer to status = 'legal'; Goblin-type cards refer to types = 'Creature';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 307,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "German refer to language; all types refer to the union of subtypes and supertypes where subtypes is not null AND supertypes is not null",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 308,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "null power cards refers to power is NULL; unknown power cards refers to power is null or power = '*'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 309,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "do not have multiple faces refers to side IS NULL",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 310,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "available in paper refers to availability = 'paper'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 311,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "in French refers to language = 'French'; black border color refers to borderColor = 'black'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 312,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "with print rarity refers to rarity = 'rare'; on 10/01/2009 refers to date = '2009-01-10'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 313,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "set of 180 cards refers to baseSetSize = 180",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 314,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "do not have a content warning refers to hasContentWarning = 0; \npercentage refers to DIVIDE(COUNT(hasContentWarning = 0),COUNT(ID))*100 where \nformat = 'commander' AND Status = 'legal';\n",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 315,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "in French refers to language = 'French'; cards without power refers to power IS NULL OR power = '*'; \npercentage = DIVIDE(COUNT(language = 'French' and power is NULL or power = '*'), COUNT( power is NULL or power = '*'))*100\n",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 316,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Japanese translated refers to language = 'Japanese'; expansion sets refers to type = 'expansion'; percentage = DIVIDE(COUNT(language = 'Japanese'),COUNT(language))*100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 317,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "kind of printing refers to availability; Daren Bader created refers to artist = 'Daren Bader'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 318,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "color cards with no borders refers to borderColor = 'borderless'; ranked higher than 12000 on EDHRec refers to edhrecRank > 12000",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 319,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "are oversized refers to isOversized = 1; reprinted refers to isReprint = 1; printed for promotions refers to isPromo = 1",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 320,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "unknown power cards refers to power is null or power = '*'; promotional types for arena league refers to promoTypes = 'arenaleague'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 321,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "multiverse number 149934 refers to multiverseid = 149934;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 322,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "poweful refers to cardKingdomFoilId is not null AND cardKingdomId is not null",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 323,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "do not have a text box refers to isTextless = 1; proportion refers to DIVIDE(COUNT(Textless = 1 and layout = 'normal'),COUNT(Textless))*100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 324,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "don't have multiple faces on a single card side is null",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 325,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "don't appear in Magic: The Gathering Online refers to mtgoCode is NULL or mtgoCode = ''",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 326,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "known as Archenemy refers to mcmName = 'Archenemy'; having the code ARC refers to setCode = 'ARC'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 327,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      { "content": "set number 5 refers to id = 5", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 328,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "set number 206 refers to id = 206",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 329,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "available outside of the United States refers to isForeignOnly = 1; has foil cards refers to isFoilOnly = 1; with Japanese writing on them refers to language = 'Japanese'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 330,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Russian refers to language = 'Russian'; contains the most cards overall refers to MAX(baseSetSize)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 331,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "are only available for online games refers to isOnlineOnly = 1; percentage = DIVIDE(COUNT(isOnlineOnly = 1),COUNT(isOnlineOnly))*100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 332,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Japanese refers to language = 'Japanese'; not in Magic: The Gathering Online refers to mtgoCode is null or mtgoCode = ''",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 333,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "border with black color refers to borderColor = 'black'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 334,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "\nframe effect as extendedart refers to frameEffects = 'extendedart'\n",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 335,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "white card borders refers to borderColor = 'white'; has full artwork refers to isFullArt = 1",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 336,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "\"A Pedra Fellwar\" refers to name = 'A Pedra Fellwar'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 337,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "code of sets refers to setCode",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 338,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "set of Abyssal Horror refers to name = 'Abyssal Horror'; percentage refers to DIVIDE(COUNT(convertedManaCost = 16),COUNT(convertedManaCost))*100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 339,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "designed by Aaron Miller refers to artist = 'Aaron Miller'; are icredibily powerful refers to cardKingdomFoilId = cardKingdomId AND cardKingdomId is not null",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 340,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "available in paper refers to availability like '%paper%'; have a positive starting maximum hand size refers to hand = '+%'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 341,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "have a text box refers to isTextless = 0",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 342,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "card \"Ancestor's Chosen\" refers to name = 'Ancestor`s Chosen'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 343,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "unknown power refers to power = '*' or power is null",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 344,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "are a promotional painting refers to isPromo = 1; have multiple faces on the same card refers to side is not Null",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 345,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "card \"Molimo, Maro-Sorcerer\" refers to name = 'Molimo, Maro-Sorcerer'; list of all types refers to subtypes,supertypes",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 346,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "promotional type of \"bundle\" refers to promoTypes = 'bundle'; websites refers to purchaseUrls",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 347,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "available in both \"arena\" and \"mtgo\" refers to availability like '%arena,mtgo%'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 348,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "\"Serra Angel\" refers to name = 'Serra Angel'; \"Shrine Keeper\" refers to name = 'Shrine Keeper'; \ncard costs more converted mana when the value of convertedManaCost is greater",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 349,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "promotional name is \"Battra, Dark Destroyer\" refers to flavorName = 'Battra, Dark Destroyer'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 350,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "name of cards refers to name; 2003 card frame style refers to frameVersion = '2003'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 351,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Italian is a language which refers to language = 'Italian'; with \"Ancestor's Chosen\" in the card set refers to name = 'Ancestor's Chosen'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 352,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "set of cards with \"Angel of Mercy\" in it refers to name = 'Angel of Mercy'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 353,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "card set \"Hauptset Zehnte Edition\" refers to translation = 'Hauptset Zehnte Edition'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 354,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "set of cards with \"Ancestor's Chosen\" in it refers to name = 'Ancestor's Chosen'; Korean version refers to language = 'Korean'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 355,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "card set \"Hauptset Zehnte Edition\" refers to translation = 'Hauptset Zehnte Edition'; designed by Adam refers to artist = 'Adam Rex'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 356,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "\"Hauptset Zehnte Edition\" refers to translation = 'Hauptset Zehnte Edition'; number of cards refers to baseSetSize",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 357,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Eighth Edition is the name of card set which refers to name = 'Eighth Edition'; Simplified Chinese is the language; translation of the name refers to translation",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 358,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "card set \"Angel of Mercy\" refers to name = 'Angel of Mercy'; appear on Magic: The Gathering Online refers to mtgoCode is NOT NULL and vice versa",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 359,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "card set \"Ancestor's Chosen\" refers to name = 'Ancestor''s Chosen'; when released refers to releaseDate",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 360,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "card set \"Hauptset Zehnte Edition\" refers to translation = ' Hauptset Zehnte Edition'; expansion type refers to type",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 361,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "sets in the block \"Ice Age\" refers to block = 'Ice Age'; Italian translation refers to language = 'Italian'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 362,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "card set Adarkar Valkyrie refers to name = 'Adarkar Valkyrie'; isForeignOnly = 1 means only available outside the United States;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 363,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Italian translation refers to language = 'Italian'; have a translation means translation is not null; base set number of under 10 refers to baseSetSize < 10",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 364,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "card set Coldsnap refers to name = 'Coldsnap'; black border color refers to borderColor = 'black'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 365,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "card set Coldsnap refers to name = 'Coldsnap'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 366,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "card set Coldsnap refers to name = 'Coldsnap'; Jeremy Jarvis, Aaron Miller or Chippy are the name of artists which refers to artist IN ('Jeremy Jarvis', 'Aaron Miller','Chippy');",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 367,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "card set Coldsnap refers to name = 'Coldsnap'; card number 4 refers to number = 4",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 368,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "card set Coldsnap refers to name = 'Coldsnap'; converted mana cost higher than 5 refers to convertedManaCost > 5; unknown power refers to power = '*' or T1.power is null",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 369,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Italian refers to language = 'Italian'; flavor text refers to flavorText; \"Ancestor''s Chosen\" refers to name = 'Ancestor''s Chosen'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 370,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "\"Ancestor''s Chosen\" refers to name = 'Ancestor''s Chosen'; has a flavor text refers to flavorText is not null",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 371,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "German refers to language = 'German'; \"Ancestor's Chosen\" refers to name = 'Ancestor''s Chosen'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 372,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "card set Coldsnap refers to name = 'Coldsnap'; Italian refers to language = 'Italian'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 373,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Reminisce refers to name = 'Reminisce'; when created is the date",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 374,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "converted mana cost of 7 refers to convertedManaCost = 7; card set Coldsnap refers to name = 'Coldsnap'; percentage = DIVIDE(SUM(convertedManaCost = 7), SUM(convertedManaCost))*100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 375,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "card set Coldsnap refers to name = 'Coldsnap'; foil is incredibly powerful refers to cardKingdomFoilId = cardKingdomId AND cardKingdomId is not null; the percentage of incredibly powerful cards in the set refers to DIVIDE(SUM(incredibly powerful), SUM(name = 'Coldsnap'))*100\n\n",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 376,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "released on 2017/7/14 refers to releaseDate = '2017-07-14'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 377,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "keyrune code refers to keyruneCode",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 378,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "magic card market id refers to mcmId",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 379,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "magic card market name refers to mcmName",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 380,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "set \"From the Vault refers to name which contains 'From the Vault: Lore'; expansion type refers to type",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 381,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "the set \"Commander 2014 Oversized\" refers to name = 'Commander 2014 Oversized';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 382,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "all cards illustrated by Jim Pavelec refers to artist = 'Jim Pavelec'; the text of the ruling refers to text; cards have missing or degraded properties and values if hasContentWarning = 1 else it doesn't have;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 383,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "\"Evacuation\" refers to name = 'Evacuation'; release date refers to releaseDate",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 384,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "number of cards refers to baseSetSize; set of \"Rinascita di Alara\" refers to translation = 'Rinascita di Alara'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 385,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "the set \"Huiti\u00e8me \u00e9dition\" refers to translation = 'Huiti\u00e8me \u00e9dition'; expansion type refers to type",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 386,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "French refers to language = 'French'; \"Tendo Ice Bridge\" is a translated name of a card; translated name refers to translation",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 387,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "translations of the name refers to translation; translation is not NULL; set \"Salvat 2011\" refers to name = 'Salvat 2011'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 388,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Japanese name refers to language = 'Japanese'; card \"Fellwar Stone\" refers to name = 'Fellwar Stone'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 389,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "set 'Journey into Nyx Hero's Path' refers to name = 'Journey into Nyx Hero''s Path'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 390,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "release date is the date of card set being released; set \"Ola de fr\u00edo\" refers to translation = 'Ola de fr\u00edo'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 391,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "expansion type refers to type; card \"Samite Pilgrim\" refers to name = 'Samite Pilgrim'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 392,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "the set 'World Championship Decks 2004' refers to name = 'World Championship Decks 2004'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 393,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Simplified Chinese translation refers to language = 'Chinese Simplified'; name of the set \"Mirrodin\" refers to name = 'Mirrodin'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 394,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Japanese translation refers to language = 'Japanese'; in non-foil refers to isNonFoilOnly = 1; percentage of Japanese non foil in Japanese cards refers to DIVIDE(SUM(isNonFoilOnly = 1), SUM(language = 'Japanese'))*100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 395,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Brazil Portuguese translation refers to language = 'Portuguese (Brazil)'; only available online refers to isOnlineOnly = 1; percentage of online only Brazil Portuguese in all Brazil Portuguese cards refers to DIVIDE(SUM(isOnlineOnly = 1), SUM(language = 'Portuguese (Brazil)))*100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 396,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "created by Aleksi Briclot refers to artist = 'Aleksi Briclot'; doesn't have a text box refers to isTextless = 1; available printing types refers to availability",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 397,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "the highest number of cards refers to MAX(baseSetSize); unique id refers to id",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 398,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "doesn't have multiple faces refers to side IS NULL; illustrator refers to artist",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 399,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "when both cardKingdomFoilId and cardKingdomId are not null, this foil is incredibly powerful; most common visual frame effects refers to MAX(frameEffects)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 400,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "unknown power refers to power IS NULL or power = '*'; can't be found in foil refers to hasFoil = 0; duel deck A refers to duelDeck = 'a'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 401,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "expansion type refers to type where type = 'commander'; totalSetSize: The total number of cards in the set, including promotional and related supplemental products but excluding Alchemy modifications; highest total number of cards refers to MAX(totalSetSize)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 402,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "duels refer to format = 'duel'; the highest uncoverted mana cost refers to MAX(manaCost)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 403,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "the oldest card refers to MIN(originalReleaseDate); mythic card refers to rarity = 'mythic'; legal play refers to status = 'legal'; play format refers to format",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 404,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "Volkan Ba\u00c7\u00b5a refers to artist = 'Volkan Baga'; foreign language is in French refers to language = 'French'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 405,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "rare refers to rarity = 'rare'; enchantment card refers to types = 'Enchantment'; Abundance cards refers to name = 'Abundance'; format status are all legal refers to status = 'Legal'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 406,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "play format refers to format uuid; banned status refers to status = 'banned'; the highest number of banned status refers to MAX(status = 'banned')",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 407,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "\"Battlebond\" set refers to name = 'Battlebond'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 408,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "format of the cards refers to format; illustrator refers to artist; the least amount of cards refers to MIN(artist)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 409,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "version of frame style is 1997 refers to frameVersion = '1997'; illustrated by D. Alexander Gregory refers to artist = 'D. Alexander Gregory'; sensitive content refers to hasContentWarning = 1; legacy play format refers to format = 'legacy'; status of the card refers to status",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 410,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "ranked 1st on EDHRec refers to edhrecRank = 1; banned refers to status = 'banned'; play format refers to format; cards name refers to name",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 411,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "AVG(id); releaseDate BETWEEN 1/1/2012 AND 12/31/2015; the common language refers to MAX(COUNT(language))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 412,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "black borders refers to BorderColor = 'black'; available only in arena refers to availability = 'arena'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 413,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "old school format refers to format = 'oldschool'; restricted or banned refers to status = 'banned' or 'restricted'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 414,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "card designed by Matthew D. Wilson refers to artist = 'Matthew D. Wilson'; available only in the paper refers to availability = 'paper'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 415,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "rulings refers to text; card named and designed by Kev Walker refers to artist = 'Kev Walker'; descending order of dates refers to MAX(date);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 416,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "the set Hour of Devastation refers to set.name = 'Hour of Devastation'; names of all the cards in the set refers to cards.name; legal cards refers to status = 'legal'; the formats refers to format",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 417,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "names of sets refers to name; doesn't have Japanese translation refers to language not like '%Japanese%'; have Korean translation refers to language = 'Korean'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 418,
    "tables": [
      "dataroom_eval_bird.card_games.rulings",
      "dataroom_eval_bird.card_games.set_translations",
      "dataroom_eval_bird.card_games.legalities",
      "dataroom_eval_bird.card_games.cards",
      "dataroom_eval_bird.card_games.sets",
      "dataroom_eval_bird.card_games.foreign_data"
    ],
    "instructions": [
      {
        "content": "frame styles refers to frameVersion; cards Allen Williams worked on refers to artist = 'Allen Williams'; banned cards refers to status = 'banned'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 419,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"Harlan\" and \"Jarrod Dixon\" are both DisplayName; highest reputation refers to Max(Reputation)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 420,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "account created in the year 2014 refers to year(CreationDate) = 2014",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 421,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "last accessed after 2014/9/1 refers to LastAccessDate > '2014-09-01 00:00:00'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 422,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "user who has the most number of view refers to Max(Views)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 423,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "more than 100 upvotes refers to Upvotes > 100; more than 1 downvotes refers to Downvotes > 1",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 424,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "more than 10 views refers to Views > 10; created after the year 2013 refers to year (CreationDate) > 2013",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 425,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"csgillespie\" is the DisplayName of user",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 426,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"Eliciting priors from experts\" is the Title of post; owner refers to DisplayName",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 427,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"csgillespie\" is the DisplayName of user; highest popularity refers to Max(ViewCount)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 428,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "most valuable post refers to Max(FavoriteCount)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 429,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"csgillespie\" is the DisplayName of user; total number of comments refers to Sum(CommentCount)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 430,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"csgillespie\" is the DisplayName of user; the most number of answer refers to Max(AnswerCount)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 431,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"Examples for teaching: Correlation does not mean causation\" is the Title of post; user who last edited refers to LastEditorUserId",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 432,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"csgillespie\" is the DisplayName of user; root post refers to ParentId IS Null",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 433,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "the post that is well-finished refers to ClosedDate IS NOT Null",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 434,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "elder users refers to Age > 65; Score of over 19 refers to Score > = 20",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 435,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "Owner refers to OwnerUserId; 'Eliciting priors from experts' is the Title of post",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 436,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"bayesian\" is the TagName; excerpt from refers to ExcerptPostId",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 437,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "most popular tag refers to Max(Count); excerpt from refer to ExcerptPostId",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 438,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"csgillespie\" is the DisplayName of user; obtained in 2011 refers to YEAR (Date) = 2011",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 439,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "who obtained the most number of badges refers to UserID with Max(Count(Id))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 440,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"csgillespie\" is the DisplayName of user; average score refers to AVG(Score)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 441,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "user with over 200 views refers to Views > 200; average number of badges = Divide (Count(Id), Count(DisplayName))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 442,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "score of over 20 refers to Score > 20; elder user refers to Age > 65; percentage = Divide (Count(Id where Age>65), Count(Id)) * 100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 443,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "user no. 58 refers to UserId = 58; on 2010/7/19 refers to CreationDate = '2010-07-19'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 444,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "the creation date of the maximum number of votes refers to CreationDate where Max(Count(Id))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 445,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "number refers to Id; 'Revival' is the Name of badge",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 446,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "highest score comment refers to Max(comments.Score)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 447,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [{ "content": "", "type": "TEXT_INSTRUCTION" }]
  },
  {
    "room_id": 448,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "user no. 3025 refers to UserId = '3025'; comment at 20:29:39 on 2014/4/23 refers to CreationDate = '2014/4/23 20:29:39.0'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 449,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "one comment refers to CommentCount = '1'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 450,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "user no. 23853 refers to UserId = '23853'; at 9:08:18 on 2013/7/12 refers to CreationDate = '2013-07-12 09:08:18.0'; not well-finished refers to ClosedDate IS NULL and vice versa",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 451,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "post no. 65041 refers to Id = '65041'; reputation point refers to Reputation",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 452,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"Tiago Pasqualini\" is the DisplayName;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 453,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "vote no. 381800 refers to Id = '6347'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 454,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "About data visualization is the Title that contains 'data visualization';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 455,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"DatEpicCoderGuyWhoPrograms\" is the DisplayName;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 456,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "user no. 24 refers to UserId = OwnerUserId = '24'; times of his/her post than votes = Divide (Count(post.Id), Count(votes.Id))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 457,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer\" is the Title of post; views refers to ViewCount",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 458,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "score of 17 refers to Score = 17; contents of comments refers to Text",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 459,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"http://stackoverflow.com\" is the WebsiteUrl; user refers to DisplayName",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 460,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"SilentGhost\" is the DisplayName of user;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 461,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"thank you user93\" is the Text of comment; user refers to DisplayName",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 462,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"A Lion\" is the DisplayName of user; comment refers to Text",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 463,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"Understanding what Dassault iSight is doing?\" is the Title of post; user refers to DisplayName;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 464,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"How does gentle boosting differ from AdaBoost?\" is the Title of post; comments refers to Text",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 465,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"Necromancer\" is the Name of badge; users refers to DisplayName",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 466,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "'Open source tools for visualizing multi-dimensional data' is the Title of Post",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 467,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"Vebjorn Ljosa\" is the DisplayName; last edited refers to LastEditorUserId",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 468,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"Yevgeny\" is the DisplayName; edited refers to LastEditorUserId",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 469,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"Why square the difference instead of taking the absolute value in standard deviation?\" is the Title of post;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 470,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "About data means the title contains 'data'; total bounty Amount refers to Sum(BountyAmount)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 471,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"bounty amount of 50 refers to BountyAmount = 50; user refers to DisplayName",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 472,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"humor\" is the Tags; comment of the post refers to Text; average view count = AVG(ViewCount)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 473,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "highest reputation refers to Max(Reputation)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 474,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "lowest views refers to Min(Views)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 475,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"Supporter\" is the Name of badge; in year 2011 refers to year(Date) = 2011",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 476,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "more than 5 badges refers to Count (Name) > 5; user refers to UserId",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 477,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"Supporter\" and \"Teachers\" are both Name of badge; 'New York' is the Location; user refers to UserId",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 478,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "having at least 1000 view refers to Views > = 1000; user refers to UserId",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 479,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "user with the most comments refers to UserId where Max(Count(Id)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 480,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"India\" is the Location; \"Teacher\" is the Name of badge",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 481,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"Students\" is the Name of badge;\u00a0 during 2010 refers to Year(Date) = 2010; 2011 refers to Year(Date) = 2011; percentage difference = Subtract (Divide(Count(Name where Year(Date) = 2010), Count (Name)) *100, Divide(Count(Name where Year(Date) = 2011), Count(Name)) * 100)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 482,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "post related refers to RelatedPostId; popularity refers to ViewCount",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 483,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "score more than 60 refers to Score > 60",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 484,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "in 2011 refers to year (CreatinDate) = 2011",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 485,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "creating more than 10 post refers to Count (UserId) > 10; up votes average = Divide (Sum(UpVotes), Count (UserId)); average age = Divide (Sum(Age), Count(UserId))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 486,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"Announcer\" is the Name of badge; user refers to UserId",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 487,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "on 7/19/2010 7:39:08 PM refers to Date = '2010-07-19 19:39:08'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 488,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "Positive comment refers to score > 60",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 489,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "detailed content of the comment refers to Text; created on 7/19/2010 7:16:14 PM refers to CreationDate = '2010-07-19 19:16:14.0'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 490,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "score of 10 refers to Score = 10; post refers to Id",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 491,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "highest reputation refers to Max(Reputation); user refers to UserId",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 492,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "on 7/19/2010 7:39:08 PM refers to Date = '2010-07-19 19:39:08.0'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 493,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"Rochester, NY\" is the Location of user; user refers to UserId",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 494,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"Teacher\" is the Name of badge;  percentage = Divide (Count(UserId where it's \"Teacher\"), Count(UserId)) * 100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 495,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"Organizer\" is the Name of badge; teenager refers to Age BETWEEN 13 AND 18; percentage = Divide (Count(UserId where Age BETWEEN 13 AND 18), Count(UserId)) *100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 496,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "created on 7/19/2010 7:19:56 PM refers to CreationDate = '2010-07-19 19:19:56.0'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 497,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "detailed content of the comment refers to Text; created on 7/19/2010 7:37:33 PM CreationDate = 2010-07-19 19:37:33.0'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 498,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"Vienna, Austria\" is the Location",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 499,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "Supporter is the Name of badge; adult refers to Age BETWEEN 19 AND 65",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 500,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "lowest reputation refers to Min(Reputation); user refers to UserId",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 501,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"Sharpie\" is the DisplayName of user; user refers to UserId",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 502,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "\"Supporter\" is the Name of badge;\u00a0 elders refers to Age > 65",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 503,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "name of user refers to DisplayName;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 504,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      { "content": "New York refers to Location;", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 505,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      { "content": "YEAR(CreationDate) = 2010;", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 506,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "adult refers to user where Age BETWEEN 19 and 65;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 507,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "users have the highest number of views refer to DisplayName where MAX(Views);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 508,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "DIVIDE(COUNT(Id where YEAR(CreationDate) = 2010), COUNT(Id where YEAR(CreationDate) = 2011)) FROM votes;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 509,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "DisplayName = 'John Stauffer';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 510,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "DisplayName = 'Daniel Vassallo';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 511,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      { "content": "DisplayName = 'Harlan';", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 512,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "most answers count refers to MAX(AnswerCount); DisplayName = 'slashnick';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 513,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "Higher view count means the post has higher popularity; MAX(SUM(ViewCount)) where DisplayName = 'Harvey Motulsky' OR DisplayName = 'Noah Snyder';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 514,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "more than 4 votes refer to PostId > 4; DisplayName = 'Matt Parker';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 515,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "Negative comment refers to score < 60; DisplayName = 'Neil McGuigan';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 516,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      { "content": "DisplayName = 'Mark Meckes';", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 517,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "name of users refers to DisplayName; the Organizer Badges refer to badges where Name = 'Organizer';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 518,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "DIVIDE(COUNT(PostId WHERE TagName = R language)), (COUNT(PostId WHERE DisplayName = 'Community')) as percentage; R language refers to tagname = 'r'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 519,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "SUBTRACT(SUM(ViewCount where DisplayName = 'Mornington'), SUM(ViewCount where DisplayName = 'Amos'));",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 520,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "commentator is the name of the badge; year(Date) = 2014;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 521,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "created on 21st July, 2010 refers to CreationDate BETWEEN '2010-07-21 00:00:00' and '2012-07-21 23:59:59';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 522,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "the highest in views refers to MAX(Views);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 523,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "Title = 'Detecting a given face in a database of facial images';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 524,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "negative comments refer to Score < 60;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 525,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "positive comments refer to Score > 60;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 526,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "received in 2011 refers to year(Date) = 2011;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 527,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "favorite count of more than 150 refers to FavoriteCount > 150;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 528,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "Outliers is the name of the badge;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 529,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "Samuel refers to UserDisplayName; YEAR(CreationDate) = 2013 relates to PostId; YEAR(Date) = 2013 relates to the badge;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 530,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "Higher view count means the post has higher popularity; the most popular post refers to MAX(ViewCount);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 531,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "user who owned the excerpt post with hypothesis-testing tag refers to OwnerUserId WHERE TagName = 'hypothesis-testing';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 532,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "Title = 'What are principal component scores?';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 533,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "If the parent id is not null, the post is the child post; the highest score refers to MAX(Score);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 534,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "vote type of 8 refers to VoteTypeId = 8; the highest bounty amount refers to MAX(BountyAmount);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 535,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "Higher view count means the post has higher popularity; the highest popularity refers to MAX(ViewCount);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 536,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "post count between 5,000 to 7,000 refers to Count BETWEEN 5000 and 7000;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 537,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "the most valuable post refers to MAX(FavoriteCount);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 538,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "How old describes age; the most influential refers to user where MAX(Reputation);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 539,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "created in 2012 refers YEAR(CreationDate) = 2011; BountyAmount = 50;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 540,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "the youngest user refers to MIN(Age);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 541,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "Higher view count means the post has higher popularity; the most popular tag refers to MAX(Count);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 542,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "DIVIDE(COUNT(Id where YEAR(CreationDate) = 2010 and AnswerCount < = 2), 12)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 543,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "user 1465 refers to UserId = 1465; the most valuable post refers to MAX(FavoriteCount);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 544,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "the oldest post link refers to MIN(CreaionDate);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 545,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "highest amount of badges refers to MAX(COUNT(Name));",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 546,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "DisplayName = 'chl'; cast its first vote refers to MIN(CreationDate);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 547,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "the youngest user refers to MIN(Age); first post refers to MIN(CreaionDate);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 548,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "Autobiographer is the name of the badge; acquired the first refers to MIN(Date);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 549,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "favorite amount of 4 or more refers to FavoriteCount > = 4; Location = 'United Kingdom';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 550,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "average number of posts voted refers to AVG(PostId) FROM votes; the oldest users refer to MAX(Age);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 551,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "the highest reputation refers to MAX(Reputation);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 552,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "reputations are higher than 2000 refer to Reputation > 2000; number of views is higher than 1000 refers to Views > 1000;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 553,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "adults refer to users where Age BETWEEN 19 and 65;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 554,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "DisplayName = 'Jay Stevens'; in 2010 refers to YEAR(CreationDate) = 2010;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 555,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "DisplayName = 'Harvey Motulsky'; the most views refer to MAX(ViewCount);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 556,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "the highest score refers to MAX(Score); owner's name refers to DisplayName;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 557,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "DisplayName = 'Stephen Turner'; average score refers to AVG(Score);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 558,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "had over 20000 views in 2011 refers to ViewCount > 20000 where YEAR(CreationDate) = 2011;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 559,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "the most valuable post in 2015 refers to MAX(FavoriteCount) where year(CreationDate) = 2010;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 560,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "DIVIDE(COUNT(Id where CreationDate = 2011 and Reputation > 1000), COUNT(Id) ) * 100 as percentage;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 561,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "DIVIDE(COUNT(Id where Age BETWEEN 13 and 18), COUNT(Id)) as percentage;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 562,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "views refer to ViewCount; Name the user refers to DisplayName; Text = 'Computer Game Datasets';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 563,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "views above average refer to ViewCount > AVG(ViewCount);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 564,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "the highest score refers to MAX(Score);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 565,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "have been viewed over 35000 times refers to ViewCount > 35000; received no comments refers to CommentCount = 0;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 566,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "last to edit refers to MAX(LastEditDate);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 567,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "the latest badge refers to Name FROM badges where MAX(Date);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 568,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "adult users refer to Age BETWEEN 19 and 65; over 5000 upvotes refer to UpVotes > 5000;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 569,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "SUBTRACT(Date from stats_badges, CreationDate) where DisplayName = 'Zolomon';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 570,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "the latest created user account refers to MAX(CreationDate);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 571,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "the latest comment refers to MAX(CreationDate);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 572,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "Citizen Patrol' is the name of the badge;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 573,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "tag specified as 'careers' refers to TagName = 'careers';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 574,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "DisplayName = 'IrishStat'; when create his or her account refers to CreationDate;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 575,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "bounty amount over 30 refers to BountyAmount > = 30;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 576,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "The user with higher reputation has more influence; DIVIDE(COUNT(stats_posts.Id where Score > = 50 and MAX(Reputation))), COUNT(stats_posts.Id where MAX(Reputation)) as percentage;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 577,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "score less than 20 refers to Score < 20;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 578,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "ID below 15 refers to Id < 15; have 20 count of posts and below refers to Count < = 20;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 579,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "tag named sample refers to TagName = 'sample';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 580,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      { "content": "Text = 'fine, you win :)';", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 581,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "Title = 'How can I adapt ANOVA for binary data?';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 582,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "views ranging from 100 to 150 refers to ViewCount BETWEEN 100 and 150; comment with the highest score refers to Text where MAX(Score);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 583,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "commented with webiste refers to the value contains 'http://'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 584,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "view count lower than 5 refers to ViewCount < 5;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 585,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "in posts with 1 comment refers to CommentCount = 1;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 586,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "Title = 'Group differences on a five point Likert item';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 587,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "commented \"R is also lazy evaluated.\" refers to Text of the comment;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 588,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "comments refer to Text; username of Harvey Motulsky refers to DisplayName = 'Harvey Motulsky';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 589,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "DownVotes = 0; Score BETWEEN 1 and 5",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 590,
    "tables": [
      "dataroom_eval_bird.codebase_community.postlinks",
      "dataroom_eval_bird.codebase_community.posthistory",
      "dataroom_eval_bird.codebase_community.badges",
      "dataroom_eval_bird.codebase_community.posts",
      "dataroom_eval_bird.codebase_community.users",
      "dataroom_eval_bird.codebase_community.tags",
      "dataroom_eval_bird.codebase_community.votes",
      "dataroom_eval_bird.codebase_community.comments"
    ],
    "instructions": [
      {
        "content": "DIVIDE(COUNT(UserId where UpVotes = 0 and Score BETWEEN 5 and 10)), (COUNT(UserId where Score BETWEEN 5 and 10)) as percentage;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 591,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "3-D Man refers to superhero_name = '3-D Man'; superpowers refers to power_name",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 592,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "super power of \"Super Strength\" refers to power_name = 'Super Strength'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 593,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "super power of \"Super Strength\" refers to power_name = 'Super Strength'; a height of over 200cm refers to height_cm > 200",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 594,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "15 super powers refers to COUNT(full_name) > 15",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 595,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "blue eyes refers to colour = 'Blue' and eye_colour_id = colour.id;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 596,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "Apocalypse refers to superhero_name = 'Apocalypse'; colour of skin refers to colour where skin_colour_id = colour.id",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 597,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "blue eyes refers to colour = 'Blue' and eye_colour_id = colour.id; super power of \"Agility\" refers to power_name = 'Agility'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 598,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "blue eyes refers to colour = 'Blue' and eye_colour_id = colour.id; blond hair refers to colour = 'Blond' and hair_colour_id = colour.id; super power of \"Agility\" refers to power_name = 'Agility'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 599,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "published by Marvel Comics refers to publisher_name = 'Marvel Comics'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 600,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "the tallest hero refers to MAX(height_cm); published by Marvel Comics refers to publisher_name = 'Marvel Comics'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 601,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "the publisher refers to publisher_name; Sauron refers to superhero_name = 'Sauron'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 602,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "the superheroes from Marvel Comics refers to publisher_name = 'Marvel Comics'; blue eyes refers to colour = 'Blue' and eye_colour_id = colour.id",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 603,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "superheroes from Marvel Comics refers to publisher_name = 'Marvel Comics'; average height of the superheroes refers to AVG(height_cm)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 604,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "the superheroes from Marvel Comics refers to publisher_name = 'Marvel Comics'; super power of \"Super Strength\" refers to power_name = 'Super Strength'; Calculation = MULTIPLY(DIVIDE(SUM(power_name = 'Super Strength'), COUNT(id)), 100)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 605,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "superheroes that DC Comics published refers to publisher_name = 'DC Comics'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 606,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "the slowest superhero refers to attribute_name = 'Speed' where MIN(attribute_value); publisher refers to publisher_name",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 607,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "gold-eyed refers to colour = 'Gold' where eye_colour_id = colour.id; superheroes that Marvel Comics published refers to publisher_name = 'Marvel Comics'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 608,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "Blue Beetle II refers to superhero_name = 'Blue Beetle II'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 609,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "superheroes with blonde hair refers to colour = 'Blond' where hair_colour_id = colour.id",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 610,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "the dumbest superhero refers to MIN(attribute_value) where attribute_name = 'Intelligence'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 611,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "Copycat is the superhero_name;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 612,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "durability of less than 50 refers to attribute_name = 'Durability' AND attribute_value < 50",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 613,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "name of superheroes refers to refers to superhero_name; the power of death touch refers to power_name = 'Death Touch'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 614,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "female refers to gender = 'Female'; strength value of 100 refers to attribute_name = 'Strength' AND attribute_value = 100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 615,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "name of the superhero refers to superhero_name; superhero that has the most powers refers to MAX(COUNT(superhero_name))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 616,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "vampire superheroes refers to race = 'Vampire'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 617,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "published by Marvel Comics refers to publisher_name = 'Marvel Comics'; superheroes who act in their own self-interest or make decisions based on their own moral code refers to alignment = 'Bad'; calculation = MULTIPLY(DIVIDE(SUM(alignment = 'Bad); count(id)), 100)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 618,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "DC refers to publisher_name = 'DC Comics'; Marvel Comics refers to publisher_name = 'Marvel Comics'; calculation = SUBTRACT(SUM(publisher_name = 'Marvel Comics'), SUM(publisher_name = 'DC Comics'))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 619,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "Star Trek is the publisher_name;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 620,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "average attribute value of all superheroes refers to AVG(attribute_value)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 621,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "superheroes without full name refers to full_name IS NULL",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 622,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "eye colour refers to colour where eye_colour_id = colour.id;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 623,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "superpowers refers to power_name; Deathlok refers to superhero_name = 'Deathlok'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 624,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "female refers to gender_id = 2; average weight refers to AVG(weight_kg)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 625,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "male refers to gender = 'Male'; superpowers refers to power_name;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 626,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "alien superheroes refers to race = 'Alien'; name of superhero refers to superhero_name;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 627,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "height from 170 to 190 refers to height_cm BETWEEN 170 AND 190; no eye color refers to eye_colour_id = 1",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 628,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "superpower refers to hero_power",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 629,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "Demi-God superheroes refers to race = 'Demi-God'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 630,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "bad superheroes refers to alignment_id = Bad",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 631,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "weighed 169 kg refers to weight_kg = 169",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 632,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "185 cm tall refers to height_cm = 185; human superhero refers to race = 'human'; hair colour refers to colour where hair_colour_id = colour.id;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 633,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "the heaviest superhero refers to MAX(weight_kg); eye colour refers to colour where eye_colour_id = colour.id;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 634,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "height between 150 to 180 refers to height_cm BETWEEN 150 AND 180; heroes published by Marvel Comics refers to publisher_id = 13; calculation = MULTIPLY(DIVIDE(SUM(publisher.id = 13)), COUNT(publisher.id), 100)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 635,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "Calculation = weight_kg > MULTIPLY(AVG(weight_kg), 0.79)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 636,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "power that superheroes have the most refers to MAX(COUNT(power_name))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 637,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "Abomination refers to superhero_name = 'Abomination';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 638,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "superpowers refers to power_name; heroes with ID 1 refers to hero_id = 1;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 639,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "stealth power refers to power_name = 'stealth';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 640,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "highest attribute in strength refers to MAX(attribute_value) WHERE attribute_name = 'strength';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 641,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "average = DIVIDE(COUNT(superhero.id), SUM(skin_colour_id = 1)); no skin colour refers to skin_colour_id WHERE colour.id = 1;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 642,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "published by Dark Horse Comics refers to publisher_name = 'Dark Horse Comics';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 643,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "which superhero refers to superhero_name; most durability refers to MAX(attribute_value) WHERE attribute_name = 'durability'; published by Dark Horse Comics refers to publisher_name = 'Dark Horse Comics';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 644,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "eye colour refers to colour.colour where eye_colour_id = colour.id; Abraham Sapien is the full name of superhero;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 645,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "name of superheroes refers to superhero_name; flight power refers to power_name = 'Flight';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 646,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "eyes refers to eye_colour_id; hair refers to hair_colour_id; skin colour refers to skin_colour_id; female superheroes refers to gender = 'Female'; published by Dark Horse Comics refers to publisher_name = 'Dark Horse Comics';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 647,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "which superhero refers to superhero_name; the same eyes, hair and skin colour refers to hair_colour_id = skin_colour_id AND hair_colour_id = eye_colour_id; publisher refers to publisher_name;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 648,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "group refers to race; A-Bomb refers to superhero_name = 'A-Bomb';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 649,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "percentage = MULTIPLY(DIVIDE(SUM(colour = 'Blue' WHERE gender = 'Female'), COUNT(gender = 'Female')), 100); blue refers to the color; female refers to gender = 'Female';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 650,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "hero name refers to superhero_name; Charles Chandler is the full name of superhero;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 651,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "Agent 13 hero refers to superhero_name = 'Agent 13';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 652,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "adaptation power refers to power_name = 'Adaptation';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 653,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "Amazo hero refers to superhero_name = 'Amazo';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 654,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "Hunter Zolomon is the full name of superhero; list the powers refers to power_name;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 655,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "heights of the heroes refers to height_cm; eye colours are amber refers to colour.colour = 'Amber' WHERE eye_colour_id = colour.id;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 656,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "heroes' names refers to superhero_name; eyes and hair colours are both black refers to eye_colour_id AND hair_colour_id WHERE colour.colour = 'Black';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 657,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "skin colours are gold refers to colour.colour = 'Gold' WHERE skin_colour_id = colour.id;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 658,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "vampire heroes refers to race = 'Vampire';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 659,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "names of superheroes refers to superhero_name; neutral alignment refers to alignment = 'Neutral';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 660,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "highest attribute value in strength refers to MAX(attribute_value) WHERE attribute_name = 'Strength';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 661,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "Cameron Hicks refers to superhero_name = 'Cameron Hicks';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 662,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "percent = MULTIPLY(DIVIDE(SUM(gender = 'Female' WHERE publisher_name = 'Marvel Comics'), COUNT(publisher_name = 'Marvel Comics')), 100); female heroes refers to gender = 'Female'; Marvel Comics refers to publisher_name = 'Marvel Comics';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 663,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "average = AVG(weight_kg); aliens refers to race = 'Alien';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 664,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "difference = SUBTRACT(SUM(weight_kg WHERE full_name = 'Emil Blonsky'), SUM(weight_kg WHERE full_name = 'Charles Chandler')); Emil Blonsky is the full name of superhero; Charles Chandler is the full name of superhero;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 665,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "average = DIVIDE(SUM(height_cm), COUNT(all heros));",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 666,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "Abomination refers to superhero_name = 'Abomination'; superpower refers to power_name;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 667,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "race \"god/eternal\" refers to race_id = 21; male refers to gender.id = 1",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 668,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "which hero refers to superhero_name; fastest refers to MAX(attribute_value) WHERE attribute_name = 'Speed';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 669,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "neutral alignment refers to alignment_id = 3;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 670,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "3-D Man is the superhero_name. attributes refers to attribute_name; values refers to attribute_value;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 671,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "which superheroes refers to superhero_name; blue eyes refers to eye_colour_id = 7; brown hair refers to hair_colour_id = 9;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 672,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "publisher refers to publisher_name; Hawkman refers to superhero_name = 'Hawkman'; Karate Kid refers to superhero_name = 'Karate Kid'; Speedy refers to superhero_name = 'Speedy';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 673,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "didn't have any publisher refers to publisher.id = 1;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 674,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "percentage = MULTIPLY(DIVIDE(SUM(superhero_name WHERE eye_colour_id = 7), COUNT(superhero_name)), 100.0); blue eyes refers to eye_colour_id = 7;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 675,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "ratio = DIVIDE(SUM(gender_id = 1) / SUM(gender_id = 2)); male superheroes refers to gender_id = 1; female superheroes refers to gender_id = 2;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 676,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "who refers to superhero_name; tallest superhero refers to MAX(height_cm);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 677,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "power ID refers to superpower.id; cryokinesis refers to power_name = 'cryokinesis';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 678,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "name of superhero refers to superhero_name; superhero ID 294 refers to superhero.id = 294;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 679,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "missing weight refers to weight_kg = 0 OR weight_kg = NULL;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 680,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "eye colour refers to colour.colour where eye_colour_id = colour.id; Karen Beecher-Duncan is the full name of superhero;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 681,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "superpowers refers to power_name; Helen Parr is the full name of superhero;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 682,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "weighs 108kg refers to weight_kg = 108; 188cm tall refers to height_cm = 188;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 683,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "superhero ID 38 refers to superhero.id = 38;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 684,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "maximum attribute value refers to MAX(attribute_value);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 685,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "superpowers refers to power_name;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 686,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "blue eyes refers to colour.colour = 'Blue' WHERE eye_colour_id = colour.id;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 687,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "average = AVG(attribute_value); neutral superheroes refers to alignment_id = 3;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 688,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "skin colour refers to colour.colour where skin_colour_id = colour.id; 100 attribute value refers to attribute_value = 100;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 689,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "good refers to alignment.id = 1; female refers to gender.id = 2;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 690,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "names of superheroes refers to superhero_name; attribute value between 75 to 80 refers to attribute_value BETWEEN 75 AND 80;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 691,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "blue-haired refers to colour.colour = 'blue' WHERE hair_colour_id = colour.id; male refers to gender = 'male';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 692,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "bad superheroes refers to alignment.id = 2; percentage = MULTIPLY(DIVIDE(SUM(gender.id = 2 WHERE alignment.id = 2), COUNT(alignment.id = 2)), 100.0); female refers to gender.id = 2;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 693,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "missing weight data refers to weight_kg = 0 OR T1.weight_kg = NULL; difference = SUBTRACT(SUM(colour.id = 7), SUM(colour.id = 1)); blue eyes refers to eye_colour_id WHERE colour.id = 7; no eye color refers to eye_colour_id WHERE colour.id = 1;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 694,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "how strong refers to attribute_value WHERE attribute_name = 'Strength'; the Hulk refers to superhero_name = 'Hulk';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 695,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "Ajax refers to superhero_name = 'Ajax'; superpowers refers to power_name;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 696,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "green-skinned refers to colour.colour = 'Green' WHERE skin_colour_id = colour.id; villains refers to alignment = 'Bad';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 697,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "female refers to gender = 'Female'; Marvel Comics refers to publisher_name = 'Marvel Comics';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 698,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "superheroes refers to superhero_name; can control wind refers to power_name = 'Wind Control';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 699,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "ability of Phoenix Force refers to power_name = 'Phoenix Force';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 700,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "heaviest refers to MAX(weight_kg); DC Comics refers to publisher_name = 'DC Comics'; superhero refers to superhero_name;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 701,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "average = AVG(height_cm); non-human superhero refers to race <> 'Human'; Dark Horse Comics refers to publisher_name = 'Dark Horse Comics';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 702,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "fastest refers to attribute_value = 100 WHERE attribute_name = 'Speed';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 703,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "DC refers to publisher_name = 'DC Comics'; Marvel Comics refers to publisher_name = 'Marvel Comics'; if SUM(publisher_name = 'DC Comics') > SUM(publisher_name = 'Marvel Comics'), it means DC Comics published more superheroes than Marvel Comics; if SUM(publisher_name = 'Marvel Comics') > SUM(publisher_name = 'Marvel Comics'), it means Marvel Comics published more heroes than DC Comics; difference = SUBTRACT(SUM(publisher_name = 'DC Comics'), SUM(publisher_name = 'Marvel Comics'));",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 704,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "weakest attribute refers to attribute_name WHERE MIN(attribute_value); Black Panther refers to superhero_name = 'Black Panther';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 705,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "Abomination refers to superhero_name = 'Abomination'; eye colour refers to colour.colour where eye_colour_id = colour.id;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 706,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "tallest superhero refers to MAX(height_cm);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 707,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "name the superhero refers to superhero_name; Charles Chandler is the full name of superhero;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 708,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "created by George Lucas refers to publisher_name = 'George Lucas'; percentage = MULTIPLY(DIVIDE(SUM(gender = 'Female' WHERE publisher_name = 'George Lucas'), COUNT(publisher_name = 'George Lucas')), 100.0); female refers to gender = 'Female';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 709,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "Marvel Comics refers to publisher_name = 'Marvel Comics'; percentage = MULTIPLY(DIVIDE(SUM(alignment = 'Good' WHERE publisher_name = 'Marvel Comics'), COUNT(publisher_name = 'Marvel Comics')), 100.0); good superheroes refers to alignment = 'Good';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 710,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "have John as their first name refers to full_name LIKE 'John%';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 711,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "lowest attribute value refers to MIN(attribute_value);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 712,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [{ "content": "", "type": "TEXT_INSTRUCTION" }]
  },
  {
    "room_id": 713,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "weight less than 100 refers to weight_kg < 100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 714,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "weight refers to weight_kg; superhero ID 40 refers to superhero.id = 40;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 715,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "hero ID refers to superhero.id; have intelligence as their power refers to power_name = 'Intelligence';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 716,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "eye colour refers to colour.colour where eye_colour_id = colour.id; Blackwulf refers to superhero_name = 'Blackwulf';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 717,
    "tables": [
      "dataroom_eval_bird.superhero.gender",
      "dataroom_eval_bird.superhero.superpower",
      "dataroom_eval_bird.superhero.publisher",
      "dataroom_eval_bird.superhero.superhero",
      "dataroom_eval_bird.superhero.colour",
      "dataroom_eval_bird.superhero.attribute",
      "dataroom_eval_bird.superhero.hero_power",
      "dataroom_eval_bird.superhero.race",
      "dataroom_eval_bird.superhero.alignment",
      "dataroom_eval_bird.superhero.hero_attribute"
    ],
    "instructions": [
      {
        "content": "power of superheroes refers to power_name; height greater than 80% of the average height of all superheroes = height_cm > MULTIPLY(AVG(height_cm), 0.8);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 718,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "driver reference name refers to driverRef; first qualifying period refers to q1; drivers who are eliminated in the first qualifying period refers to 5 drivers with MAX(q1); race number refers to raceId;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 719,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "race number refers to raceId; second qualifying period refers to q2; best lap time refers to MIN(q2);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 720,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "Shanghai is a name of location;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 721,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "introduction of races refers to url; Circuit de Barcelona-Catalunya is a name of circuit;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 722,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      { "content": "Germany is a name of country;", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 723,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "Renault is a name of constructor;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 724,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [{ "content": "", "type": "TEXT_INSTRUCTION" }]
  },
  {
    "room_id": 725,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      { "content": "Spain is a name of country;", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 726,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "coordinates refers to (lat, lng);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 727,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "information about races refers to url;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 728,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "coordinates refers to (lat, lng); position and location shares the same meaning.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 729,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      { "content": "race number refers to raceId;", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 730,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "drivers who finished the race refers to time has records;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 731,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "game and race are synonyms; drivers who finished the race should have record in time;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 732,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "drivers who finished the race refers to time is not empty; oldest driver refers to oldest dob;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 733,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "player and driver are synonyms; race number refers to raceId; introduction website of the drivers refers to url;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 734,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "fastest lap speed refers to MAX(fastestLapSpeed);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 735,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "race number refers to raceId; introduction website of the constructor refers to url;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 736,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "finished second refers to position = 2;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 737,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "race number refers to raceId; drivers who finished the race refers to time has value; the youngest is a driver where MAX(dob);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 738,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "race number refers to raceId; the best lap time refers to MIN(time)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 739,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "the fastest lap speed refers to (MAX) fastestLapSpeed\n\nSQL mentions raceId = 348, that is not in the question",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 740,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "race number refers to raceId; DIVIDE(SUBTRACT(fastestLapSpeed(raceId = 853), (fastestLapSpeed (raceId = 854)), (fastestLapSpeed(raceId = 853)) as percentage",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 741,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "DIVIDE(COUNT(driverid where time has value and date = '1983-07-16'), (COUNT(driverid where date = '1983-07-16')) as percentage",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 742,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "the first race refers to race happened in min(year);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 743,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "the first race refers to year = year(min(date)) and month = month(min(date));",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 744,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "the last round refers to max(round);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 745,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "the most number of races refers to max(round);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 746,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      { "content": "not hosted means not in;", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 747,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "the first refers to min(year);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 748,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      { "content": "the last refers to max(year);", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 749,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "British Grand Prix is the name of race; British refers to the United Kindom",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 750,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "the most points scored refers to max(points); full name contains forename and surname.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 751,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "the best lap time refers to min(time)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 752,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [{ "content": "AVG(time);", "type": "TEXT_INSTRUCTION" }]
  },
  {
    "room_id": 753,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "DIVIDE(COUNT(raceId) where surname = 'Hamilton', year >= 2010 and position>1), (COUNT(raceId) where surname = 'Hamilton', year >= 2010) as percentage;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 754,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "the most winning refers to MAX(COUNT(wins)); avg(points);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 755,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "youngest Japanese driver refers to max(dob); Japanese refers to nationality = 'Japanese'; age = 2022-year(dob)+1\n",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 756,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "from year 1990 to 2000 refers to year(date) between 1990 and 2000;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 757,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "in September 2005 refers to month(date) = 9 and year = 2005",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 758,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "track number less than 10 refers to position < 10",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 759,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "win from races refers to max(points)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 760,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "fastest lap refers to min(milliseconds)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 761,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "average points = AVG(points where year = 2000)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 762,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "first race refers to min(Year)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 763,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "percentage = divide(COUNT(races where country = Germany and name = 'Europearn Grand Prix'),COUNT(races where name = 'Europearn Grand Prix'))*100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 764,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "coordinates refers to (lat, lng)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 765,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "higher latitude refers to max(lat)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 766,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "reference name refers to circuitRef",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 767,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "highest altitude refers to max(alt)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 768,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "don't have a code refers to code is null",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 769,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "oldest driver refers to min(dob)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 770,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "Italian refers to nationality = 'italian'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 771,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      { "content": "website refers to url", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 772,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "reference name refers to driverRef",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 773,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "more information refers to url",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 774,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "link of the website refers to url",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 775,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "fastest lap time ever refers to min(fastestLapTime)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 776,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "rank the highest refers to min(rank)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 777,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "the fastest lap speed among all refers to max(fastestLapSpeed)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 778,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "final rank refers to positionOrder",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 779,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "the no. 4 grid formation refers to grid = 4",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 780,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "managed to finish the race refers to time is not null",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 781,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      { "content": "finish time refers to time", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 782,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "only champion's finished time is represented by 'HH:MM:SS.mmm'; where can I know more refers to url",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 783,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "from the USA refers to nationality = 'American'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 784,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "COUNT(raceID) > 0 reveals that this driver participated in races; drivers who finished the race refers to time has value.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 785,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "average fastest lap time = avg(fastestLapTime); The time is recorded on 'MM:SS.mmm'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 786,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "completing all the laps refers to time is not null; rate = divide(COUNT(raceID where time is not null), COUNT(raceID))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 787,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "how much faster in percentage = divide(subtract(incremental time, champion time), last_driver time) * 100%; last driver finished time = incremental time + champion time; only champion's finished time is represented by 'HH:MM:SS.mmm'; finished the game refers to time is not null",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 788,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "Australia is the country; Melbourne is the location of circuit;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 789,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "location coordinates refers to (lat, lng); the US refers to country = 'USA';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 790,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "born after 1980 refers to year (dob) >1980;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 791,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "average points = AVG(points); British is a nationality",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 792,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "race at 18 refers to raceID = 18;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 793,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "2 races refers to COUNT(raceID) = 2;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 794,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "lap numbers of over 50 refers to laps > 50;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 795,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "from 2007 to 2009 refers to year between 2007 and 2009; race completion refers to time is not null; percentage = Divide(COUNT(DriverID where time is not null and year between 2007 and 2009),Count (DriverID where year between 2007 and 2009))*100;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 796,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "only champion's finished time is represented by 'HH:MM:SS.mmm'; finished the game refers to time is not null.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 797,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "born after 1975 refers to year(dob) >1975;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 798,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "haven't finished the race refers to time is null;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 799,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "in 2009 refers to year = 2009; Only the time of the champion shows in the format of \"hour: minutes: seconds.millionsecond\"",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 800,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "Spanish Grand Prix is the name of race refers to name = 'Spanish Grand Prix'; average fastest lap speed refers to avg(fastestLapSpeed);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 801,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "shortest actual finishing time refers to Min(milliseconds) except milliseconds = null;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 802,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "born before 1985 refers to year(dob)<1985; in 2000 to 2005 refers to year between 2000 and 2005; percentage = Divide(COUNT(driverId where year (dob) <1985 and laps >50),COUNT(DriverID where year between 2000 and 2005) *100;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 803,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "lap time less than 01:00.00 refers to seconds < 120;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 804,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      { "content": "nationality = 'America'", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 805,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "youngest driver refers to Max (year(dob)); Netherlandic and Dutch refer to the same country",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 806,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "reference name refers to driverRef;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 807,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "born in 1980 refers to year(dob) = 1980;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 808,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "born from 1980-1990 refers to year(dob) between 1980 and 1990; earliest lap time refers to Min(time);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 809,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "oldest refers to MIN(year(dob)); reference names appear in drverRef.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 810,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "born in 1971 refers to year(dob) = 1971; has the fastest lap time refers to fastestLapTime has values",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 811,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "born before 1982 refers to year(dob) < 1982; latest lap time refers to Max(time);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 812,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "'has the fastest lap time?' refers to fastestLapTime has values",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 813,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "lowest speed of lap time refers to Max(time);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 814,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "fastest time refers to Min(time);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 815,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "disqualified refers to statusID = 2, finisher refers to time! = null; race no. refers to raceId; raceId > 50 and raceId < 100;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 816,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "location coordinates refers to (lat,lng);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 817,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "finisher refers to time is not null;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 818,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "passed the second qualifying lap refers to q2 is not null; birthday refers to dob; reference name of drivers refers to driverRef; race no. refers to raceId;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 819,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "youngest driver refers to Max (year(dob));",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 820,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "disqualified refers to statusID = 2;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 821,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "introduction website refers to url; Italian is a nationality",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 822,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "introduction website refers to url;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 823,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "slowest time refers to Max(time);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 824,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      { "content": "fastest refers to Min(time);", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 825,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "top 10 refers to rank <11; AVG(fastestLapTime);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 826,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "born between 1980-1985 refers to 1980< year(dob)>1985; Average pitstop duration refers to Divide(SUM(duration),COUNT(duration)); shortest average refers to Min(avg(duration));",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 827,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "Only the time of the champion shows in the format of \"hour: minutes: seconds.millionsecond\";",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 828,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "the time of the champion shows in the format of \"minutes: seconds.millionsecond\" in which Max(time); constructor reference name refers to constructorRef; website refers to url",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 829,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "Full name refers to forname, surname; Date of birth refers to dob; year(dob) BETWEEN '1981' AND '1991'; Austrian is a nationality",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 830,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "FFull name refers to forname+surname; Nationality refers to German; Date of birth refers to dob; year(dob) BETWEEN '1971' AND '1985'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 831,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "coordinates expressed in latitude and longitude refers to (lat, lng)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 832,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "Monaco Grand Priz refers to the race; race in year between 1980 and 2010",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 833,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      { "content": "Average score = AVG(points)", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 834,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "races in date between '2000-01-01' and '2010-12-31'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 835,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "Citizenship of majority of drivers = MAX(nationality); citizenship and nationality are synonyms\n\n",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 836,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "victories refer to wins; 91st refers to points\n\n",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 837,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "Fastest lap speed refers to MIN(fastestLapTime)\n\n",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 838,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "full location refers to location+country; most recent race = MAX(date)\n\n",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 839,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "Ranked 1st in the 3rd qualifying race refer to MIN(q3); 2008 is the year of race; full name of racer = forename, surname",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 840,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "full name refers to forename+surname; Youngest racer = MAX(dob)\n",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 841,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "number of accidents refers to the number where statusid = 3; Canadian Grand Prix refers to the race of name\n",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 842,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "oldest racer refers to MIN(dob); full name refers to forename, surname.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 843,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "longest time spent at pitstop refers to MAX(duration)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 844,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "longest time refes to MAX(duration);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 845,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "time spent at pit stop refers to duration",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 846,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "lap recod means the fastest time recorded which refers to time",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 847,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "shortest lap time refers to MIN(time)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 848,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "fastest lap refers to MIN(time)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 849,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "lap record means the fastest time recorded which refers to time",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 850,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "lap record means the fastest time recorded which refers to time, how long spent at pitstop refers to duration",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 851,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "lap records means the fastest time recorded which refers to time; coordinates are expressed as latitude and longitude which refers to (lat, lng)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 852,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      {
        "content": "average time in milliseconds spent at pit stop refers to AVG(milliseconds)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 853,
    "tables": [
      "dataroom_eval_bird.formula_1.circuits",
      "dataroom_eval_bird.formula_1.status",
      "dataroom_eval_bird.formula_1.drivers",
      "dataroom_eval_bird.formula_1.driverstandings",
      "dataroom_eval_bird.formula_1.races",
      "dataroom_eval_bird.formula_1.constructors",
      "dataroom_eval_bird.formula_1.constructorresults",
      "dataroom_eval_bird.formula_1.laptimes",
      "dataroom_eval_bird.formula_1.qualifying",
      "dataroom_eval_bird.formula_1.pitstops",
      "dataroom_eval_bird.formula_1.seasons",
      "dataroom_eval_bird.formula_1.constructorstandings",
      "dataroom_eval_bird.formula_1.results"
    ],
    "instructions": [
      { "content": "average = AVG(milliseconds)", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 854,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "highest overall rating refers to MAX(overall_rating);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 855,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "tallest player refers to MAX(height);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 856,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "preferred foot when attacking refers to preferred_foot; lowest potential refers to MIN(potential);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 857,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "overall_rating > = 60 AND overall_rating < 65; players whose going to be in all of your attack moves instead of defensing refers to defensive_work_rate = 'low';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 858,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "perform better in crossing actions refers to MAX(crossing)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 859,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "league that had the most goals refers to MAX(SUM(home_team_goal, away_team_goal)); 2016 season refers to season = '2015/2016';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 860,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "home team lost the matches refers to SUBTRACT(home_team_goal, away_team_goal) < 0; 2016 season refers to season = '2015/2016';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 861,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "full name refers to player_name; players with highest number of penalties refers to MAX(penalties);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 862,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "Scotland Premier League refers to League.name = 'Scotland Premier League'; away team refers to away_team_api_id; away team that won the most refers to MAX(SUBTRACT(away_team_goal, home_team_goal) > 0); 2010 season refers to season = '2009/2010';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 863,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "speed in which attacks are put together refers to buildUpPlaySpeed;highest build up play speed refers to MAX(buildUpPlaySpeed)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 864,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "most matches end as draw refers to MAX(SUM(home_team_goal = away_team_goal)); 2016 season refers to season = '2015/2016';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 865,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "players age at present = SUBTRACT((DATETIME(), birthday)); sprint_speed > = 97; between 2013 to 2015 refers to date > = '2013-01-01 00:00:00' AND date < = '2015-12-31 00:00:00';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 866,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "name of the league refers to League.name; league with highest matches of all time refers to MAX(COUNT(league_id));",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 867,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "average height = DIVIDE(SUM(height), COUNT(id)); players born between 1990 and 1995 refers to birthday > = '1990-01-01 00:00:00' AND birthday < '1996-01-01 00:00:00';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 868,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "highest above average overall ratings refers to MAX(overall_rating); in 2010 refers to substr(date,1,4) = '2010';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 869,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "teams with more than 50 but less than 60 build-up play speed refers to buildUpPlaySpeed BETWEEN 51 AND 59;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 870,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "long name of teams refers to team_long_name; build-up play passing refers to buildUpPlayPassing; above-average build-up play passing = DIVIDE(SUM(buildUpPlayPassing), COUNT(team_long_name) WHERE buildUpPlayPassing IS NOT NULL) < buildUpPlayPassing; in 2012 refers to strftime('%Y', date) = '2012';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 871,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "players who prefer left foot refers to preferred_foot = 'left'; percentage of players who prefer left foot = DIVIDE(MULTIPLY((SUM(preferred_foot = 'left'), 1.0)), COUNT(player_fifa_api_id)); born between 1987 and 1992 refers to birthday BETWEEN '1987-01-01 00:00:00'AND '1992-12-31 00:00:00';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 872,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "number of goals made in all seasons combine = SUM(home_team_goal, away_team_goal);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 873,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "average number of long shot = DIVIDE(SUM(long_shots), COUNT(player_fifa_api_id));",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 874,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "height > 180; average heading accuracy = DIVIDE(SUM(heading_accuracy), COUNT(player_fifa_api_id));",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 875,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "normal build-up play dribbling class refers to buildUpPlayDribblingClass = 'Normal'; in 2014 refers to date > = '2014-01-01 00:00:00' AND date < = '2014-01-31 00:00:00'; names of the teams refers to team_long_name; less than average chance creation passing = DIVIDE(SUM(chanceCreationPassing), COUNT(id)) > chanceCreationPassing;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 876,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "name of league refers to League.name; average goals by the home team is higher than the away team = AVG(home_team_goal) > AVG(away_team_goal);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 877,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "short name of the football team refers to team_short_name; Queens Park Rangers refers to team_long_name = 'Queens Park Rangers';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 878,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "players with a birthyear of 1970 and a birthmonth of October refers to substr(birthday,1,4) AS year, substr(birthday,6,2) AS month WHERE year = '1970' AND month = '10';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 879,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [{ "content": "", "type": "TEXT_INSTRUCTION" }]
  },
  {
    "room_id": 880,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "ADO Den Haag refers to team_long_name = 'ADO Den Haag'; freedom of movement in the 1st two thirds of the pitch refers to buildUpPlayPositioningClass;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 881,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "header's finishing rate refers to heading_accuracy; on 18/09/2014 refers to date = '2014-09-18 00:00:00';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 882,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "in year 2011 refers to strftime('%Y', date) = '2011';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 883,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "Scotland Premier League refers to League.name = 'Scotland Premier League';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 884,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "preferred foot when attacking refers to preferred_foot; youngest football player refers to latest birthday;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 885,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "potential score refers to potential; highest potential score refers to MAX(potential);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 886,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "weight < 130; preferred foot in attacking refers to preferred_foot; preferred_foot = 'left';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 887,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "chance creation passing class refers to chanceCreationPassingClass; chanceCreationPassingClass = 'Risky'; short name refers to team_short_name;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 888,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "football player who has the highest overall rating refers to MAX(overall_rating);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 889,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "name of the football league refers to League.name;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 890,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "average home team goal = AVG(home_team_goal) WHERE name = 'Poland' and season = '2010/2011';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 891,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "finishing rate refers to finishing; highest average finishing rate = MAX(AVG(finishing)); highest football player refers to MAX(height); shortest football player refers to MIN(height);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 892,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [{ "content": "height>180;", "type": "TEXT_INSTRUCTION" }]
  },
  {
    "room_id": 893,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "born after 1990 refers to strftime('%Y', birthday) = '1990';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 894,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "team names refers to team_long_name; speed class refers to buildUpPlaySpeedClass; buildUpPlaySpeedClass = 'Fast';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 895,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "overall_rating > 80; from 2008 to 2010 refers to strftime('%Y', date) BETWEEN '2008' AND '2010';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 896,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "potential score refers to potential;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 897,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      { "content": "preferred_foot = 'left';", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 898,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "passing class refers to buildUpPlayPassingClass; CLB refers to team_short_name = 'CLB';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 899,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "build up play passing refers to buildUpPlayPassing; buildUpPlayPassing > 70; short names refers to team_short_name;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 900,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "from 2010 to 2015 refers to strftime('%Y', date) BETWEEN '2010' AND '2015'; height > 170;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 901,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "shortest height refers to MIN(height);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 902,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "Italy Serie A from refers to League.name = 'Italy Serie A';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 903,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "build up play speed refers to buildUpPlaySpeed; buildUpPlaySpeed = 31; build up play dribbling refers to buildUpPlayDribbling; buildUpPlayDribbling = 53; build up play passing refers to buildUpPlayPassing; buildUpPlayPassing = 32; short name of the team refers to team_short_name;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 904,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "average overall rating = AVG(overall_rating);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 905,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "Germany 1. Bundesliga refers to League.name = 'Germany 1. Bundesliga'; from August to October 2008 refers to strftime('%Y-%m', date) BETWEEN '2008-08' AND '2008-10';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 906,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "short name of the football team refers to team_short_name; home team goal refers to home_team_goal; home_team_goal = 10;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 907,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "balance score refers to balance; highest balance score refers to MAX(balance); potential score refers to potential; potential = 61;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 908,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "difference of the average ball control = SUBTRACT(AVG(ball_control WHERE player_name = 'Abdou Diallo'),\u00a0AVG(ball_control WHERE player_name = 'Aaron Appindangoye'));",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 909,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "long name for the team refers to team_long_name; team_short_name = 'GEN';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 910,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "older player refers to older birthday;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 911,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "preferred foot when attacking refers to preferred foot; preferred_foot = 'left'; players who would remain in his position when the team attacked refers to attacking_work_rate = 'low';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 912,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "Belgium Jupiler League refers to League.name = 'Belgium Jupiler League';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 913,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "Germany refers to Country.name = 'Germany';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 914,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "overall strength refers to overall_rating; strongest overall strength refers to MAX(overall_rating);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 915,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "players born before the year 1986 refers to strftime('%Y', birthday)<'1986'; players who would remain in his position and defense while the team attacked refers to defensive_work_rate = 'high';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 916,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "player who perform best in crossing actions refers to MAX(crossing);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 917,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "height > 180; volley score refers to volleys; volleys > 70;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 918,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "volley score refers to volleys; volleys > 70; dribbling score refers to dribbling; dribbling > 70;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 919,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "Belgium refers to Country.name = 'Belgium';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 920,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "long passing score refers to long_passing; oldest player refers to oldest birthday;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 921,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "Belgium Jupiler League refers to League.name = 'Belgium Jupiler League';\u00a0in April, 2009 refers to strftime('%Y', date) = '2009' AND strftime('%m', date) = '04';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 922,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "league that had the most matches in the 2008/2009 season refers to MAX(league_id WHERE season = '2008/2009');",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 923,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "average overall rating = DIVIDE(SUM(overall_rating), COUNT(id)); born before the year 1986 refers to strftime('%Y', birthday) < '1986';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 924,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "how much higher in percentage = MULTIPLY(DIVIDE(SUBTRACT(overall_rating WHERE player_name = 'Ariel Borysiuk', overall_rating WHERE player_name = 'Paulin Puel'), overall_rating WHERE player_name = 'Paulin Puel'), 100);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 925,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "Heart of Midlothian refers to team_long_name = 'Heart of Midlothian'; average build up play speed refers to\u00a0 AVG(buildUpPlaySpeed)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 926,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "Pietro Marino refers to player_name = 'Pietro Marino'; average overall rating AVG(T1.overall_rating)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 927,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "Aaron Lennox's refers to T2.player_name = 'Aaron Lennox'; total crossing score refers to SUM(crossing)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 928,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "Ajax's refers to team_long_name = 'Ajax'; chance creation passing score refers to MAX(chanceCreationPassing); classified as chanceCreationPassingClass",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 929,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "Abdou Diallo refers to player_name = 'Abdou Diallo'; foot is preferred refers to preferred_foot",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 930,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "Dorlan Pabon refers to T2.player_name = 'Dorlan Pabon'; highest overall rating refers to MAX(overall_rating)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 931,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "Parma refers to team_long_name = 'Parma'; average number of goals refers to AVG(away_team_goal)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 932,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "77 points overall rating refers to overall_rating = 77; on 2016/6/23; oldest refers to MIN(birthday)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 933,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "Aaron Mooy refers to player_name = 'Aaron Mooy'; on 2016/2/4 refers to date = '2016-02-04 00:00:00'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 934,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "Francesco Parravicini refers to player_name = 'Francesco Parravicini'; on 2010/8/30 refers to date = '2010-08-30 00:00:00'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 935,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "Francesco Migliore's\u00a0 refers to player_name = 'Francesco Migliore'; on 2015/5/1 refers to date = '2015-05-01 00:00:00'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 936,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "Kevin Berigaud refers to player_name = 'Kevin Berigaud'; on 2013/2/22 refers to date = '2013-02-22 00:00:00'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 937,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "Kevin Constant refers to player_name = 'Kevin Constant'; highest crossing score refers to MAX(crossing)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 938,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "\"Willem II\" refers to team_long_name = 'Willem II'; on 2011/2/22 refers to date = '2012-02-22 00:00:00'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 939,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "\"LEI\" refers to team_short_name = 'LEI'; on 2015/9/10 refers to\u00a0 date = '2015-09-10 00:00:00'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 940,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "\"FC Lorient\" refers to team_long_name = 'FC Lorient'; on 2010/2/22\u00a0 refers to date = '2010-02-22",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 941,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "\"PEC Zwolle\" refers to team_long_name = 'PEC Zwolle'; on 2013/9/20 refers to date = '2013-09-20 00:00:00'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 942,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "\"Hull City\" refers to team_long_name = 'Hull City'; on 2010/2/22 refers to date = '2010-02-22 00:00:00'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 943,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "\"Hannover 96\" refers to team_long_name = 'Hannover 96'; on 2015/9/10 refers to date = '2015-09-10 00:00:00'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 944,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "average overall rating refers to avg(overall_rating); Marko Arnautovic refers to player_name = 'Marko Arnautovic'; from 2007/2/22 to 2016/4/21 refers to date BETWEEN '2007-02-22 00:00:00' and '2016-04-21 00:00:00'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 945,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "Landon Donovan's refers to player_name = 'Landon Donovan'; Jordan Bowery refers to player_name = 'Jordan Bowery';\u00a0 percentage refers to DIVIDE(SUBTRACT(player_name = 'Landon Donovan' overall_rating; player_name = 'Jordan Bowery' overall_rating), player_name = 'Landon Donovan' overall_rating)*100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 946,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      { "content": "tallest refers to MAX(height)", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 947,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "heaviest refers to MAX(weight)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 948,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "35 years old and above refers to datetime(CURRENT_TIMESTAMP,'localtime') - datetime(birthday) > 34",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 949,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "Aaron Lennon refers to player_name = 'Aaron Lennon'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 950,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "Daan Smith refers to player_name = 'Daan Smith'; Filipe Ferreira refers to player_name = 'Filipe Ferreira'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 951,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "age are 30 years old and below refers to SUBTRACT(datetime(CURRENT_TIMESTAMP,'localtime'), datetime(birthday) < 31)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 952,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "strongest players refers to MAX(overall_rating)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 953,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "highest potential refers to MAX(potential)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 954,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "tend to be attacking when their mates were doing attack moves refers to attacking_work_rate = 'high';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 955,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "eldest player refers to MAX(SUBTRACT(datetime(CURRENT_TIMESTAMP,'localtime'),datetime(birthday))); finishing rate of 1 refers to finishing = 1",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 956,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "name of players refers to player_name; Belgium is name of country",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 957,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "vision scores of 90 and above refers to vision > 89",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 958,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "heaviest average weights refers to MAX(AVG(weight))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 959,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "slow speed class refers to buildUpPlaySpeedClass = 'Slow'; long name refers to team_long_name",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 960,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "played safe while creating chance of passing refers to chanceCreationPassingClass = 'Safe'; short name of team refers to team_short_name",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 961,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "average heights refers to Avg(height); Italy is name of country",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 962,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "over 180 cm tall refers to height > 180; name of football player refers to player_name",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 963,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "first name \"Aaron\" refers to player_name LIKE 'Aaron%'; born after the 1990s refers to birthday > '1990'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 964,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "difference between players 6 and 23's jumping scores refers to SUBTRACT(jumping AND id = 6,jumping AND id = 23)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 965,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "lowest potential players refers to MIN(potential); prefer to use the right foot refers to preferred_foot = 'right'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 966,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "highest potential score for crossing refers to MAX(crossing); preferred to use their left foots refers to preferred_foot = 'left'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 967,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "strength and stamina score of more than 80 refers to stamina > 80 and strength > 80",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 968,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "September 24, 2008 refers to date like '2008-09-24%'; final score for home team refers to home_team_goal; final score for away team refers to away_team_goal",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 969,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "Alexis Blin's refers to player_name = 'Alexis Blin'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 970,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "KSV Cercle Brugge refers to team_long_name = 'KSV Cercle Brugge'; speed class refers to buildUpPlaySpeedClass",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 971,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "In the 2015\u20132016 season refers to season = '2015/2016'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 972,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "highest score of the home team refers to MAX(home_team_goal)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 973,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "heaviest weight refers to MAX(weight)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 974,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "in the 2015\u20132016 season season = '2015/2016'; league with most games refers to team_long_name where MAX(COUNT(id))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 975,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "full name refers to team_long_name; away team refers to away_team_api_id; scored the most goals refers to MAX(away_team_goal)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 976,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "overall strength is the greatest refers to MAX(overall_rating)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 977,
    "tables": [
      "dataroom_eval_bird.european_football_2.team_attributes",
      "dataroom_eval_bird.european_football_2.player",
      "dataroom_eval_bird.european_football_2.match",
      "dataroom_eval_bird.european_football_2.league",
      "dataroom_eval_bird.european_football_2.country",
      "dataroom_eval_bird.european_football_2.player_attributes",
      "dataroom_eval_bird.european_football_2.team"
    ],
    "instructions": [
      {
        "content": "percentage refers to DIVIDE(COUNT(height < 180 AND overall_rating > 70),COUNT(id)) * 100%",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 978,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "male refers to SEX = 'M'; in-patient refers to Admission = '+'; outpatient refers to Admission = '-'; SUBTRACT(COUNT(ID) where SEX = 'M' and Admission = '+', COUNT(ID) where SEX\u00a0 = 'M' and Admission = '-')",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 979,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "female refers to Sex = 'F'; patient who were born after 1930 refers to year(Birthday) > '1930'; calculation = DIVIDE(COUNT(ID) where year(Birthday) > '1930' and SEX = 'F'), (COUNT(ID) where SEX = 'F')",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 980,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "patient born between Year 1930 to 1940 refers to year(Birthday) BETWEEN '1930-01-01' AND '1940-12-31'; inpatient refers to Admission = '+'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 981,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "'SLE' refers to diagnosis; inpatient refers to Admission = '+'; outpatient refers to Admission = '-'; DIVIDE(COUNT(ID) where Diagnosis = 'SLE' and Admission = '+', COUNT(ID) where Diagnosis = 'SLE' and Admission = '-')",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 982,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "'30609' is an ID; disease means diagnosis",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 983,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "When was the examination taken refers to `Examination Date`",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 984,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "LDH beyond normal range refers to LDH > '500'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 985,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "age refers to SUBTRACT(year(current_timestamp), year(Birthday)); positive degree of coagulation refers to RVVT = '+'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 986,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "severe degree of thrombosis refers to thrombosis = 2; disease refers to diagnosis",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 987,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "who were born in 1937 refers to year(birthday) = '1937'; total cholesterol was beyond the normal range refers to `T-CHO` > = '250'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 988,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "albumin level lower than 3.5 refers to ALB < 3.5;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 989,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "female refers to sex = 'F'; total protein not within the normal range refers to TP < '6.0' or TP > '8.5'; calculation = DIVIDE((ID where sex = 'F' and TP < '6.0' or TP > '8.5'), COUNT(ID)) * 100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 990,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "in-patient refers to Admission = '+'; age 50 and above refers to SUBTRACT(year(current_timestamp), year(Birthday)) >= '50'; average anti-cardiolipin antibody (IgG) concentration refers to AVG(aCL IgG)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 991,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "female refers to sex = 'F'; came at the hospital in 1997 refers to year(Description) = '1997'; followed at the outpatient clinic refers to Admission = '-'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 992,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "age refers to SUBTRACT(YEAR(Birthday), YEAR(`First Date`))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 993,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "the most serious thrombosis refers to Thrombosis = '1' (the most severe one); women refers to sex = 'F'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 994,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "age gap refers to SUBTRACT(MAX(year(Birthday)) - MIN(year(Birthday))); normal triglyceride refers to tg > = 200",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 995,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "the youngest patient refers to MIN(BIRTHDAY);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 996,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "the year that concluded on December 31, 1998 refers to Date BETWEEN '1998-01-01' AND '1998-12-31'; male refers to SEX = 'M'; calculation = DIVIDE(COUNT(ID), 12)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 997,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "The oldest patient refers to MAX(Birthday); 'SJS' refers to diagnosis; (SUBTRACT(year(`First Date`)), year(Birthday)); age of the patients when they initially arrived at the hospital refers to year(Birthday)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 998,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "male refers to SEX = 'M'; female refers to SEX = 'F'; abnormal uric acid refers to UA < = '8.0' where SEX = 'M', UA < = '6.5' where SEX = 'F'; calculation = DIVIDE(SUM(UA <= '8.0' and SEX = 'M'), SUM(UA <= '6.5 and SEX = 'F'))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 999,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "hadn't undergone a medical examination until at least a year refers to SUBTRACT(year(`Examination Date`), year(`First Date`)) > = 1",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1000,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "underage patients refers to year(Birthday) < 18; three-year period from 1990 to 1993 refers to `Examination Date` between '1990-01-01' and '1993-12-31'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1001,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "male refers to SEX = 'M'; elevated means above the normal range; total bilirubin above the normal range refers to `T-BIL` > '2.0'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1002,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "the most common illness refers to MAX(COUNT(Diagnosis)); lab work between 1/1/1985 and 12/31/1995 refers to `Examination Date` between '1985-01-01' and '1995-12-31 '",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1003,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "average age for first half of 1999 refers to AVG(SUBTRACT('1999', year(Birthday))); October of 1991 refers to Date BETWEEN '1991-10-01' AND '1991-10-30'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1004,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "How old the patient refers to SUBTRACT(year(`Examination Date`), year(Birthday)); the highest hemoglobin count refers to MAX(HGB)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1005,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "anti-nucleus antibody refers to ANA; 1996/12/2 refers to `Examination Date` = '1996-12-02'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1006,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "total cholesterol normal level refers to N < 250",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1007,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "gender means SEX; 'AORTITIS' refers to Diagnosis;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1008,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "'SLE' refers to Diagnosis; 1994/2/19 refers to Description = '1994-02-19'; anti-Cardiolipin refers to aCL IgM; 1993/11/12 refers to Description = '1993/11/12'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1009,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "man refers to SEX = 'M'; women refers to SEX = 'F'; ALT glutamic pylvic transaminase status got 9 GPT = '9'; 1992/6/12 refers to Date = '1992-06-12'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1010,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "how old at that time refers to SUBTRACT('1992', year(Birthday)); uric acid level as 8.4 refers to UA = '8.4'; 1991/10/21 refers to Date = '1991-10-21'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1011,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "1991/6/13 refers to `First Date` = '1991-06-13'; 'SJS' refers to Diagnosis; total number of his/her Laboratory tests refers to COUNT(ID); 1995 refers to Date",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1012,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "'SLE' AND original diagnose refers to diagnosis; 1997/1/27 refer to `Examination Date` = '1997-01-27'; first came to the hospital refers to patient.`First Date`",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1013,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [{ "content": "", "type": "TEXT_INSTRUCTION" }]
  },
  {
    "room_id": 1014,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "born on 1959/2/18 refers to Birthday = '1959-02-18'; calculation = SUBTRACT(SUM(Birthday = '1959-02-18' and Date like '1981-11-%' THEN `T-CHO`), SUM(Birthday = '1959-02-18' and Date like '1981-12-%' THEN `T-CHO`))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1015,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "'Behcet' refers to diagnosis; exam between 01/01/1997 and 12/31/1997 refers to YEAR(Description) > = '1997-1-1' AND YEAR(Description) < '1998-1-1'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1016,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "examined between 1987/7/6 and 1996/1/31 refers to Date BETWEEN '1987-07-06' AND '1996-01-31'; GPT level greater than 30 refers to GPT > 30; ALB level less than 4 ALB < 4",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1017,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "female refers to SEX = 'F'; born in 1964 refers to YEAR(Birthday) = 1964; admitted to the hospital refers to Admission = '+'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1018,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "thrombosis level 2 refers to Thrombosis = 2; ANA pattern of only S refers to ANA = 'S'; average anti-Cardiolip in antibody (IgM) refers to AVG(`aCL IgM`); calculation = MULTIPLY(AVG + AVG, 0.2)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1019,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "proteinuria level within the normal range refers to `U-PRO` > 0 AND `U-PRO` < 30; uric acid level below the normal range refers to UA < = 6.5; calculation = MULTIPLY(DIVIDE(UA < = 6.5, `U-PRO` > 0 AND `U-PRO` < 30)\uff0c100)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1020,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "male refers to SEX = 'M'; first presented to the hospital in 1981 refers to YEAR(`FIRST DATE`) = '1981'; BEHCET refers to diagnosis; calculation = DIVIDE(SUM(DIAGNOSIS = 'BEHCET') where YEAR(`FIRST DATE`) = '1981', MULTIPLY(COUNT(YEAR(`FIRST DATE`) = '1981')), 100)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1021,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "followed up at the outpatient clinic refers to Admission = '-'; laboratory test in April 1981 refers to Date like '1991-10%'; blood bilirubin level within the normal range refers to T-BIL < 2.0",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1022,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "Excluding all P only ANA Pattern refers to `ANA Pattern`! = 'p'; women refers to SEX = 'F'; born between 1980 and 1989 refers to BIRTHDAY",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1023,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "PSS' refers to diagnosis; blood level of C-reactive protein de 2+refers to CRP > 2; createnine 1 refers to CRE = 1; LDH 123 refers to LDH = 123",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1024,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "average blood albumin level refers to AVG(ALB); female refers to SEX = 'F'; PLT greater than 400 refers to PLT > 400; 'SLE' refers to diagnosis",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1025,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "the most common sign refers to MAX(symptoms); 'SLE' refers to diagnosis",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1026,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "medical information first documented refers to Description; disease refers to diagnosis; patient number refers to id",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1027,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "female refers to SEX = 'F'; 'APS' refers to diagnosis",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1028,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "underwent testing in 1997 refers to YEAR(DATE) = '1997'; protein levels within the normal range refers to tp > 6 and tp < 8.5",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1029,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "thrombocytopenia' refers to symptoms; 'SLE' refers to diagnosis; calculation = \u00a0 DIVIDE(SUM(DIAGNOSIS LIKE '%ITP%'), SUM(DIAGNOSIS LIKE '%SLE%')) MULTIPLY 100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1030,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "born in 1980 refers to YEAR(BIRTHDAY) = '1980'; 'RA' refers to diagnosis; women refers to SEX = 'F'; calculation = DIVIDE((SEX = 'F'), COUNT(SEX)) where YEAR(BIRTHDAY) = '1980' AND diagnosis = 'RA' MULTIPLY 100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1031,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "male refers to SEX = 'M'; underwent testing between 1995 and 1997 refers to `Examination Date` between '1995' and '1997'; BEHCET refers to diagnosis; did not stay in the hospital refers to Admission = '-'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1032,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "female refers to SEX = 'F'; white blood cells that were below 3.5 refers to WBC < 3.5",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1033,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "DATEDIFF(`Examination Date`, `First Date`)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1034,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "uric acid within a normal range refers to UA > 8.0 and SEX = 'M'; UA > 6.5 and SEX = 'F'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1035,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "AST glutamic oxaloacetic transaminase (GOT) index is above the normal range refers to GOT > = 60; when refers to DATE",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1036,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "AST glutamic oxaloacetic transaminase (GOT) index is within normal range refers to GOT < 60; examination in 1994 refers to year(Date) = 1994",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1037,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "male refers to SEX = 'M'; ALT glutamic pylvic transaminase (GPT) exceed the normal range refers to GPT > = 60",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1038,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "ALT glutamic pylvic transaminase beyond the normal range refers to GPT > 60; ascending order of their date of birth refers to MAX(Birthday)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1039,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "average index of the lactate dehydrogenase (LDH) refers to AVG(LDH); (LDH) within the normal range refers to LDH < 500",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1040,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "age refers to SUBTRACT(year(current_timestamp), year(Birthday)); lactate dehydrogenase (LDH) between 100-300 index above the normal range refers to LDH between 600 and 800;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1041,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "alkaliphophatase (ALP) within normal range refers to ALP < 300; inpatient refers to admission = '+'; outpatient refers to admission = '-'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1042,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "alkaliphophatase (ALP) within normal range refers to ALP < 300",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1043,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "total protein (TP) below the lower range of the normal index refers to TP < 6.0",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1044,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "female refers to SEX = 'F'; total protein (TP) beyond the normal index refers to TP > 8.5;\ndeviation of TP index from normal refers to SUBTRACT(TP, 8.5)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1045,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "male = SEX = 'M'; albumin not within range refers to ALB < = 3.5 or ALB > = 5.5",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1046,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "Year(Birthday) = '1982'; albumin is within normal range refers to ALB between 3.5 and 5.5",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1047,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "uric acid (UA) beyond the normal range refers to UA > 8.0 and SEX = 'M' or UA > 6.5 and SEX = 'F'; female refers to Sex = 'F'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1048,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "uric acid (UA) with normal range refers to UA < 8.0 and SEX = 'M' or UA < 6.5 and SEX = 'F'; average UA index refers to AVG(UA)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1049,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "urea nitrogen (UN) just within the borderline of passing refers to UN = 29",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1050,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "within the UN normal index refers to UN < 30; Diagnosis = 'RA'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1051,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "creatinine (CRE) out of the normal range refers to CRE > = 1.5; Male refers to Sex = 'M'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1052,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "creatinine (CRE) not within the normal range refers to CRE > = 1.5; male refers to Sex = 'M'; female refers to Sex = 'F'; calculation = (SUM(SEX = 'M') > SUM(SEX = 'F')) where CRE > = 1.5",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1053,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "the highest total bilirubin refers to MAX(T-BIL)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1054,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "total bilirubin (T-BIL) not within normal range refers to T-BIL > = 2.0",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1055,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "oldest patient refers to MIN(birthday); highest total cholesterol refers to MAX(T-CHO);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1056,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "average age = DIVIDE(SUM(SUBTRACT(YEAR(NOW()), YEAR(birthday))), COUNT(ID)); male patient refers to gender = 'M'; high cholesterol refers to `T-CHO` > = 250;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1057,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "triglyceride (TG) index greater than 100 of the normal range refers to TG > 300;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1058,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "triglyceride (TG) level beyond the normal range refers to TG > = 200; more than 50 years of age = SUBTRACT(year(current_timestamp), year(Birthday)) > 50;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1059,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "outpatient refers to Admission = '-'; normal range of creatinine phosphokinase refers to CPK < 250;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1060,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "born between 1936-1956 refers to year(Birthday) BETWEEN '1936' AND '1956'; male patients refers to sex = 'M'; creatinine phosphokinase beyond the normal range refers to CPK > = 250;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1061,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "age = SUBTRACT(year(current_timestamp), year(Birthday)); blood glucose (GLU) not within normal range refers to GLU > = 180; total cholesterol(T-CHO) within normal range refers to `T-CHO` < 250;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1062,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "blood glucose (GLU) index that were within normal range refers to GLU < 180; data that was first recorded in 1991 refers to year(Description) > = 1991;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1063,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "abnormal white blood cell count refers to WBC < = 3.5 or WBC > = 9.0;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1064,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "patient's diagnosis refers to Diagnosis; lower red blood cell refers to RBC < 3.5; age = SUBTRACT(year(current_timestamp), year(Birthday));",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1065,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "female patient refers to Sex = 'F'; age 50 and above = SUBTRACT(year(current_timestamp), year(Birthday)) > = 50; abnormal red blood cell count refers to RBC < = 3.5 or RBC > = 6.0; Admission = '+' means the patient was admitted to the hospital; Admission = '-' means the patient was not admitted to the hospital;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1066,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "outpatients refers to Admission = '-'; low hemoglobin level refers to HBG < 10;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1067,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "diagnosed with SLE refers to Diagnosis = 'SLE'; oldest refers to MIN(Birthday); normal hemoglobin level refers to 10 < HGB < 17;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1068,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "age = SUBTRACT(year(current_timestamp), year(Birthday)); patient with two or more laboratory examinations refers to COUNT(ID) > 2; hematoclit level exceeded the normal range refers to HCT > = 52;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1069,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "laboratory examinations in 1991 refers to Date like '1991%'; average hematoclit level = AVG(HCT); hematoclit level that is lower than the normal range refers to HCT < 29;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1070,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "abnormal platelet level refers to PLT < 100; platelet level lower than normal range refers to PLT < 100; how much = SUBTRACT(SUM(PLT < 100), SUM(PLT > 400)); platelet level higher than normal range refers to PLT > 400;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1071,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "laboratory examinations take in 1984 refers to Date like '1984%'; below 50 years old = SUBTRACT(year(current_timestamp), year(Birthday)) < 50; normal platelet level refers to PLT between 100 and 400;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1072,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "older than 55 years old = SUBTRACT(year(current_timestamp), year(Birthday)) > 55; percentage = MULTIPLY(DIVIDE(SUM(PT > = 14 AND SEX = 'F'), SUM(PT > = 14)), 1.0); female refers to Sex = 'F'; abnormal prothrombin time (PT) refers to PT > = 14;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1073,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "first came to the hospital after year 1992 refers to year(`First Date`) > 1992; prothrombin time (PT) level that are normal refers to PT < 14;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1074,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "examinations done after 1997/1/1 refers to `Examination Date` > '1997-01-01'; normal activated partial prothrom bin time refesr to APTT < 45;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1075,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "abnormal activated partial prothrom bin time refers to APTT > 45; mild thrombosis refers to Thrombosis = 3; Only count ones without repetitive.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1076,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "male patients refers to Sex = 'M'; normal level of white blood cells refers to WBC between 3.5 and 9.0; abnormal fibrinogen level refers to FG < = 150 or FG > = 450; Don't compute repetitive ones.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1077,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "born after 1980/1/1 refers to Birthday > '1980-01-01'; normal fibrinogen level refers to FG between 150 and 450; Should return the number of distinct patients.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1078,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "disease names refers to Diagnosis; proteinuria level higher than normal refers to `U-PRO` > = 30;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1079,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "normal proteinuria level refers to 0 < `U-PRO` < 30; diagnosed with SLE refers to Diagnosis = 'SLE';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1080,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "Ig G lower than normal refers to IGG < 900; symptom of abortion refers to Symptoms = 'abortion';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1081,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "normal Ig G level refers to IGG BETWEEN 900 AND 2000; have symptoms refers to Symptoms IS NOT NULL;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1082,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "highest Ig A within the normal range refers to MAX(IGA BETWEEN 80 AND 500);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1083,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "normal Ig A level refers to IGA BETWEEN 80 AND 500; came to the hospital after 1990/1/1 refers to YEAR(`First Date`) > = 1990;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1084,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "abnormal Ig M level refers to IGM NOT BETWEEN 40 AND 400; most common disease refers to MAX(COUNT(Diagnosis));",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1085,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "normal C-reactive protein refers to CRP LIKE '+' OR CRP LIKE '-' OR CRP < 1.0; don't have data recorded refers to Description IS NULL;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1086,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "C-reactive protein level is abnormal refers to CRP NOT IN('+-', '-') AND CRP > = 1.0; aren't 18 refers = CRP > = 1.0 AND SUBTRACT((YEAR(CURDATE()), YEAR(Birthday))) < 18; Should compute the number of distinct ones.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1087,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "normal Rhuematoid Factor refers TO RA IN('-', '+-'); positive measure of degree of coagulation refers to KCT = '+'; Should compute the number of distinct ones",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1088,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "diseases refers to Diagnosis; born after 1959/1/1 refers to YEAR(Birthday) > = 1959; normal Rhuematoid Factor refers to RA IN('-', '+-');",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1089,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "RF is normal refers to RF < 20; older than 60 = SUBTRACT((YEAR(CURDATE()), YEAR(Birthday))) > 60;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1090,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "normal RF refers to RF < 20; don't have thrombosis refers to Thrombosis = '0';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1091,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "normal level of complement 3 refers to C3 > 35; have a P pattern observed in the sheet of ANA examination refers to ANA Pattern = 'P'; Should compute the number of distinct ones",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1092,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "Hematoclit is normal refers to 29 < N < 52; highest anti-Cardiolipin antibody concentration refers to MAX(`aCL IgA`);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1093,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "APS will result in Blood Clots in veins; normal level of complement 4 refers to C4 > 10; Should compute the number of different ones",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1094,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "normal level of anti-ribonuclear protein refers to RNP = '-', '+-'; And'-' means 'negative'; '+-' refers to '0'; admitted to the hospital refers to Admission = '+'; Should compute the number of distinct ones",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1095,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "youngest patient refers to MAX(Birthday); abnormal anti-ribonuclear protein level refers to RNP NOT IN('-', '+-'); date of birth refers to Birthday;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1096,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "normal anti-SM refers to SM IN('-', '+-'); SM = 'negative' means '-'; SM = '0' means '+-'; SM = '1' means '+'; most severe degree of thrombosis refers to Thrombosis = '1';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1097,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "abnormal anti-SM refers to SM NOT IN('-', '+-'); youngest refers to MAX(Birthday);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1098,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "examination done after 1997/1/1 refers to `Examination Date` > = 1997-01-01; normal anti-scl70 refers to SC170 IN('-', '+-');",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1099,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "normal anti-scl70 refers to SC170 IN('-', '+-'); male refers to Sex = 'M'; symptom of vertigo refers to symptoms = 'vertigo'; Should compute the number of distinct ones",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1100,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "normal anti-SSA refers to SSA IN('-','+-'); came to the hospital before 1990 refers to YEAR(`First Date`) < 1990; Should compute the number of distinct ones",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1101,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "first patient refers to ID with MIN(`First Date`); abnormal anti-SSA refers to SSA NOT IN('-', '+-');",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1102,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "normal anti-SSB refers to SSB IN('-', '+-'); '-' is expressed as 'negative' and '+-' is expressed as '0' in the database ; diagnosed with SLE refers to Diagnosis = 'SLE'; Should compute the number of distinct ones",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1103,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "anti-SSB are normal refers to SSB IN('-', '+-'); have other symptoms refers to Symptoms IS NOT NULL; Should compute the number of distinct ones",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1104,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "normal level of anti-centromere refers to CENTROMEA IN('-', '+-'); normal level of anti-SSB refers to SSB IN('-', '+-'); male refers to Sex = 'M';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1105,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "abnormal level of anti-DNA refers to DNA > = 8; diseases refers to Diagnosis;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1106,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "normal anti-DNA level refers to DNA < 8; data are not recorded refers to Description IS NULL; Should compute the number of unique ones",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1107,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "normal level of anti-DNA-II refers to DNA-II < 8; admitted to the hospital refers to Admission = '+';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1108,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "abnormal level of glutamic oxaloacetic transaminase refers to GOT > = 60; percentage = MULTIPLY(DIVIDE(COUNT(ID WHERE GOT > = 60 AND Diagnosis = 'SLE'), COUNT(ID WHERE GOT > = 60)), 1.0);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1109,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "male refers to Sex = 'M'; glutamic oxaloacetic transaminase in the normal range refers to GOT < 60;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1110,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "abnormal level of glutamic oxaloacetic transaminase refers to GOT > = 60; youngest refers to MAX(Birthday);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1111,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "highest glutamic pylvic transaminase in the normal range refers to MAX(GPT < 60);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1112,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "normal glutamic pylvic transaminase level refers to GOT < 60; male refers to Sex = 'M';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1113,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "highest lactate dehydrogenase in the normal range refers to MAX(LDH < 500); when the data first recorded refers to MIN(First Date);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1114,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "latest patient refers to ID with MAX('First Date'); abnormal level of lactate dehydrogenase refers to LDH > = 500;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1115,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "abnormal alkaliphophatase level refers to ALP > = 300; admitted to the hospital refers to Admission = '+';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1116,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "followed at the outpatient clinic refers to Admission = '-'; normal level of alkaliphophatase refers to ALP < 300;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1117,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "total protein is lower than normal refers to TP < 6.0;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1118,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "diagnosed with SJS refers to Diagnosis = 'SJS'; normal level of total protein refers to TP > 6.0 and TP < 8.5;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1119,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "examination date refers to Date; albumin is the highest in the normal range refers to MAX(ALB > 3.5 and ALB < 5.5);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1120,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "male refers to Sex = 'M'; normal level of both albumin and total protein refers to ALB > 3.5 and ALB < 5.5 AND TP between 6.0 and 8.5;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1121,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "anti Cardiolipin antibody concentration refers to `aCL IgG`, `aCL IgM`, `aCL IgA`; female patient refers to Sex = F'; highest uric acid level in the normal range refers to MAX(UA > 6.50);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1122,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "highest anti-nucleus antibody concentration level refers to MAX(ANA); normal creatinine level refers to CRE < 1.5;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1123,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "creatinine level is normal refers to CRE < 1.5; anti Cardiolipin antibody concentration level is the highest refers to MAX(aCL IgA);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1124,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "total bilirubin is over the normal range refers to `T-BIL` > = 2.0; peripheral pattern is observed in the sheet of ANA examination refers to that ANA Pattern contains 'P';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1125,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "anti-nucleus antibody concentration refers to ANA; total bilirubin is the highest in the normal range refers to MAX(`T-BIL` < 2.0);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1126,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "total cholesterol is higher than normal refers to `T-CHO` > = 250; negative measure of degree of coagulation refers to KCT = '-' ;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1127,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "total cholesterol is within the normal range refers to `T-CHO` < 250; P pattern observed in the sheet of ANA examination refers to ANA Pattern = 'P';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1128,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "normal level of triglyceride refers to TG < 200; have other symptoms refers to Symptoms is not null;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1129,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "disease name referse to Diagnosis; highest level of triglyceride within the normal range refers to MAX(TG < 200);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1130,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "no thrombosis refers to Thrombosis = 0 ; abnormal level of creatinine phosphokinase refers to CPK < 250;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1131,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "normal range of creatinine phosphokinase refers to CPK < 250; positive measure of degree of coagulation refers to KCT = '+' or RVVT = '+' or LAC = '+' ;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1132,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "oldest patient refers to MIN(Birthday); blood glucose is abnormal refers to GLU > 180;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1133,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "normal blood glucose refers to GLU < 180; don't have thrombosis refers to Thrombosis = 0;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1134,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "accepted to the hospital refers to Admission = '+'; normal level of white blood cells refers to WBC between 3.5 and 9.0;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1135,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "diagnosed with SLE refers to Diagnosis = 'SLE'; normal white blood cell level refers to WBC between 3.5 and 9.0;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1136,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "RBC < = 3.5 or RBC > = 6.0 means the patient has an abnormal level of red blood cell; 3.5 < RBC < 6.0 means the patient has a normal level of red blood cell; followed at the outpatient clinic refers to Admission = '-';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1137,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "normal platelet level refers to PLT > 100 and PLT < 400; have other symptoms refers to Diagnosis is not null;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1138,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "PLT > 100 and PLT < 400 means platelet level is within the normal range; PLT < 100 and PLT > 400 means platelet level is not within the normal range; diagnosed with MCTD refers to Diagnosis = 'MCTD';",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1139,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "male refers to Sex = 'M'; normal prothrombin time refer to PT < 14; average prothrombin time = AVG(PT);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1140,
    "tables": [
      "dataroom_eval_bird.thrombosis_prediction.laboratory",
      "dataroom_eval_bird.thrombosis_prediction.patient",
      "dataroom_eval_bird.thrombosis_prediction.examination"
    ],
    "instructions": [
      {
        "content": "severe thrombosis refers to Thrombosis = 2 or 1; normal prothrombin time refers to PT < 14;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1141,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      { "content": "major refers to major_name", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 1142,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [{ "content": "", "type": "TEXT_INSTRUCTION" }]
  },
  {
    "room_id": 1143,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "full name refers to first_name, last_name;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1144,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "Women's Soccer is an event name",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1145,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "Women's Soccer is an event name; phone numbers refers to phone",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1146,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "Women's Soccer is an event name; T-shirt that is in medium size refers to t_shirt_size = 'Medium'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1147,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "event with highest attendance refers to MAX(COUNT(link_to_event))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1148,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "Vice President is a position of the Student Club",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1149,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "events attended in 2019 refers to YEAR(event_date) = 2019",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1150,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "meetings events refers to type = 'Meeting'; attended by more than 10 members refers to COUNT(event_id) > 10",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1151,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "name of events refers to event_name; attendance of over 20 students COUNT(event_id) > 20",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1152,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "meetings in 2020 refers to type = 'Meeting' where YEAR(event_date) = 2020; average = DIVIDE(COUNT(event_id), COUNT(DISTINCT event_name))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1153,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "item in support of club events refers to expense_description; most expensive refers to MAX(cost)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1154,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "'Environmental Engineering' is the major name",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1155,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "full name of members refers to first_name, last_name; 'Laugh Out Loud' is an event name;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1156,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "'Law and Constitutional Studies' is the major name",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1157,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "'Vice President' is a position of Student Club; funds received refers to amount;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1158,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "amount spent refers to spent; spend on food in September Meeting refers to category = 'Food' where event_name = 'September Meeting'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1159,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "'President' is a position of Student Club;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1160,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "full name of member refers to first_name, last_name",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1161,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "amount spent refers to spent; spend on food in September Meeting refers to category = 'Advertisement' where event_name = 'September Meeting'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1162,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "total budgeted amount refers to SUM(amount) where event_name = 'October Speaker'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1163,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "event_name = 'October Meeting' where event_date = '2019-10-08'; approved = True means expenses was approved; approved = False means expenses was not approved",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1164,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "events in September and October refers to month(expense_date) = 9 AND MONTH(expense_date) = 10",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1165,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "SUBTRACT(spent where YEAR(event_date) = 2019, spent where YEAR(event_date) = 2020)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1166,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "'Spring Budget Review' is an event name;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1167,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "'Poster' is an event description; on 2019/9/14 refers to event_date = '2019-09-04'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1168,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "remaining of budget refers to remaining, biggest budget for 'Food' refers to MAX(budget.amount) where category = 'Food'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1169,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "fundraising on 2019/9/14 refers to source = 'Fundraising' where date_received = '2019-09-14'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1170,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "hometown county refers to county",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1171,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "'November Meeting' is an event name; remaining < 0 means the cost had exceeded the budget",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1172,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "'September Speaker' is an event name; total number of budget amount refers to SUM(amount)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1173,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "'Post Cards, Posters' is an expense description; on 2019/8/20 refers to expense_date = '2019-8-20'; status of event refers to event_status",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1174,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "'Human Development and Family Studies' is a major name; wear large size t-shirt refers to t_shirt_size = 'Large'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1175,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "'Vice President' is a position of Student Club",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1176,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "hometown state refers to state;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1177,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "'President' is a position of Student Club",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1178,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "date the dues was paid refers to received_date where source = 'Dues'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1179,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "full name refers to first_name, last_name; first paid dues refers to MIN(received_date) where source = 'Dues'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1180,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "DIVIDE(SUM(amount where category = 'Advertisement' and event_name = 'Yearly Kickoff'), SUM(amount event_name = 'October Meeting' and category = 'Advertisement'))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1181,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "DIVDE(SUM( amount where category = 'Parking' and event_name = 'November Speaker'), COUNT(event_name = 'November Speaker)) * 100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1182,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "total cost of the pizzas refers to SUM(cost) where expense_description = 'Pizza'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1183,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "Orange County is the county, Virginia is the state",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1184,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "hometown refers to city, county, state",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1185,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "expense of budget refers to expense_description; lowest remaining refers to MIN(remaining)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1186,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "'October Meeting' is an event name;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1187,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "college most members go refers to MAX(COUNT(major.college))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1188,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      { "content": "major in refers to major_name", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 1189,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "event refers to event_name; highest budget amount refers to MAX(amount)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1190,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "expense refers to expense_description; 'Vice President' is a position of the Student Club",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1191,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "'Women's Soccer' is the event name;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1192,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "when the income was received refers to date_received",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1193,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "list all members means to list all the full name; full name refers to first_name, last_name;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1194,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "closed events refers to event_name where status = 'Closed'; highest spend-to budget ratio refers to MAX(DIVIDE(spent, amount))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1195,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "highest amount of budget spend refers to MAX(spent)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1196,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "meeting events refers to type = 'Meeting'; held in 2020 refers to YEAR(event_date) = 2020",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1197,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "total amount of money spent refers to SUM(spent); spent for food refers to category = 'Food'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1198,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "name of students means the full name; full name refers to first_name, last_name; attended more than 7 events refers to COUNT(link_to_event) > 7",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1199,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "majored in music refers to major_name = 'Interior Design'; 'Community Theater' is the event name;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1200,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "name of students means the full name; full name refers to first_name, last_name; Georgetown is a city; South Carolina is a state",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1201,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "income generated refers to income.amount",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1202,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "name of students means the full name; full name refers to first_name, last_name; generate income more than $50 refers to income.amount > 40",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1203,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "'Baseball game' is an event name; total expense refers to SUM(cost)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1204,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "'Yearly Kickoff' is an event name;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1205,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "name of students means the full name; full name refers to first_name, last_name; generate the highest income refers to MAX(income.amount);",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1206,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "event refers to event_name where MIN(cost)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1207,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "DIVIDE(SUM(cost where event_name = 'Yearly Kickoff'), SUM(cost)) * 100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1208,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "DIVDE(SUM(major_name = 'Finance'), SUM(major_name = 'Physics'))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1209,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "top source funds refers to MAX(source) where date_received BETWEEN '2019-09-01' and '2019-09-30'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1210,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "full name refers to first_name, last_name; 'Secretary' is a position of Student Club",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1211,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "'Physics Teaching' is the major name;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1212,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "event 'Community Theater' in 2019 refers to event_name = 'Community Theater' where YEAR(event_date) = 2019",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1213,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      { "content": "major refers to major_name;", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 1214,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "DIVIDE(SUM(spent), COUNT(spent)) where category = 'Food'; 'event in the past' means event_status = 'Closed'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1215,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "event refers to event_name; highest amount spent on advertisement refers to MAX(spent) where category = 'Advertisement'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1216,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "'Women's Soccer' is an event name",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1217,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "DIVIDE(SUM(type = 'Community Service'), COUNT(event_id)) * 100 where event_date BETWEEN' 2019-01-01' and '2019-12-31'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1218,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "'Posters' is the expense description; 'September Speaker' is an event name",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1219,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "most popular size of t-shirt ordered refers to MAX(COUNT(t_shirt_size))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1220,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "closed events refers to event_name where status = 'Closed'; exceed the budget the most refers to MIN(remaining) where remaining < 0",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1221,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "total value refers to SUM(cost); 'October Meeting' is an event name;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1222,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "'April Speaker' is an event name; amount budgeted refers to budget; budget categories refers to category",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1223,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "MAX(amount) where category = 'Food'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1224,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "MAX(amount) where category = 'Advertisement'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1225,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "total cost spent for Parking refers to SUM(cost) where expense_description = 'Parking'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1226,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "total expense refers SUM(cost) where expense_date = '2019-08-20'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1227,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "full name refers to first_name, last name",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1228,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "kind of expenses refers to expense_description",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1229,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "kind of expenses refers to expense_description; t_shirt_size = 'X-Large'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1230,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "incurred less than 50USD refers to cost < 50",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1231,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "name of major refers to major_name",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1232,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      { "content": "'Business' is the major name", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 1233,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "members of Economics refers to major_name = 'Business'; t_shirt_size = 'Medium'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1234,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "remaining budget more than 30 USD refers to remaining > 30",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1235,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "held at MU 215 refers to location = 'MU 215'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1236,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "taken place in 2020-03-24T12:00:00 refers to event_date = '2020-03-24T12:00:00'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1237,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "name of major refers to major_name; 'Vice President' is position of Student Club",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1238,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "DIVIDE(SUM(position = 'Member' and major_name = 'Mathematics'), COUNT(member_id)) * 100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1239,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "'MU 215' is the location of event",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1240,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "amount of 50 refers to amount = 50",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1241,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "among the members refers to position = 'Member'; extra large t-shirt size refers to t_shirt_size = 'X-Large'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1242,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "'Environmental Engineering' is the major name;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1243,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "budget category refers to category; events located at refers to location; type = 'Guest Speaker'; 0 budget spent refers to spent = 0",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1244,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "'Electrical and Computer Engineering Department' is the department; members enrolled refers to position = 'Member'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1245,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "name of social event refers to event_name where type = 'Social'; 'Vice President' is position; located at refers to location",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1246,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "bought pizza on 09/10/2019 refers to expense_description = 'Pizza' where expense_date = '2019-09-10'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1247,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "members of the club refers to position = 'Member'; 'Women's Soccer' is event name;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1248,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "t_shirt_size = 'Medium' where position = 'Member'; percentage = DIVIDE(COUNT(amount = 50), COUNT(member_id)) * 100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1249,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "zip codes that have post office boxes refers to type = 'PO Box'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1250,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "name of events refers event_name; game event that was closed refers to type = 'Game' where status = 'Closed'; event_date BETWEEN '2019-03-15' and '2020-03-20'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1251,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "have paid more than 50 dollar refers to cost > 50",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1252,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "approved from 1/10/2019 to 11/19/2019 refers to approved = 'true' and expense_date BETWEEN '2019-01-10' and '2019-11-19'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1253,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "'College of Agriculture and Applied Sciences' is the college; majored in business refers to major_name = 'Business'; phone numbers refers to phone",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1254,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "expense_date BETWEEN '2019-09-10' and '2019-11-19'; cost > 20",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1255,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "'education' is the major name; 'Member' is a position of club;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1256,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "went over budget refers to remaining < 0; percentage = DIVIDE(SUM(remaining < 0), COUNT(event_id)) * 100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1257,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "event_date BETWEEN '2019-11-01' and '2020-03-31'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1258,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "expense refers to expense_description; spend more than fifty dollars on average refers to DIVIDE( SUM(cost), COUNT(expense_id) ) > 50",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1259,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "full name refers to first_name, last_name; t_shirt_size = 'X-Large'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1260,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "DIVIDE(SUM(type = 'PO Box'), COUNT(zip_code)) * 100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1261,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "name of event refers to event_name; underspend its budget refers to remaining > 0",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1262,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "name of event refers to event_name; date of event refers to event_date; expenses for pizza refers to expense_description = 'Pizza' where cost > 50 and cost < 100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1263,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "full name refers to first_name, last_name; major of members refers to major_name; spend more than a hundred dollars on an expense refers to cost > 100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1264,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "more than fifty incomes refers to income > 40",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1265,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "paid the most amount refers to for expense incurred in more than one event refers to MAX(cost where COUNT(event_id) > 1)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1266,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "position other than a member refers to position ! = 'Member'; average amount paid = DIVIDE( SUM(cost), COUNT(event_id))",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1267,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "name of events refers to event_name; less than average parking cost refers to cost < DIVIDE(SUM(cost), COUNT(event_id)) where category = 'Parking'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1268,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "game events refers to type = 'Game'; percentage = DIVIDE( SUM(cost), COUNT(event_id)) * 100",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1269,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "budget allowed refers to expense_description; expense_description = 'Water, chips, cookies'; most money refers to MAX(cost)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1270,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "full name refers to first_name, last_name; spend the most money refers to MAX(expense.cost)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1271,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "full name refers to first_name, last_name; contact number refers to phone; had spent more than average on each expense refers to cost > AVG(cost)",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1272,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "SUBTRACT( DIVIDE( SUM(state = 'Maine'), COUNT(position = 'Member')), DIVIDE( SUM(state = 'Vermont'), COUNT(position = 'Member')) )",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1273,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      { "content": "major refers to major name;", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 1274,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "full name refers to first_name, last name; spent money for refers expense description; expense_description = 'Water, Veggie tray, supplies'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1275,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "'Elementary Education' is the major name; phone numbers refers to phone",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1276,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "amount budgeted refers to amount, 'January Speaker' is the event name;",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1277,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "budgeted for food refers to category = 'Food'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1278,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "full name refers to first_name, last_name, amount of funds received refers to amount, received funds on date refers to date_received",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1279,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "'Posters' refers to expense description",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1280,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "total amount spent = SUM(spent) where category = 'Speaker Gifts'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1281,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      { "content": "hometown refers to city", "type": "TEXT_INSTRUCTION" }
    ]
  },
  {
    "room_id": 1282,
    "tables": [
      "dataroom_eval_bird.student_club.income",
      "dataroom_eval_bird.student_club.budget",
      "dataroom_eval_bird.student_club.zip_code",
      "dataroom_eval_bird.student_club.expense",
      "dataroom_eval_bird.student_club.member",
      "dataroom_eval_bird.student_club.attendance",
      "dataroom_eval_bird.student_club.event",
      "dataroom_eval_bird.student_club.major"
    ],
    "instructions": [
      {
        "content": "full name refers to first_name, last_name, hometown of Lincolnton, North Carolina refers to city = 'Lincolnton' AND state = 'North Carolina'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1283,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [{ "content": "", "type": "TEXT_INSTRUCTION" }]
  },
  {
    "room_id": 1284,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "ratio of costumers who pay in EUR against customers who pay in CZK = count(Currency = 'EUR') / count(Currency = 'CZK').",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1285,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "Year 2012 can be presented as Between 201201 And 201212, which means between January and December in 2012",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1286,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "Average Monthly consumption = AVG(Consumption) / 12; Year 2013 can be presented as Between 201301 And 201312, which means between January and December in 2013",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1287,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "Year 2011 can be presented as Between 201101 And 201112, which means between January and December in 2011",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1288,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "Year 2012 can be presented as Between 201201 And 201212, which means between January and December in 2012; Difference in Consumption = CZK customers consumption in 2012 - EUR customers consumption in 2012",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1289,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "The first 4 strings of the values in the table yearmonth can represent year.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1290,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "'in 2013' refers to the first 4 strings of yearmonth.date = '2013', The 5th and 6th string of the date can refer to month.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1291,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "annual average consumption of customer with the lowest consumption in each segment = total consumption per year / the number of customer with lowest consumption in each segment; Difference in annual average = SME's annual average - LAM's annual average; Difference in annual average = LAM's annual average - KAM's annual average; Year 2013 can be presented as Between 201301 And 201312; First 4 strings of Date represents the year.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1292,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "Increase or Decrease = consumption for 2013 - consumption for 2012; Percentage of Increase = (Increase or Decrease / consumption for 2013) * 100%; Between 2012 And 2013 can be represented by Between 201201 And 201312; First 4 strings of Date represents the year.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1293,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "Between August And November 2013 refers to Between 201308 And 201311; First 4 strings of Date represents the year.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1294,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "Computation of more discount = Total no. of discount gas stations in Czech Republic - Total no. of discount gas stations in Slovakia",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1295,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "April 2013 refers to 201304 in the yearmonth.date",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1296,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "Amount of more SMEs = Total of SMEs uses Czech Koruna - Total of SMEs uses Euro",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1297,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "October 2013 refers to 201310 in the yearmonth.date",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1298,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "May 2013 refers to yearmonth.date = 201305",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1299,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "Percentage of LAM customer consumed more than 46.73 = (Total no. of LAM customers who consumed more than 46.73 / Total no. of LAM customers) * 100%.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1300,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "Percentage of KAM uses Euro = (Total of KAM uses Euro / Total of KAM) * 100%.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1301,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "February 2012 refers to '201202' in yearmonth.date",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1302,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "Percentage of premium gas station = (Total of premium gas station in Slovakia / Total of gas station in Slovakia) * 100%.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1303,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "September 2013 refers to yearmonth.date = '201309'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1304,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "June 2012 refers to yearmonth.date = '201206'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1305,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "The first 4 strings of yearmonth.date can represent the year.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1306,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "Monthly consumption = SUM(consumption) / 12",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1307,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "September 2013 refers to 201309; First 4 strings represent the year",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1308,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "June 2013 refers to '201306'; First 4 strings represent the year",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1309,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "In January, 2012 means Date contains '2012-01'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1310,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "Gas station in the Czech Republic implies that Country = CZE",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1311,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "Gas station in the Czech Republic implies that Country = 'CZE'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1312,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "'2012/8/25' can be represented by '2012-08-25'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1313,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "'2012/8/24' can be represented by '2012-08-24'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1314,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "'2012/8/23 21:20:00' can refer to date = '2012-08-23' AND T1.time = '21:20:00' in the database",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1315,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "'2012/8/26' can be represented by '2012-08-26'; The morning refers to the time before '13:00:00'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1316,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "'2012/8/24 12:42:00' can refer to date = '2012-08-24' AND T1.time = '12:42:00' in the database",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1317,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "'2012/8/24' can be represented by '2012-08-24'; expense and the consumption has the similar meaning.",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1318,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "Gas station in the Czech Republic implies that Country = CZE; '2012/8/26' can be represented by '2012-08-26'",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1319,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "June of 2013 means Date contains '201306' in the yearmonth.date of the database",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1320,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "'2012/8/24' can be represented by '2012-08-24'; Consumption decrease rate = (consumption_2012 - consumption_2013) / consumption_2012",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1321,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "January 2012 refers '201201' in the table transactions_1k",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1322,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "Description of products contains full name",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1323,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "verage price per single item = price / amount",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  },
  {
    "room_id": 1324,
    "tables": [
      "dataroom_eval_bird.debit_card_specializing.customers",
      "dataroom_eval_bird.debit_card_specializing.gasstations",
      "dataroom_eval_bird.debit_card_specializing.products",
      "dataroom_eval_bird.debit_card_specializing.yearmonth",
      "dataroom_eval_bird.debit_card_specializing.transactions_1k"
    ],
    "instructions": [
      {
        "content": "August of 2012 means Date contains '201208' in the yearmonth.date of the database; Price per unit of product = Price / Amount",
        "type": "TEXT_INSTRUCTION"
      }
    ]
  }
]
